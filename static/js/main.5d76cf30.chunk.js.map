{"version":3,"sources":["AppInitializing.js","AppError.js","SearchField.js","use-debounce.js","utils.js","use-query-string.js","use-previous.js","constants.js","Viewer.js","with-either.js","App.js","serviceWorker.js","annotation-overlay-meta-track.js","ridge-plot-track.js","stratified-bed-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","tss-track.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","backgroundColor","AppInitializing","classes","className","Backdrop","open","CircularProgress","inputRoot","background","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","boxShadow","transition","focused","input","height","padding","textFieldRoot","fontWeight","transform","fetchJsonFromUrl","url","query","a","fetch","response","json","results","map","result","type","GeneIcon","props","SvgIcon","viewBox","d","GeneOption","Grid","key","option","geneName","container","direction","alignItems","fontSize","VariantOption","Option","SearchField","useState","setOpen","options","setOptions","inputValue","searchQuery","setSearchQuery","debouncedSearchQuery","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","loading","length","autocompleteClasses","active","Array","isArray","searchUrl","Promise","all","then","resultList","flat","multiple","autocompleteOptions","Autocomplete","larger","onChange","event","newValue","onInputChange","newInputValue","fullWidth","style","width","onOpen","onClose","getOptionSelected","_value","getOptionLabel","renderInput","params","TextField","id","label","variant","size","InputProps","endAdornment","Fragment","renderOption","renderTags","v","getTagProps","index","Chip","icon","defaultProps","identity","contains","b","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","rgba","Float32Array","forEach","i","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","y","dashSize","diff","sign","abs","stepSize","numSteps","moveTo","lineTo","getQueryStringValue","decoder","queryString","parse","window","location","search","setQueryStringValue","encoder","values","newQsValue","stringify","strict","origin","pathname","history","pushState","path","toAbsPosition","position","chromInfo","absPosition","indexOf","split","chrom","pos","chrPositions","useQueryString","initialValue","undefined","setValue","onSetValue","useCallback","usePrevious","ref","useRef","current","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","GENE_SEARCH_URL","VARIANT_SEARCH_URL","DEFAULT_STRATIFICATION","categoryField","axisShowGroupSeparator","axisNoGroupColor","groups","categories","DEFAULT_VIEW_CONFIG_ENHANCER","editable","trackSourceServers","views","uid","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","visible","chromInfoPath","tracks","top","contents","stroke","fontIsLeftAligned","showMousePosition","mousePositionColor","tilesetUid","server","fromViewUid","projectionFillColor","projectionStrokeColor","projectionFillOpacity","projectionStrokeOpacity","strokeWidth","plusStrandColor","minusStrandColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","focusRegion","name","toolTip","field","numDecimals","other","binSize","axisAlign","labelPosition","arcStyle","indicatorStyle","labelColor","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","markColorHighlight","markColorDehighlight","markMinWidth","markHeight","rowHeight","overlays","includes","extent","minWidth","fill","fillOpacity","outline","outlineOpacity","outlineWidth","outlinePos","metaTracks","overlaysTrack","annotationTracks","layout","w","h","x","initialXDomain","initialYDomain","DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY","zoomFixed","labelShowResolution","labelShowAssembly","markArea","markResolution","valueScaling","colorRange","rowPadding","rowNormalization","rowSelections","rowIdToCategory","fn","args","rowCategories","reduce","row","group","category","axisLabelColor","axisLabelBackground","sample","showRowLabels","rowLabelSize","root","display","right","bottom","left","appBar","marginLeft","palette","common","black","white","grey","flexShrink","drawerPaper","textInput","toolbar","mixins","content","flexDirection","flexGrow","spacing","higlass","higlassPrimary","higlassSecondary","higlassTitleBarFontSize","higlassEnhancersTitleBar","margin","higlassDnaAccessibilityTitleBar","higlassSeparator","toolbarExtra","paddingLeft","paddingRight","chrPosUrlEncoder","chrPos","replace","chrPosUrlDecoder","updateViewConfigXDomain","newXDomainStart","newXDomainEnd","force","viewConfig","xDomain","focusGeneRegion","getFocusGeneRegion","focusVariantRegion","getFocusVariantRegion","Number","isNaN","min","updateViewConfigFocusVariant","trackIdxs","trackIdx","updateViewConfigVariantYScale","yScale","Viewer","focusGene","setFocusGene","focusVariant","setFocusVariant","hideUnfocused","setHideUnfocused","matrixColoring","setMatrixColoring","variantYScale","setVariantYScale","dnaAccessLabels","setDnaAccessLabels","absToChr","slice","join","xDomainStart","setXDomainStart","xDomainEnd","setXDomainEnd","focusGeneOption","setFocusGeneOption","focusVariantOption","setFocusVariantOption","prevFocusGeneOption","prevFocusVariantOption","higlassEnhancerApi","higlassDnaAccessApi","focusGeneVariantOptions","useMemo","_focusGeneVariant","push","focusGeneStartPosition","chr","txStart","focusGeneEndPosition","txEnd","focusVariantPosition","xDomainStartAbs","xDomainEndAbs","viewConfigEnhancer","pipe","gene","start","end","n","focusStyle","updateViewConfigFocusStyle","coloring","opacityEncoding","deepClone","viewConfigDnaAccessibility","labels","numericalXDomainStart","isString","chrToAbs","numericalXDomainEnd","clearFocusGene","clearFocusVariant","focusVariantChangeHandler","higlassClickHandler","payload","fields","score","importance","higlassLocationChangeHandlerDb","debounce","absPos","r","higlassEnhancerInitHandler","higlassInstance","api","on","higlassDnaAccessibilityInitHandler","CssBaseline","AppBar","Toolbar","FormControl","newValues","newFocusElements","console","warn","Drawer","paper","anchor","Divider","Box","m","InputLabel","htmlFor","OutlinedInput","target","Button","onClick","newViewConfig","zoomTo","disableElevation","FormControlLabel","control","Switch","checked","toString","component","FormLabel","RadioGroup","aria-label","Radio","item","Typography","align","noWrap","sizeMode","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","withEither","ifEitherFn","EitherComponent","Component","createMuiTheme","primary","main","secondary","App","setChromInfo","ChromosomeInfo","_chromInfo","totalLength","catch","AppViewer","AppError","ThemeProvider","Boolean","hostname","match","createAnnotationOverlayMetaTrack","HGC","Error","pubSub","services","AnnotationOverlayMetaTrack","context","definition","getTrackObject","animate","onNewTilesLoaded","this","annotationTrackIds","Set","track","add","uuid","filter","annotationDrawnHandlerBound","annotationDrawnHandler","bind","drawnAnnotations","Map","tracksDrawingTiles","pubSubs","subscribe","tilesDrawnEndHandler","xStartAbs","xEndAbs","data","set","unsubscribe","has","updateOverlays","from","draw","clear","config","availableOptions","defaultOptions","FLOAT_BYTES","BYTES_PER_ELEMENT","VS","FS","COLORMAP_GRAYS","gray","getMax","fetchedTiles","Object","maxValue","tile","tileData","maxNonZero","Infinity","getNumRows","coarseShape","getRowMaxs","maxVector","maxValueByRow","scaleGraphics","xScale","drawnAtScale","tileK","domain","posOffset","scale","getNumPointsPerRow","numRows","positions","createRidgePlotTrack","libraries","format","d3Format","scaleLinear","d3Scale","tileProxy","RidgePlotTrack","updateOptions","coarsifyTileValues","tilesetInfo","bins_per_dimension","zoomLevel","tilePos","binsPerTileIn","binsPerTile","resolutions","chosenResolution","sort","tileWidth","tileHeight","tileX","tileY","xTilePos","yTilePos","minX","min_pos","minY","reverseYAxis","max_pos","max_width","selectRowsAggregationMode","selectRowsAggregationFn","maxNan","minNan","sumNan","meanNan","markAreaColor","utils","colorToHex","markColorRgbNorm","colorToRgba","markColorTex","markColorTexRes","markNumColors","oldMarkResolution","TILE_SIZE","oldRowHeight","oldRowPadding","oldRowNormalization","oldRowSelections","updateTiles","updateScales","oldShowRowLabels","updateRowLabels","drawLabel","rowLabelAlign","substring","pAxis","children","removeChildAt","rowLabels","rowLabel","destroy","row_infos","rowIndex","removeRowLabels","indicator","Sprite","WHITE","tint","Text","dimensions","yStart","xLabelOffset","getRowHeight","rowStepHeight","rowStepYCenter","addChild","newOptions","updateExistingGraphics","getTilePosAndDimensions","shape","binSizePx","floor","binSizeBp","binSizeBpHalf","binXPos","valuesByRow","j","meanValue","dense","subarray","rowIdx","actualTrackHeight","getTrackHeight","globalMax","valueScale","range","colorIndexScale","clamp","rowMaxs","rowValueScales","rowColorIndexScales","valueScaleByRow","colorIndexScaleByRow","rowScale","tiles","maxRows","positionsByRow","colorIndicesByRow","offsetSignsByRow","_xScale","size2d","size1d","unshift","flatMap","numPointsPerRow","verticesPerLine","verticesPerPoint","indices","Uint32Array","k","p1a","p1b","p1c","p1d","p2a","p2b","p2c","p2d","indexOffset","visibleTrackHeight","tilesToData","colorIndices","offsetSigns","toLineIndices","uniforms","UniformGroup","uLineColor","uNaNColor","uAreaColorTex","uAreaColorTexRes","uWidth","uMiter","shader","Shader","geometry","Geometry","numVerticesPoint","addAttribute","TYPES","FLOAT","addIndex","mesh","Mesh","newGraphics","Graphics","pMain","lineGraphics","removeChild","hasFetchedTiles","renderLines","newPosition","newXScale","newYScale","refreshTiles","trackX","trackY","calculateZoomLevel","calculateTileWidth","tile_size","invert","posInTileX","rowSelection","tileId","tileToLocalId","fetchedTile","text","selectRowsAggregationMethod","rowI","rowInfo","getVisibleData","HorizontalLine1DPixiTrack","datatype","orientation","pointToPosition","pt","cX","widthHalf","pointToIndex","base","pointToOpacity","opacity","pointToHighlight","highlight","getIs2d","get1dItemWidth","get2dItemWidth","yEnd","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","maxWidth","maxWidthItem","scaleScalableGraphics","getRegionId","createStratifiedBedTrack","scaleLog","opacityLogScale","StratifiedBedTrack","is2d","getItemWidth","getStart","getEnd","intervals","regionId","isLeftToRight","intervalTree","createIntervalTree","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","toLowerCase","categoryToY","yToCategory","groupSizes","groupSize","cat","groupLabelsPixiText","labelSize","markColorHighlightRgbNorm","markColorDehighlightRgbNorm","getImportance","opacityScale","opacityLinearScale","getRegion","getGene","minImportance","updateStratificationOption","heightScale","categoryHeightScale","valueScaleInverted","isHighlighting","get","__focus","__item","filterFn","addFn","filteredItems","reducerVar","accumulator","itemToIndicatorCategory","i1","isItemInFocus","dataToPoint","itemToIndicatorReducer","points","Uint16Array","opacities","highlights","uColor","uColorHighlight","uHighlighting","indicatorPointGraphics","xTickOffset","xTickEnd","numAxisLabels","lineStyle","labelPixiText","beginFill","drawRect","endFill","renderIndicatorCategoryAxis","renderIndicatorPoints","updateIndicators","storePolyStr","foundItem","xAbsLo","xAbsHi","queryInterval","interval","bg","colorHex","bgHex","toFixed","setAttribute","output","document","createElement","appendChild","visibleAndFetchedTiles","polys","drawTile","polyStr","g","thumbnail","DOMParser","parseFromString","documentElement","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","createScalableArcs1dTrack","ScalableArcs1dTrack","numBins","pointSize","widthHistogramLeft","widthHistogramRight","bin","round","histPos","widthHistogramMax","updateTileWidthHistogram","markColorFocusRgbNorm","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","mapFn","pointToFocused","vertexShader","fragmentShader","drawTriangles","uPointSize","uColorFocused","State","DRAW_MODES","TRIANGLES","POINTS","drawAxis","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","startsWith","drawCircle","drawEllipse","x1","x2","trackWidth","trackHeight","cx","cy","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","createSnpTrack","d3Array","scaleBand","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","radius","rectGraphics","finalDotYPos","rows","initialize","paddingInner","circleDraws","circleFocusDraws","td","geneInfo","chrOffset","yMiddle","step","drawnRects","circleDraw","drawPoly","interactive","buttonMode","mouseup","hoveringSnp","publish","relTilePos","minDist","dist","itemY","MAX_RADIUS","otherStr","substr","BedLikeTrack","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","histogram1d","histogram2d","histogram2dNumPred","Uint8Array","categoryBinHash","maxBinId","binStart","binEnd","histIdx","binHash","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","rowCumSum","rowNumPred","totalPred","sum","numPred","relYPos","findIndex","createTssTrack","TssTrack","createPubSub","xStartScreen","xEndScreen","register","isMetaTrack","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACE3F,MAAO,6BACP2F,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACE3F,MAAO,cACP2F,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACE3F,MAAO,aACP2F,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCACA,0BACA,qDACA,gBACA,0BACA,wBACA,aACA,0BACA,qDACA,2BACA,uCACA,QACA,4CACA,gBACA,uBACA,mCACA,kCACA,gDACA,iBACA,kCAGJ,CACE3F,MAAO,QACP2F,WAAY,CACV,wBACA,kBACA,oBACA,yBACA,2BACA,yBACA,gBACA,8BACA,gCACA,yBACA,mBACA,eACA,cACA,yBACA,6BACA,oBACA,wDACA,6CACA,QACA,2DACA,uBACA,iEACA,sEASKC,GAA+B,CAC1CC,UAAU,EACVC,mBAAoB,CAAC,uBACrBC,MAAO,CACL,CACEC,IAAK,UACLC,wBAAyB,CACvBC,mBAAoB,sBACpBC,eAAgB,yBAChBC,gBAAiB,sBACjBC,YAAa,OACbC,SAAS,GAEXC,cAAe,oDACfC,OAAQ,CACNC,IAAK,CACH,CACE7K,KAAM,WACNoK,IAAK,kBACLnL,OAAQ,GACR6L,SAAU,CACR,CACE9K,KAAM,+BACNoB,QAAS,CAEPpD,MAAO,UACP+M,OAAQ,QACRjK,SAAU,GACVkK,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAoB,WAEtBC,WAAY,yBACZlM,OAAQ,GACRmM,OAAQ,2BACRhB,IAAK,UAEP,CACEA,IAAK,0BACLpK,KAAM,iCACNqL,YAAa,UACbpM,OAAQ,GACRmC,QAAS,CACPkK,oBAAqB,UACrBC,sBAAuB,UACvBC,sBAAuB,GACvBC,wBAAyB,GACzBC,YAAa,MAKrB,CACE1L,KAAM,WACNoK,IAAK,qBACLnL,OAAQ,GACR6L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","file":"static/js/main.5d76cf30.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#bbb',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst AppInitializing = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"full-wh\">\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { identity } from '@flekschas/utils';\n\nimport useDebounce from './use-debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    background: 'white !important',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    '&::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 0)',\n      transition: 'boxShadow 0.2s ease',\n    },\n    '&:hover::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n    },\n  },\n  focused: {\n    boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n  },\n  input: {\n    height: 35,\n    padding: '6px 0 6px',\n  },\n  textFieldRoot: {\n    '& .MuiFormLabel-root': {\n      color: 'black',\n      fontWeight: 'bold',\n      transform: 'translate(12px, 24px) scale(1.25)',\n    },\n    '& .MuiInputLabel-shrink': {\n      fontWeight: 'normal',\n    },\n  },\n}));\n\nconst fetchJsonFromUrl = async (url, query) => {\n  if (typeof url === 'string') {\n    const response = await fetch(`${url}&ac=${query || ''}`);\n    return response.json();\n  }\n  const response = await fetch(`${url.url}&ac=${query || ''}`);\n  const results = await response.json();\n  return results.map((result) => {\n    result.type = url.type;\n    return result;\n  });\n};\n\nfunction GeneIcon(props) {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <path d=\"M5.03 14.378A7.33 7.33 0 003.423 16h2.42a7.762 7.762 0 011.281-.774 13.241 13.241 0 01-1.863-1.016c-.078.054-.156.11-.233.168zM5.766 0l.219.174a8.754 8.754 0 001.636.92l.024.008c.797.24 1.507.627 2.023.933.325.18.674.4 1.024.66 1.825 1.363 2.79 3.22 2.79 5.367 0 2.062-.962 3.89-2.782 5.286-.061.048-.125.094-.186.139a10.45 10.45 0 00-1.895-.955 8.17 8.17 0 001.69-1.162h-3.92a6.191 6.191 0 01-1.199-1.15h6.093a4.054 4.054 0 00.603-1.747H3.839c.072.656.307 1.239.636 1.747h.011c.282.438.628.822.991 1.15H5.47l.74.584c.831.588 1.573.893 1.636.92a9.358 9.358 0 012.847 1.504A7.38 7.38 0 0112.3 16H9.879l-.759-.5a7.876 7.876 0 00-1.256-.594 11.833 11.833 0 01-2.07-1.04l.017-.009c-1.567-.999-3.571-2.851-3.571-5.794 0-2.149.964-4.005 2.79-5.367.076-.058.154-.113.231-.167.495.32 1.143.698 1.863 1.015a7.677 7.677 0 00-1.296.786c-.043.032-.083.066-.125.098h3.318c.535.336.999.727 1.364 1.149H4.598a4.215 4.215 0 00-.721 1.748h7.97l-.038-.195a3.527 3.527 0 00-.306-.904 4.417 4.417 0 00-.378-.65l-.01-.007a5.793 5.793 0 00-1.081-1.13l-.14-.109a7.236 7.236 0 00-.722-.48l-.031-.02a7.942 7.942 0 00-1.276-.607 10.278 10.278 0 01-1.257-.57C5.728 2.218 4.31 1.364 3.281 0h2.486zm6.267 0a7.808 7.808 0 01-1.743 1.707A10.443 10.443 0 008.396.752 8.592 8.592 0 009.592 0h2.442z\" />\n    </SvgIcon>\n  );\n}\n\nfunction GeneOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <GeneIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction VariantOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <FlashOnIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction Option(props) {\n  if (props.option.type === 'gene') return <GeneOption option={props.option} />;\n  if (props.option.type === 'variant')\n    return <VariantOption option={props.option} />;\n  return <div>{props.option.geneName}</div>;\n}\n\nexport default function SearchField(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(props.inputValue);\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const loading = open && options.length === 0;\n  const classes = useStyles();\n  const autocompleteClasses = { ...classes };\n  delete autocompleteClasses.textFieldRoot;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!open) return undefined;\n\n    setOptions([]);\n\n    const results = Array.isArray(props.searchUrl)\n      ? props.searchUrl.map((url) =>\n          fetchJsonFromUrl(url, debouncedSearchQuery)\n        )\n      : fetchJsonFromUrl(props.searchUrl, debouncedSearchQuery);\n\n    Promise.all(results).then((resultList) => {\n      if (active) setOptions(resultList.flat());\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [props.searchUrl, open, debouncedSearchQuery]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const value =\n    props.multiple && !Array.isArray(props.value) ? [props.value] : props.value;\n\n  let autocompleteOptions = value && options.length === 0 ? value : options;\n  autocompleteOptions = Array.isArray(autocompleteOptions)\n    ? autocompleteOptions\n    : [autocompleteOptions];\n\n  return (\n    <Autocomplete\n      classes={props.larger ? autocompleteClasses : {}}\n      multiple={props.multiple}\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      value={value}\n      onInputChange={(event, newInputValue) => {\n        if (event) setSearchQuery(newInputValue);\n      }}\n      fullWidth={props.fullWidth}\n      style={{ width: props.fullWidth ? 'auto' : props.width }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, _value) =>\n        option.geneName === _value.geneName\n      }\n      getOptionLabel={(option) => (option ? option.geneName : '')}\n      options={autocompleteOptions}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          className={props.larger ? classes.textFieldRoot : ''}\n          id={props.id}\n          label={props.label}\n          variant={props.variant}\n          size={props.size}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n      renderOption={(option) => <Option option={option} />}\n      renderTags={(v, getTagProps) =>\n        v.map((option, index) => (\n          <Chip\n            icon={option.type === 'gene' ? <GeneIcon /> : <FlashOnIcon />}\n            key={option.geneName}\n            label={option.geneName}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n    />\n  );\n}\n\nSearchField.defaultProps = {\n  fullWidth: true,\n  id: '',\n  label: '',\n  multiple: false,\n  onChange: identity,\n  size: 'small',\n  value: null,\n  variant: 'outlined',\n  width: '10rem',\n};\n\nSearchField.propTypes = {\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  searchUrl: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          url: PropTypes.string,\n          type: PropTypes.string,\n        }),\n        PropTypes.string,\n      ])\n    ),\n    PropTypes.string,\n  ]).isRequired,\n  size: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  variant: PropTypes.string,\n  width: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { identity } from '@flekschas/utils';\nimport queryString from 'query-string';\n\nexport const contains = (a, b) => a[0] <= b[0] && a[1] >= b[1];\n\nexport const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nexport const dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nexport const getQueryStringValue = (key, decoder = identity) =>\n  decoder(queryString.parse(window.location.search)[key]);\n\nexport const setQueryStringValue = (key, value, encoder = identity) => {\n  const values = queryString.parse(window.location.search);\n  const newQsValue = queryString.stringify(\n    {\n      ...values,\n      [key]: encoder(value),\n    },\n    { strict: false }\n  );\n  const url = `${window.location.origin}${window.location.pathname}?${newQsValue}`;\n  window.history.pushState({ path: url }, '', url);\n};\n\nexport const toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n","import { useState, useCallback } from 'react';\nimport { getQueryStringValue, setQueryStringValue } from './utils';\n\nfunction useQueryString(key, initialValue, { encoder, decoder } = {}) {\n  const [value, setValue] = useState(\n    getQueryStringValue(key, decoder) === undefined\n      ? initialValue\n      : getQueryStringValue(key, decoder)\n  );\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n\nexport default useQueryString;\n","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","export const DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nexport const DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nexport const DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nexport const GENE_SEARCH_URL =\n  'https://higlass.io/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA';\n\nexport const VARIANT_SEARCH_URL =\n  'https://resgen.io/api/v1/suggest/?d=VF5-RDXWTxidGMJU7FeaxA';\n\nexport const DEFAULT_STRATIFICATION = {\n  categoryField: 10,\n  axisShowGroupSeparator: true,\n  axisNoGroupColor: false,\n  groups: [\n    {\n      label: 'Mononuclear Phagocytes',\n      categories: [\n        'THP1_LPS_4hr-Engreitz',\n        'THP_pmaLPS_ATAC_6h',\n        'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n        'THP1-Engreitz',\n        'THP_pmaLPS_ATAC_96h',\n        'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n        'THP_pmaLPS_ATAC_72h',\n        'THP-1_monocyte-VanBortle2017',\n        'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n        'CD14-positive_monocyte-ENCODE',\n        'THP_pmaLPS_ATAC_2h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n        'U937_LPS_4hr-Engreitz',\n        'CD14-positive_monocyte-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n        'THP_pmaLPS_ATAC_0h',\n        'HAP1',\n        'THP-1_macrophage-VanBortle2017',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n        'U937-Engreitz',\n        'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n        'THP_pmaLPS_ATAC_24h',\n        'THP_pmaLPS_ATAC_1h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n        'THP_pmaLPS_ATAC_120h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n        'THP_pmaLPS_ATAC_48h',\n        'CD14-positive_monocytes-Roadmap',\n        'THP_pmaLPS_ATAC_12h', // monoctye\n      ],\n    },\n    {\n      label: 'B Cells',\n      categories: [\n        'Karpas-422-ENCODE', // b-cell cell line\n        'BJAB-Engreitz',\n        'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n        'B_cell-ENCODE',\n        'OCI-LY7-ENCODE',\n        'GM12878-Roadmap',\n        'MM.1S-ENCODE',\n        'CD19-positive_B_cell-Roadmap',\n        'CD8-positive_alpha-beta_T_cell-ENCODE',\n      ],\n    },\n    {\n      label: 'T Cells',\n      categories: [\n        'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n        'Jurkat-Engreitz',\n        'CD3-positive_T_cell-Roadmap',\n        'CD4-positive_helper_T_cell-ENCODE',\n        'CD8-positive_alpha-beta_T_cell-Corces2016',\n        'thymus_fetal-Roadmap',\n        'CD4-positive_helper_T_cell-Corces2016',\n        'T-cell-ENCODE',\n      ],\n    },\n    {\n      label: 'Other haematopoietic cells',\n      categories: [\n        'spleen-ENCODE',\n        'K562-Roadmap',\n        'CD56-positive_natural_killer_cells-Roadmap',\n        'erythroblast-Corces2016',\n        'CD34-positive_mobilized-Roadmap',\n        'megakaryocyte-erythroid_progenitor-Corces2016',\n        'natural_killer_cell-Corces2016',\n        'IMR90-Roadmap',\n      ],\n    },\n    {\n      label: 'Fibroblasts',\n      categories: [\n        'foreskin_fibroblast-Roadmap',\n        'fibroblast_of_dermis-Roadmap',\n        'fibroblast_of_arm-ENCODE',\n        'astrocyte-ENCODE',\n        'fibroblast_of_lung-Roadmap',\n      ],\n    },\n    {\n      label: 'Epithelial',\n      categories: [\n        'small_intestine_fetal-Roadmap',\n        'epithelial_cell_of_prostate-ENCODE',\n        'HCT116-ENCODE',\n        'MCF-7-ENCODE',\n        'adrenal_gland_fetal-ENCODE',\n        'H7',\n        'keratinocyte-Roadmap',\n        'MCF10A-Ji2017',\n        'pancreas-Roadmap',\n        'mammary_epithelial_cell-Roadmap',\n        'stomach-Roadmap',\n        'LoVo',\n        'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n        'PC-9-ENCODE',\n        'H1-hESC-Roadmap',\n        'thyroid_gland-ENCODE',\n        'HT29',\n        'MDA-MB-231',\n        'iPS_DF_19.11_Cell_Line-Roadmap',\n        'large_intestine_fetal-Roadmap',\n        'Panc1-ENCODE',\n        'adrenal_gland-ENCODE',\n        'MCF10A_treated_with_TAM24hr-Ji2017',\n        'trophoblast_cell-ENCODE',\n        'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n        'uterus-ENCODE',\n        'body_of_pancreas-ENCODE',\n        'stomach_fetal-Roadmap',\n        'H9-Roadmap',\n        'transverse_colon-ENCODE',\n        'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n        'breast_epithelium-ENCODE',\n        'induced_pluripotent_stem_cell-ENCODE',\n        'LNCAP',\n        'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n        'ovary-Roadmap',\n        'sigmoid_colon-ENCODE',\n        'skeletal_muscle_myoblast-Roadmap',\n        'bipolar_neuron_from_iPSC-ENCODE',\n        'coronary_artery_smooth_muscle_cell-Miller2016',\n        'SK-N-SH-ENCODE',\n        'muscle_of_trunk_fetal-Roadmap',\n      ],\n    },\n    {\n      label: 'Other',\n      categories: [\n        'adipose_tissue-ENCODE',\n        'HeLa-S3-Roadmap',\n        'hepatocyte-ENCODE',\n        'heart_ventricle-ENCODE',\n        'spinal_cord_fetal-ENCODE',\n        'coronary_artery-ENCODE',\n        'HepG2-Roadmap',\n        'muscle_of_leg_fetal-Roadmap',\n        'gastrocnemius_medialis-ENCODE',\n        'brite_adipose-Loft2014',\n        'placenta-Roadmap',\n        'liver-ENCODE',\n        'A673-ENCODE',\n        'white_adipose-Loft2014',\n        'cardiac_muscle_cell-ENCODE',\n        'osteoblast-ENCODE',\n        'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n        'endothelial_cell_of_umbilical_vein-Roadmap',\n        'NCCIT',\n        'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n        'psoas_muscle-Roadmap',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n      ],\n    },\n  ],\n};\n\nexport const DEFAULT_X_DOMAIN_START = 1761366260;\nexport const DEFAULT_X_DOMAIN_END = 1761603836;\n\nexport const DEFAULT_VIEW_CONFIG_ENHANCER = {\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'context',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'combined',\n            uid: 'chroms-viewport',\n            height: 12,\n            contents: [\n              {\n                type: 'horizontal-chromosome-labels',\n                options: {\n                  // tickPositions: 'ends',\n                  color: '#999999',\n                  stroke: 'white',\n                  fontSize: 10,\n                  fontIsLeftAligned: true,\n                  showMousePosition: false,\n                  mousePositionColor: '#000000',\n                },\n                tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n                height: 12,\n                server: 'https://resgen.io/api/v1',\n                uid: 'chroms',\n              },\n              {\n                uid: 'viewport-details-chroms',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 12,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'genes-tss-viewport',\n            height: 50,\n            contents: [\n              {\n                type: 'horizontal-gene-annotations',\n                uid: 'genes',\n                height: 50,\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                type: 'tss',\n                uid: 'tss',\n                height: 50,\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'RefSeqCurated170308bedCollapsedGeneBoundsTSS500bp',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VMZDLKrtQDmJMSjg7Ds4yA',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                uid: 'viewport-details-genes',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 50,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'point-annotation',\n            uid: 'ibd-snps',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 36,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            type: 'stacked-bar',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 96,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: DEFAULT_STRATIFICATION,\n            },\n          },\n          {\n            type: 'stratified-bed',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 403,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorHighlight: '#bf0071',\n              markColorDehighlight: '#bbbbbb',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: DEFAULT_STRATIFICATION,\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes-tss-viewport'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 0,\n            outlineWidth: 0,\n          },\n        },\n        {\n          uid: 'tss-overlays',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [],\n            minWidth: 1,\n            fill: 'black',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: 'black',\n            outlineOpacity: 0.1,\n            outlineWidth: 1,\n            outlinePos: ['left'],\n          },\n        },\n      ],\n      metaTracks: [\n        {\n          uid: 'tss-overlays-meta',\n          type: 'annotation-overlay',\n          overlaysTrack: 'tss-overlays',\n          options: {\n            annotationTracks: ['tss'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n      initialYDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n    },\n  ],\n};\n\nexport const DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY = {\n  zoomFixed: false,\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'details',\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            uid: 'chroms',\n            type: 'horizontal-chromosome-labels',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n            height: 12,\n            options: {\n              // tickPositions: 'ends',\n              color: '#999999',\n              stroke: 'white',\n              fontSize: 10,\n              fontIsLeftAligned: true,\n              showMousePosition: false,\n              mousePositionColor: '#000000',\n            },\n          },\n          {\n            uid: 'genes',\n            type: 'horizontal-gene-annotations',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n            height: 48,\n            options: {\n              fontSize: 9,\n              plusStrandColor: 'black',\n              minusStrandColor: 'black',\n              geneAnnotationHeight: 12,\n              geneLabelPosition: 'outside',\n              geneStrandSpacing: 2,\n            },\n          },\n          {\n            uid: 'ibd-snps',\n            type: 'point-annotation',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 132,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            uid: 'dna-accessibility',\n            type: 'ridge-plot',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'test',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'Uz1_tEABQf-uzktblvBKSQ',\n            // height: 403,\n            height: 131 * (24 - 6) + 6,\n            options: {\n              name: 'DNA Accessibility',\n              labelPosition: 'outerBottom',\n              labelShowResolution: false,\n              labelShowAssembly: false,\n              markArea: true,\n              markColor: '#444444',\n              markResolution: 256,\n              valueScaling: 'exponential',\n              colorRange: ['#ffffff', '#000000'],\n              rowHeight: 24,\n              rowPadding: -6,\n              rowNormalization: true,\n              rowSelections: [\n                120,\n                36,\n                54,\n                20,\n                80,\n                35,\n                101,\n                49,\n                44,\n                23,\n                30,\n                66,\n                5,\n                26,\n                15,\n                105,\n                57,\n                56,\n                74,\n                84,\n                79,\n                93,\n                106,\n                107,\n                34,\n                28,\n                25,\n                55,\n                121,\n                94,\n                58,\n                69,\n                67,\n                63,\n                126,\n                71,\n                72,\n                47,\n                11,\n                46,\n                39,\n                113,\n                29,\n                60,\n                45,\n                76,\n                21,\n                103,\n                129,\n                13,\n                128,\n                90,\n                104,\n                32,\n                109,\n                27,\n                9,\n                130,\n                95,\n                86,\n                53,\n                73,\n                50,\n                48,\n                78,\n                14,\n                92,\n                124,\n                31,\n                114,\n                64,\n                88,\n                12,\n                10,\n                38,\n                68,\n                3,\n                111,\n                70,\n                22,\n                61,\n                98,\n                6,\n                123,\n                118,\n                43,\n                37,\n                65,\n                81,\n                62,\n                33,\n                1,\n                24,\n                122,\n                83,\n                75,\n                112,\n                40,\n                97,\n                16,\n                117,\n                87,\n                19,\n                125,\n                7,\n                102,\n                116,\n                77,\n                8,\n                17,\n                82,\n                115,\n                89,\n                119,\n                18,\n                4,\n                108,\n                59,\n                127,\n                91,\n                0,\n                100,\n                85,\n                110,\n                99,\n                2,\n                96,\n                51,\n                41,\n                52,\n                42,\n              ],\n              rowIdToCategory: {\n                fn: 'replace',\n                args: ['.accessibility', ''],\n              },\n              rowCategories: DEFAULT_STRATIFICATION.groups.reduce(\n                (row, group, index) => {\n                  const category = {\n                    label: group.label,\n                    color: group.axisLabelColor,\n                    background: group.axisLabelBackground,\n                    index,\n                  };\n                  group.categories.forEach((sample) => {\n                    row[sample] = category;\n                  });\n                  return row;\n                },\n                {}\n              ),\n              showRowLabels: true,\n              rowLabelSize: 10,\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: ['chroms', 'genes', 'ibd-snps', 'dna-accessibility'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n      initialYDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n    },\n  ],\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { HiGlassComponent } from 'higlass';\nimport { debounce, deepClone, isString, pipe } from '@flekschas/utils';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport SearchField from './SearchField';\n\nimport useQueryString from './use-query-string';\nimport usePrevious from './use-previous';\nimport { toAbsPosition } from './utils';\nimport {\n  DEFAULT_X_DOMAIN_START,\n  DEFAULT_X_DOMAIN_END,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n  DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY,\n  GENE_SEARCH_URL,\n  VARIANT_SEARCH_URL,\n} from './constants';\n\nimport 'higlass/dist/hglib.css';\nimport './Viewer.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    boxShadow: `0 1px 0 0 ${theme.palette.grey['300']}`,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  textInput: {\n    minWidth: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  higlass: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  higlassPrimary: {\n    flexGrow: 1,\n  },\n  higlassSecondary: {\n    width: '20rem',\n  },\n  higlassTitleBarFontSize: {\n    fontSize: '0.8rem',\n  },\n  higlassEnhancersTitleBar: {\n    position: 'relative',\n    margin: '-8px 0 0 -8px',\n    padding: '4px 0 4px 8px',\n    background: theme.palette.grey['100'],\n  },\n  higlassDnaAccessibilityTitleBar: {\n    margin: '-8px -8px 0 0',\n    padding: '4px 8px 4px 0',\n    background: theme.palette.grey['100'],\n  },\n  higlassSeparator: {\n    width: 1,\n    margin: '-8px 0',\n    background: theme.palette.grey['300'],\n  },\n  toolbarExtra: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    alignItems: 'flex-end',\n  },\n}));\n\nconst chrPosUrlEncoder = (chrPos) =>\n  chrPos ? chrPos.replace(':', '.') : chrPos;\n\nconst chrPosUrlDecoder = (chrPos) =>\n  chrPos ? chrPos.replace('.', ':') : chrPos;\n\nconst getFocusGeneRegion = (viewConfig) => {\n  return viewConfig.views[0].overlays[1] &&\n    viewConfig.views[0].overlays[1].options.extent &&\n    viewConfig.views[0].overlays[1].options.extent.length\n    ? [...viewConfig.views[0].overlays[1].options.extent[0]]\n    : null;\n};\n\nconst getFocusVariantRegion = (viewConfig) =>\n  viewConfig.views[0].tracks.top[2].options.focusRegion\n    ? [...viewConfig.views[0].tracks.top[2].options.focusRegion]\n    : null;\n\nconst updateViewConfigXDomain = (newXDomainStart, newXDomainEnd, force) => (\n  viewConfig\n) => {\n  const xDomain = [...viewConfig.views[0].initialXDomain];\n  const focusGeneRegion = getFocusGeneRegion(viewConfig);\n  const focusVariantRegion = getFocusVariantRegion(viewConfig);\n\n  if (!Number.isNaN(+newXDomainStart)) {\n    xDomain[0] = newXDomainStart;\n  }\n  if (!Number.isNaN(+newXDomainEnd)) {\n    xDomain[1] = newXDomainEnd;\n  }\n\n  if (focusGeneRegion && !force) {\n    xDomain[0] = focusGeneRegion[0] - 100000;\n    xDomain[1] = focusGeneRegion[1] + 100000;\n  }\n\n  if (focusVariantRegion && !force) {\n    xDomain[0] = Math.min(xDomain[0], focusVariantRegion[0] - 100000);\n    xDomain[1] = Math.max(xDomain[1], focusVariantRegion[1] + 100000);\n  }\n\n  viewConfig.views[0].initialXDomain = xDomain;\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusGene = (gene, start, end) => (viewConfig) => {\n  const n = viewConfig.views[0].tracks.top.length;\n\n  if (gene) {\n    viewConfig.views[0].tracks.top[n - 1].options.focusGene = gene;\n    viewConfig.views[0].overlays[1].options.extent = [[start, end]];\n  } else {\n    delete viewConfig.views[0].tracks.top[n - 1].options.focusGene;\n    delete viewConfig.views[0].overlays[1].options.extent;\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusVariant = (position, trackIdxs = []) => (\n  viewConfig\n) => {\n  if (Number.isNaN(+position) || position === null) {\n    trackIdxs.forEach((trackIdx) => {\n      delete viewConfig.views[0].tracks.top[trackIdx].options.focusRegion;\n    });\n    viewConfig.views[0].overlays[0].options.extent = [];\n  } else {\n    const focusRegion = [position - 0.5, position + 0.5];\n    trackIdxs.forEach((trackIdx) => {\n      viewConfig.views[0].tracks.top[\n        trackIdx\n      ].options.focusRegion = focusRegion;\n    });\n\n    viewConfig.views[0].overlays[0].options.extent = [focusRegion];\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusStyle = (hideUnfocused) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.focusStyle =\n    hideUnfocused === 'true' ? 'filtering' : 'highlighting';\n  viewConfig.views[0].tracks.top[4].options.stratification.axisNoGroupColor =\n    hideUnfocused !== 'true';\n\n  return viewConfig;\n};\n\nconst updateViewConfigVariantYScale = (yScale) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[2].options.valueColumn =\n    yScale === 'pValue' ? 7 : 8;\n\n  return viewConfig;\n};\n\nconst updateViewConfigMatrixColoring = (coloring) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.opacityEncoding = coloring;\n  return viewConfig;\n};\n\nconst updateViewConfigDnaAccessLabels = (labels) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[3].options.showRowLabels =\n    !labels || labels === 'hidden' ? false : labels;\n  return viewConfig;\n};\n\nconst Viewer = (props) => {\n  const [focusGene, setFocusGene] = useQueryString('gene', '');\n  const [focusVariant, setFocusVariant] = useQueryString(\n    'variant',\n    'rs1250566'\n  );\n  const [hideUnfocused, setHideUnfocused] = useQueryString('hide-unfocused');\n  const [matrixColoring, setMatrixColoring] = useQueryString(\n    'matrix-coloring',\n    'solid'\n  );\n  const [variantYScale, setVariantYScale] = useQueryString(\n    'varient-scale',\n    'pValue'\n  );\n  const [dnaAccessLabels, setDnaAccessLabels] = useQueryString(\n    'access-labels',\n    'indicator'\n  );\n  const [xDomainStart, setXDomainStart] = useQueryString(\n    'start',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_START).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [xDomainEnd, setXDomainEnd] = useQueryString(\n    'end',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_END).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n\n  const [focusGeneOption, setFocusGeneOption] = useState(null);\n  const [focusVariantOption, setFocusVariantOption] = useState(null);\n  const prevFocusGeneOption = usePrevious(focusGeneOption);\n  const prevFocusVariantOption = usePrevious(focusVariantOption);\n  const higlassEnhancerApi = useRef(null);\n  const higlassDnaAccessApi = useRef(null);\n\n  // Derived State\n  const focusGeneVariantOptions = useMemo(() => {\n    const _focusGeneVariant = [];\n    // Add the focus element that has not changed first!\n    if (focusGeneOption && focusGeneOption === prevFocusGeneOption)\n      _focusGeneVariant.push(focusGeneOption);\n    if (focusVariantOption && focusVariantOption === prevFocusVariantOption)\n      _focusGeneVariant.push(focusVariantOption);\n    // Now add the focused element that has changed!\n    if (focusGeneOption && focusGeneOption !== prevFocusGeneOption)\n      _focusGeneVariant.push(focusGeneOption);\n    if (focusVariantOption && focusVariantOption !== prevFocusVariantOption)\n      _focusGeneVariant.push(focusVariantOption);\n    return _focusGeneVariant;\n  }, [focusGeneOption, focusVariantOption]);\n\n  const focusGeneStartPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusGeneEndPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txEnd}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusVariantPosition = useMemo(\n    () =>\n      focusVariantOption\n        ? toAbsPosition(\n            `${focusVariantOption.chr}:${focusVariantOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusVariantOption, props.chromInfo]\n  );\n\n  const xDomainStartAbs = useMemo(\n    () => toAbsPosition(xDomainStart, props.chromInfo),\n    [xDomainStart, props.chromInfo]\n  );\n\n  const xDomainEndAbs = useMemo(\n    () => toAbsPosition(xDomainEnd, props.chromInfo),\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const viewConfigEnhancer = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusGene(\n          focusGeneOption ? focusGeneOption.geneName : null,\n          focusGeneStartPosition,\n          focusGeneEndPosition\n        ),\n        updateViewConfigFocusVariant(focusVariantPosition, [2, 4]),\n        updateViewConfigFocusStyle(hideUnfocused),\n        updateViewConfigMatrixColoring(matrixColoring),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigXDomain(xDomainStartAbs, xDomainEndAbs)\n      )(deepClone(DEFAULT_VIEW_CONFIG_ENHANCER)),\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusGeneOption,\n      focusGeneStartPosition,\n      focusGeneEndPosition,\n      focusVariantPosition,\n      hideUnfocused,\n      matrixColoring,\n      variantYScale,\n    ]\n  );\n\n  const viewConfigDnaAccessibility = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusVariant(focusVariantPosition, [2]),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigDnaAccessLabels(dnaAccessLabels),\n        updateViewConfigXDomain(\n          focusVariantPosition ? focusVariantPosition - 2500 : xDomainStartAbs,\n          focusVariantPosition ? focusVariantPosition + 2500 : xDomainEndAbs,\n          true\n        )\n      )(deepClone(DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY)),\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusVariantPosition,\n      variantYScale,\n      dnaAccessLabels,\n      props.chromInfo,\n    ]\n  );\n\n  const numericalXDomainStart = useMemo(\n    () =>\n      isString(xDomainStart) && xDomainStart.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainStart.split(':')[0],\n            +xDomainStart.split(':')[1],\n          ])\n        : +xDomainStart,\n    [xDomainStart, props.chromInfo]\n  );\n\n  const numericalXDomainEnd = useMemo(\n    () =>\n      isString(xDomainEnd) && xDomainEnd.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainEnd.split(':')[0],\n            +xDomainEnd.split(':')[1],\n          ])\n        : +xDomainEnd,\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n  };\n\n  const focusGeneChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusGene(newValue.geneName);\n      setFocusGeneOption(newValue);\n    } else {\n      clearFocusGene();\n    }\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    setFocusVariantOption(null);\n  };\n\n  const focusVariantChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusVariant(newValue.geneName);\n      setFocusVariantOption(newValue);\n    } else {\n      clearFocusVariant();\n    }\n  };\n\n  const focusGeneVariantChangeHandler = (newValues) => {\n    if (newValues.length) {\n      const newFocusElements = {};\n      // We only allow exactly two selections\n      newValues.slice(newValues.length - 2).forEach((newValue) => {\n        switch (newValue.type) {\n          case 'gene':\n            newFocusElements.gene = newValue;\n            if (focusGene !== newValue.geneName) {\n              setFocusGene(newValue.geneName);\n              setFocusGeneOption(newValue);\n            }\n            break;\n\n          case 'variant':\n            newFocusElements.variant = newValue;\n            if (focusVariant !== newValue.geneName) {\n              setFocusVariant(newValue.geneName);\n              setFocusVariantOption(newValue);\n            }\n            break;\n\n          default:\n            // eslint-disable-next-line no-console\n            console.warn('Unknown focus element', newValue);\n            break;\n        }\n      });\n      // Unset focus elements\n      if (focusGene && !newFocusElements.gene) clearFocusGene();\n      if (focusVariant && !newFocusElements.variant) clearFocusVariant();\n    } else {\n      clearFocusGene();\n      clearFocusVariant();\n    }\n  };\n\n  const hideUnfocusedChangeHandler = (event) => {\n    setHideUnfocused(event.target.checked.toString());\n  };\n\n  const variantYScaleChangeHandler = (event) => {\n    setVariantYScale(event.target.value);\n  };\n\n  const matrixColoringChangeHandler = (event) => {\n    setMatrixColoring(event.target.value);\n  };\n\n  const dnaAccessLabelsChangeHandler = (event) => {\n    setDnaAccessLabels(event.target.value);\n  };\n\n  const xDomainStartChangeHandler = (event) => {\n    setXDomainStart(event.target.value);\n  };\n\n  const xDomainEndChangeHandler = (event) => {\n    setXDomainEnd(event.target.value);\n  };\n\n  // HiGlass Functions\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      setFocusGeneOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        type: 'gene',\n      });\n    } else if (event.type === 'snp') {\n      setFocusVariant(event.payload.name);\n      setFocusVariantOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        score: event.payload.importance,\n        type: 'variant',\n      });\n    }\n  };\n\n  const higlassLocationChangeHandler = (event) => {\n    const [newXDomainStart, newXDomainEnd] = event.xDomain.map((absPos) =>\n      props.chromInfo.absToChr(absPos).slice(0, 2).join(':')\n    );\n    setXDomainStart(newXDomainStart);\n    setXDomainEnd(newXDomainEnd);\n  };\n  const higlassLocationChangeHandlerDb = debounce(\n    higlassLocationChangeHandler,\n    250\n  );\n\n  const higlassEnhancerZoomToXDomain = (event) => {\n    if (!higlassEnhancerApi.current) return;\n\n    const newViewConfig = deepClone(viewConfigEnhancer);\n\n    const xDomain = [...newViewConfig.views[0].initialXDomain];\n\n    if (!Number.isNaN(+numericalXDomainStart)) {\n      xDomain[0] = numericalXDomainStart;\n    }\n    if (!Number.isNaN(+numericalXDomainEnd)) {\n      xDomain[1] = numericalXDomainEnd;\n    }\n\n    higlassEnhancerApi.current.zoomTo(\n      'context',\n      xDomain[0],\n      xDomain[1],\n      xDomain[0],\n      xDomain[1],\n      2000\n    );\n  };\n\n  // Initializations\n  useEffect(() => {\n    (async () => {\n      if (focusGene && !focusGeneOption) {\n        const r = await fetch(`${GENE_SEARCH_URL}&ac=${focusGene}`);\n        const results = await r.json();\n        const result = results[0];\n        result.type = 'gene';\n        focusGeneChangeHandler(results[0]);\n      }\n      if (focusVariant && !focusVariantOption) {\n        const r = await fetch(`${VARIANT_SEARCH_URL}&ac=${focusVariant}`);\n        const results = await r.json();\n        const result = results[0];\n        result.type = 'variant';\n        focusVariantChangeHandler(results[0]);\n      }\n    })();\n  }, []);\n\n  const higlassEnhancerInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassEnhancerApi.current = higlassInstance.api;\n      higlassInstance.api.on('click', higlassClickHandler);\n      higlassInstance.api.on(\n        'location',\n        higlassLocationChangeHandlerDb,\n        'context'\n      );\n    }\n  }, []);\n\n  const higlassDnaAccessibilityInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassDnaAccessApi.current = higlassInstance.api;\n    }\n  }, []);\n\n  // Run on every render\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar\n          classes={{\n            root: classes.toolbarExtra,\n          }}\n        >\n          <FormControl fullWidth>\n            <SearchField\n              label={\n                <Grid container direction=\"row\" alignItems=\"center\">\n                  <SearchIcon fontSize=\"small\" />\n                  <span style={{ marginLeft: 3 }}>Gene or Variant</span>\n                </Grid>\n              }\n              searchUrl={[\n                { url: GENE_SEARCH_URL, type: 'gene' },\n                { url: VARIANT_SEARCH_URL, type: 'variant' },\n              ]}\n              onChange={focusGeneVariantChangeHandler}\n              value={focusGeneVariantOptions}\n              variant=\"filled\"\n              larger\n              fullWidth\n              multiple\n            />\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <Box m={1}>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <InputLabel htmlFor=\"x-domain-start\">Region Start</InputLabel>\n              <OutlinedInput\n                id=\"x-domain-start\"\n                label=\"Region Start\"\n                onChange={xDomainStartChangeHandler}\n                value={xDomainStart}\n              />\n            </FormControl>\n          </Box>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <InputLabel htmlFor=\"x-domain-end\">Region End</InputLabel>\n              <OutlinedInput\n                id=\"x-domain-end\"\n                label=\"Region End\"\n                onChange={xDomainEndChangeHandler}\n                value={xDomainEnd}\n              />\n            </FormControl>\n          </Box>\n          <Box m={0}>\n            <Button\n              variant=\"contained\"\n              margin=\"dense\"\n              onClick={higlassEnhancerZoomToXDomain}\n              fullWidth\n              disableElevation\n            >\n              Go\n            </Button>\n          </Box>\n        </Box>\n        <Divider />\n        <Box m={1}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={hideUnfocused === 'true'}\n                onChange={hideUnfocusedChangeHandler}\n                name=\"hideUnfocused\"\n              />\n            }\n            label=\"Hide unfocused\"\n          />\n        </Box>\n        <Box m={1}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Variant y-scale</FormLabel>\n            <RadioGroup\n              aria-label=\"variantYScale\"\n              name=\"variantYScale\"\n              value={variantYScale}\n              onChange={variantYScaleChangeHandler}\n            >\n              <FormControlLabel\n                label=\"p-value\"\n                control={<Radio size=\"small\" />}\n                value=\"pValue\"\n              />\n              <FormControlLabel\n                label=\"Posterior probability\"\n                control={<Radio size=\"small\" />}\n                value=\"posteriorProbability\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box m={1}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Matrix coloring</FormLabel>\n            <RadioGroup\n              aria-label=\"matrixColoring\"\n              name=\"matrixColoring\"\n              value={matrixColoring}\n              onChange={matrixColoringChangeHandler}\n            >\n              <FormControlLabel\n                label=\"Solid\"\n                control={<Radio size=\"small\" />}\n                value=\"solid\"\n              />\n              <FormControlLabel\n                label=\"Number of predictions\"\n                control={<Radio size=\"small\" />}\n                value=\"frequency\"\n              />\n              <FormControlLabel\n                label=\"Highest prediction score\"\n                control={<Radio size=\"small\" />}\n                value=\"highestImportance\"\n              />\n              <FormControlLabel\n                label=\"Prediction score of the closest TSS interaction\"\n                control={<Radio size=\"small\" />}\n                value=\"closestImportance\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box m={1}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">DNA accessibility labels</FormLabel>\n            <RadioGroup\n              aria-label=\"dnaAccessLabels\"\n              name=\"dnaAccessLabels\"\n              value={dnaAccessLabels}\n              onChange={dnaAccessLabelsChangeHandler}\n            >\n              <FormControlLabel\n                label=\"Indicator\"\n                control={<Radio size=\"small\" />}\n                value=\"indicator\"\n              />\n              <FormControlLabel\n                label=\"Text\"\n                control={<Radio size=\"small\" />}\n                value=\"text\"\n              />\n              <FormControlLabel\n                label=\"Hidden\"\n                control={<Radio size=\"small\" />}\n                value=\"hidden\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div className={classes.higlass}>\n          <Grid container direction=\"column\" className={classes.higlassPrimary}>\n            <Grid item className={classes.higlassEnhancersTitleBar}>\n              <Typography\n                align=\"center\"\n                className={classes.higlassTitleBarFontSize}\n                noWrap\n              >\n                <strong>Predicted Enhancers</strong>\n              </Typography>\n            </Grid>\n            <Grid item className={classes.higlassPrimary}>\n              <HiGlassComponent\n                ref={higlassEnhancerInitHandler}\n                viewConfig={viewConfigEnhancer}\n                options={{\n                  sizeMode: 'bounded',\n                }}\n              />\n            </Grid>\n          </Grid>\n          <div className={classes.higlassSeparator} />\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassSecondary}\n          >\n            <Grid item className={classes.higlassDnaAccessibilityTitleBar}>\n              <Typography\n                align=\"center\"\n                className={classes.higlassTitleBarFontSize}\n                noWrap\n              >\n                <strong>DNA Accessibility</strong>\n              </Typography>\n            </Grid>\n            <Grid item className={classes.higlassPrimary}>\n              <HiGlassComponent\n                ref={higlassDnaAccessibilityInitHandler}\n                viewConfig={viewConfigDnaAccessibility}\n                options={{\n                  sizeMode: 'scroll',\n                  pixelPreciseMarginPadding: true,\n                  containerPaddingX: 0,\n                  containerPaddingY: 0,\n                  viewMarginTop: 0,\n                  viewMarginBottom: 0,\n                  viewMarginLeft: 0,\n                  viewMarginRight: 0,\n                  viewPaddingTop: 0,\n                  viewPaddingBottom: 0,\n                  viewPaddingLeft: 0,\n                  viewPaddingRight: 16,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Viewer;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport Viewer from './Viewer';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n    secondary: {\n      main: '#000',\n    },\n  },\n});\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const AppViewer = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(Viewer);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <AppViewer chromInfo={chromInfo} />\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createAnnotationOverlayMetaTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  // Services\n  const { pubSub } = HGC.services;\n\n  class AnnotationOverlayMetaTrack {\n    constructor(context, options) {\n      const { definition, getTrackObject, onNewTilesLoaded: animate } = context;\n\n      this.animate = animate;\n      this.options = options;\n\n      this.overlaysTrack = getTrackObject(definition.overlaysTrack);\n\n      if (!this.overlaysTrack) {\n        console.warn(\n          `Overlays track (uid: ${definition.overlaysTrack}) not found`\n        );\n        return;\n      }\n\n      this.annotationTrackIds = new Set();\n      this.annotationTracks = definition.options.annotationTracks\n        .map((uid) => {\n          const track = getTrackObject(uid);\n\n          if (!track) {\n            console.warn(`Child track (uid: ${uid}) not found`);\n          } else {\n            this.annotationTrackIds.add(track.uuid);\n          }\n\n          return track;\n        })\n        .filter((track) => track);\n\n      this.annotationDrawnHandlerBound = this.annotationDrawnHandler.bind(this);\n\n      this.drawnAnnotations = new Map();\n      this.tracksDrawingTiles = new Set();\n\n      this.pubSubs = [];\n\n      // Augment annotation tracks\n      this.annotationTracks.forEach((track) => {\n        track.subscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n\n      this.pubSubs.push(\n        pubSub.subscribe(\n          'TiledPixiTrack.tilesDrawnEnd',\n          this.tilesDrawnEndHandler.bind(this)\n        )\n      );\n    }\n\n    /**\n     * Handles annotation drawn events\n     *\n     * @param  {String}  event.uid  UID of the view that triggered the event.\n     * @param  {Array}  event.viewPos  View position (i.e., [x, y, width, height])\n     *   of the drawn annotation on the screen.\n     * @param  {Array}  event.dataPos  Data position of the drawn annotation. For\n     *   example base pairs (Hi-C), or pixels (gigapixel images), or lng-lat\n     *   (geo json).\n     */\n    annotationDrawnHandler({ xStartAbs, xEndAbs, data }) {\n      this.drawnAnnotations.set(data.uid, [xStartAbs, xEndAbs]);\n    }\n\n    /**\n     * Remove this track.\n     */\n    remove() {\n      this.pubSubs.forEach(pubSub.unsubscribe);\n      this.pubSubs = undefined;\n      this.annotationTracks.forEach((track) => {\n        track.unsubscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n    }\n\n    /**\n     * Callback function passed into the annotation tracks to trigger tree\n     * building of the spatial RTree.\n     *\n     * @description\n     * Simple counter that call `this.buildTree()` once the number of annotation\n     * tracks is reached.\n     */\n    tilesDrawnEndHandler({ uuid }) {\n      if (!this.annotationTrackIds.has(uuid)) return;\n\n      this.tracksDrawingTiles.add(uuid);\n\n      if (!(this.tracksDrawingTiles.size % this.annotationTracks.length)) {\n        this.updateOverlays();\n      }\n    }\n\n    updateOverlays() {\n      this.overlaysTrack.options.extent = Array.from(\n        this.drawnAnnotations.values()\n      );\n      this.overlaysTrack.draw();\n      this.tracksDrawingTiles.clear();\n    }\n  }\n\n  return new AnnotationOverlayMetaTrack(...args);\n}\n\ncreateAnnotationOverlayMetaTrack.config = {\n  type: 'annotation-overlay',\n  availableOptions: ['annotationTracks'],\n  defaultOptions: {\n    annotationTracks: [],\n  },\n};\n\nexport default createAnnotationOverlayMetaTrack;\n","import {\n  identity,\n  maxNan,\n  maxVector,\n  meanNan,\n  minNan,\n  sumNan,\n} from '@flekschas/utils';\n\nimport {\n  DEFAULT_GROUP_COLORS,\n  DEFAULT_GROUP_COLORS_LIGHT,\n  DEFAULT_GROUP_COLORS_DARK,\n} from './constants';\n\nconst FLOAT_BYTES = Float32Array.BYTES_PER_ELEMENT;\n\nconst VS = `precision mediump float;\n\n  attribute vec2 aPrevPosition;\n  attribute vec2 aCurrPosition;\n  attribute vec2 aNextPosition;\n  attribute float aOffsetSign;\n  attribute float aColorIndex;\n\n  uniform sampler2D uAreaColorTex;\n  uniform float uAreaColorTexRes;\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n\n  uniform vec4 uLineColor;\n  uniform vec4 uNaNColor;\n  uniform float uWidth;\n  uniform int uMiter;\n\n  varying vec4 vColor;\n\n  void main(void)\n  {\n    mat3 model = projectionMatrix * translationMatrix;\n\n    if (aColorIndex <= -0.5) {\n      // Render line\n      vColor = vec4(uLineColor.rgb, 1.0);\n\n      vec4 prevGlPos = vec4((model * vec3(aPrevPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 currGlPos = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 nextGlPos = vec4((model * vec3(aNextPosition, 1.0)).xy, 0.0, 1.0);\n\n      // Calculate the direction\n      vec2 dir = vec2(0.0);\n\n      if (currGlPos == prevGlPos) {\n        // start point uses (next - current)\n        dir = normalize(nextGlPos.xy - currGlPos.xy);\n      }\n      else if (currGlPos == nextGlPos) {\n        // end point uses (current - previous)\n        dir = normalize(currGlPos.xy - prevGlPos.xy);\n      }\n      else {\n        // somewhere in middle, needs a join:\n        // get directions from (C - B) and (B - A)\n        vec2 dirA = normalize((currGlPos.xy - prevGlPos.xy));\n        if (uMiter == 1) {\n          vec2 dirB = normalize((nextGlPos.xy - currGlPos.xy));\n          // now compute the miter join normal and length\n          vec2 tangent = normalize(dirA + dirB);\n          vec2 perp = vec2(-dirA.y, dirA.x);\n          vec2 miter = vec2(-tangent.y, tangent.x);\n          dir = tangent;\n        } else {\n          dir = dirA;\n        }\n      }\n\n      float width = (projectionMatrix * vec3(uWidth, 0.0, 0.0)).x / 2.0;\n\n      vec2 normal = vec2(-dir.y, dir.x) * width;\n      // normal.x /= aspectRatio;\n      vec4 offset = vec4(normal * aOffsetSign, 0.0, 0.0);\n      gl_Position = currGlPos + offset;\n    } else {\n      // Render area\n      float colorRowIndex = aColorIndex / uAreaColorTexRes;\n\n      vec2 colorTexIndex = vec2(\n        (aColorIndex / uAreaColorTexRes) - colorRowIndex,\n        colorRowIndex / uAreaColorTexRes\n      );\n      vColor = texture2D(uAreaColorTex, colorTexIndex);\n\n      gl_Position = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n    }\n  }\n`;\n\nconst FS = `precision mediump float;\n\n  varying vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`;\n\nconst TILE_SIZE = 256;\n\nconst COLORMAP_GRAYS = Array(127)\n  .fill()\n  .map((x, i) => {\n    const gray = (1 - i / 127) * 0.5 + 0.5;\n    return [gray, gray, gray, 1];\n  });\n\nconst getMax = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxValue, tile) => Math.max(maxValue, tile.tileData.maxNonZero),\n    -Infinity\n  );\n\nconst getNumRows = (fetchedTiles) =>\n  Object.values(fetchedTiles)[0].tileData.coarseShape[0];\n\nconst getRowMaxs = (fetchedTiles) =>\n  maxVector(\n    Object.values(fetchedTiles).map((tile) => tile.tileData.maxValueByRow)\n  );\n\nconst scaleGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getNumPointsPerRow = (numRows, positions, markArea) =>\n  positions.length / numRows / 4 / (1 + markArea) - 2;\n\nconst createRidgePlotTrack = function createRidgePlotTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { format } = HGC.libraries.d3Format;\n  const { scaleLinear } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const createColorTexture = (colors) => {\n    const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n    const rgba = new Float32Array(colorTexRes ** 2 * 4);\n    colors.forEach((color, i) => {\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4] = color[0]; // r\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 1] = color[1]; // g\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 2] = color[2]; // b\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 3] = color[3]; // a\n    });\n\n    return [\n      PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes),\n      colorTexRes,\n    ];\n  };\n\n  class RidgePlotTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      this.coarsifyTileValues(tile);\n    }\n\n    destroyTile() {}\n\n    binsPerTile() {\n      return this.tilesetInfo.bins_per_dimension || TILE_SIZE;\n    }\n\n    /**\n     * From HeatmapTiledPixiTrack\n     */\n    getTilePosAndDimensions(zoomLevel, tilePos, binsPerTileIn) {\n      const binsPerTile = binsPerTileIn || this.binsPerTile();\n\n      if (this.tilesetInfo.resolutions) {\n        const sortedResolutions = this.tilesetInfo.resolutions\n          .map((x) => +x)\n          .sort((a, b) => b - a);\n\n        const chosenResolution = sortedResolutions[zoomLevel];\n\n        const tileWidth = chosenResolution * binsPerTile;\n        const tileHeight = tileWidth;\n\n        const tileX = chosenResolution * binsPerTile * tilePos[0];\n        const tileY = chosenResolution * binsPerTile * tilePos[1];\n\n        return {\n          tileX,\n          tileY,\n          tileWidth,\n          tileHeight,\n        };\n      }\n\n      const xTilePos = tilePos[0];\n      const yTilePos = tilePos[1];\n\n      const minX = this.tilesetInfo.min_pos[0];\n      const minY = this.options.reverseYAxis\n        ? -this.tilesetInfo.max_pos[1]\n        : this.tilesetInfo.min_pos[1];\n\n      const tileWidth = this.tilesetInfo.max_width / 2 ** zoomLevel;\n      const tileHeight = this.tilesetInfo.max_width / 2 ** zoomLevel;\n\n      const tileX = minX + xTilePos * tileWidth;\n      const tileY = minY + yTilePos * tileHeight;\n\n      return {\n        tileX,\n        tileY,\n        tileWidth,\n        tileHeight,\n      };\n    }\n\n    updateOptions() {\n      this.selectRowsAggregationMode =\n        this.options.selectRowsAggregationMode || 'mean';\n\n      switch (this.selectRowsAggregationMode) {\n        case 'max':\n          this.selectRowsAggregationFn = maxNan;\n          break;\n\n        case 'min':\n          this.selectRowsAggregationFn = minNan;\n          break;\n\n        case 'sum':\n          this.selectRowsAggregationFn = sumNan;\n          break;\n\n        case 'mean':\n        default:\n          this.selectRowsAggregationFn = meanNan;\n          break;\n      }\n\n      this.markArea = !!this.options.markArea;\n\n      this.markAreaColor = 'grays';\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      [this.markColorTex, this.markColorTexRes] = createColorTexture([\n        ...COLORMAP_GRAYS,\n      ]);\n\n      this.markNumColors = COLORMAP_GRAYS.length;\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      // Number of line segments\n      const oldMarkResolution = this.markResolution;\n      this.markResolution = Math.max(\n        1,\n        Math.min(TILE_SIZE, this.options.markResolution || TILE_SIZE / 4)\n      );\n      // Given 100 (rows) x 256 (tile size). At a resolution of 1 we need:\n      // 100 x (256 / 4) x 4 = 25,600 vertices\n\n      const oldRowHeight = this.rowHeight;\n      this.rowHeight = Number.isNaN(+this.options.rowHeight)\n        ? 'auto'\n        : +this.options.rowHeight;\n\n      const oldRowPadding = this.rowPadding;\n      this.rowPadding =\n        this.rowHeight === 'auto' ? 0 : this.options.rowPadding || 0;\n\n      const oldRowNormalization = this.rowNormalization;\n      this.rowNormalization = this.options.rowNormalization || false;\n\n      const oldRowSelections = this.rowSelections;\n      this.rowSelections =\n        this.options.rowSelections || this.rowSelections || [];\n\n      if (\n        oldMarkResolution !== this.markResolution ||\n        oldRowSelections !== this.rowSelections\n      ) {\n        this.updateTiles();\n      }\n\n      if (\n        oldRowHeight !== this.rowHeight ||\n        oldRowPadding !== this.rowPadding ||\n        oldRowNormalization !== this.rowNormalization\n      ) {\n        this.updateScales();\n      }\n\n      const oldShowRowLabels = this.showRowLabels;\n      this.showRowLabels = this.options.showRowLabels;\n\n      if (oldShowRowLabels !== this.showRowLabels) {\n        this.updateRowLabels(oldShowRowLabels);\n        this.drawLabel();\n      }\n\n      this.rowLabelAlign = this.options.rowLabelAlign || 'left';\n      this.rowLabelSize = this.options.rowLabelSize || 12;\n\n      this.rowCategories = this.options.rowCategories || {};\n      this.rowIdToCategory = (id) => id.substring(0, id.length - 14);\n      this.rowIdToCategory = this.options.rowIdToCategory\n        ? (id) =>\n            id[this.options.rowIdToCategory.fn](\n              ...this.options.rowIdToCategory.args\n            )\n        : identity;\n    }\n\n    removeRowLabels() {\n      while (this.pAxis.children.length) {\n        this.pAxis.removeChildAt(0);\n      }\n      if (this.rowLabels) {\n        this.rowLabels.forEach((rowLabel) => {\n          rowLabel.destroy();\n        });\n        this.rowLabels = undefined;\n      }\n    }\n\n    updateRowLabels(oldShowRowLabels) {\n      if (!this.tilesetInfo || !this.tilesetInfo.row_infos) return;\n\n      const labels = this.rowSelections.length\n        ? this.rowSelections.map((rowIndex) =>\n            this.tilesetInfo.row_infos[rowIndex] === undefined\n              ? '?'\n              : this.rowIdToCategory(this.tilesetInfo.row_infos[rowIndex].id)\n          )\n        : this.tilesetInfo.row_infos.map(({ id }) => this.rowIdToCategory(id));\n\n      this.removeRowLabels();\n\n      if (this.showRowLabels === 'indicator') {\n        this.rowLabels = labels.map((label) => {\n          const indicator = new PIXI.Sprite(PIXI.Texture.WHITE);\n          indicator.width = this.rowLabelSize / 2;\n          indicator.height = this.rowLabelSize;\n          indicator.tint = this.rowCategories[label]\n            ? HGC.utils.colorToHex(\n                this.rowCategories[label].axisLabelColor ||\n                  DEFAULT_GROUP_COLORS[\n                    this.rowCategories[label].index %\n                      DEFAULT_GROUP_COLORS.length\n                  ]\n              )\n            : 0x808080;\n          return indicator;\n        });\n      } else if (this.showRowLabels) {\n        this.rowLabels = labels.map(\n          (label) =>\n            new PIXI.Text(label, {\n              fontSize: this.rowLabelSize,\n              align: this.rowLabelAlign === 'right' ? 'right' : 'left',\n              fill: this.rowCategories[label]\n                ? HGC.utils.colorToHex(\n                    this.rowCategories[label].axisLabelColor ||\n                      DEFAULT_GROUP_COLORS_DARK[\n                        this.rowCategories[label].index %\n                          DEFAULT_GROUP_COLORS_DARK.length\n                      ]\n                  )\n                : 0x808080,\n            })\n        );\n      }\n    }\n\n    drawLabel() {\n      if (!this.showRowLabels) {\n        if (this.rowLabels) {\n          while (this.pAxis.children.length) {\n            this.pAxis.removeChildAt(0);\n          }\n        }\n        return;\n      }\n      if (this.showRowLabels && !this.rowLabels) this.updateRowLabels();\n      if (!this.rowLabels) return;\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const [, rowStepHeight] = this.getRowHeight();\n      const rowStepYCenter = rowStepHeight / 2;\n\n      this.rowLabels.forEach((label, i) => {\n        label.x = xLabelOffset;\n        label.y = yStart - this.rowPadding + rowStepYCenter;\n        label.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        label.anchor.y = 0.5;\n\n        yStart += rowStepHeight;\n\n        this.pAxis.addChild(label);\n      });\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    coarsifyTileValues(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const [numRows] = tile.tileData.shape;\n      const binSizePx = Math.floor(TILE_SIZE / this.markResolution);\n      const binSizeBp = tileWidth / this.markResolution;\n      const binSizeBpHalf = binSizeBp / 2;\n\n      // Determine bin boundaries\n      tile.tileData.binXPos = Array(this.markResolution).fill();\n      for (let i = 0; i <= this.markResolution; i++) {\n        tile.tileData.binXPos[i] = tileX + binSizeBp * i + binSizeBpHalf;\n      }\n\n      // 1. Coarsify the dense matrix according to `this.markResolution`\n      tile.tileData.valuesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      tile.tileData.maxValueByRow = Array(numRows).fill(-Infinity);\n\n      for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < TILE_SIZE; j += binSizePx) {\n          const meanValue = meanNan(\n            tile.tileData.dense.subarray(\n              i * TILE_SIZE + j,\n              i * TILE_SIZE + j + binSizePx\n            )\n          );\n          tile.tileData.valuesByRow[i].push(meanValue);\n          tile.tileData.maxValueByRow[i] =\n            meanValue > tile.tileData.maxValueByRow[i]\n              ? meanValue\n              : tile.tileData.maxValueByRow[i];\n        }\n      }\n\n      // 2. Sort rows\n      if (this.rowSelections.length) {\n        tile.tileData.valuesByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.valuesByRow[rowIdx])\n          .filter(identity);\n        tile.tileData.maxValueByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.maxValueByRow[rowIdx])\n          .filter(identity);\n      }\n\n      // 3. Set out shape\n      tile.tileData.coarseShape = [\n        tile.tileData.valuesByRow.length,\n        this.markResolution,\n      ];\n    }\n\n    updateTiles() {\n      Object.values(this.fetchedTiles).forEach(\n        this.coarsifyTileValues.bind(this)\n      );\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, visibleTrackHeight] = this.dimensions;\n      const numRows = getNumRows(fetchedTiles);\n\n      const [rowHeight] = this.getRowHeight();\n\n      const actualTrackHeight = this.getTrackHeight(numRows, rowHeight);\n\n      const globalMax = getMax(this.fetchedTiles);\n\n      this.valueScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([rowHeight, 0]);\n      this.colorIndexScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([0, this.markNumColors])\n        .clamp(true);\n\n      if (this.rowNormalization) {\n        const rowMaxs = getRowMaxs(this.fetchedTiles);\n        this.rowValueScales = {};\n        this.rowColorIndexScales = {};\n        for (let i = 0; i < numRows; i++) {\n          this.rowValueScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([rowHeight, 0]);\n          this.rowColorIndexScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([0, this.markNumColors])\n            .clamp(true);\n        }\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.rowValueScales[row](value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.rowColorIndexScales[row](value);\n      } else {\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.valueScale(value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.colorIndexScale(value);\n      }\n\n      this.rowScale = scaleLinear()\n        .domain([0, numRows])\n        .range([0, actualTrackHeight + this.rowPadding]);\n    }\n\n    tilesToData(tiles, { markArea, maxRows = Infinity, rowHeight } = {}) {\n      if (!tiles.length) return [];\n\n      const numRows = Math.min(maxRows, getNumRows(tiles));\n\n      const positionsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const colorIndicesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const offsetSignsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n\n      tiles.forEach((tile) => {\n        tile.tileData.valuesByRow.forEach((values, i) => {\n          if (i >= maxRows) return;\n          values.forEach((value, j) => {\n            const x = this._xScale(tile.tileData.binXPos[j]);\n            const yStart = this.rowScale(i);\n            const y = yStart + this.valueScaleByRow(value, i);\n            // We're duplicating the the point as for every point on the line we\n            // need two x,y vertices to render triangles.\n            positionsByRow[i].push(x, y, x, y);\n            colorIndicesByRow[i].push(-1, -1); // -1 refers to the line color\n            offsetSignsByRow[i].push(1, -1);\n\n            if (markArea) {\n              positionsByRow[i].push(x, y, x, yStart + rowHeight);\n              colorIndicesByRow[i].push(this.colorIndexScaleByRow(value, i), 0);\n              offsetSignsByRow[i].push(0, 0);\n            }\n          });\n        });\n      });\n\n      const size2d = markArea ? 8 : 4;\n      const size1d = markArea ? 4 : 2;\n\n      // For each row, duplicate the first and last point\n      for (let i = 0; i < numRows; i++) {\n        // Add first point pair to the beginning of the array\n        positionsByRow[i].unshift(...positionsByRow[i].slice(0, size2d));\n\n        // The very first duplicated point positions do not matter as\n        // we offset the buffer reading. Subsequent dupliations need to be\n        // taken into account though.\n        if (i > 0) {\n          colorIndicesByRow[i].unshift(\n            ...colorIndicesByRow[i].slice(0, size1d)\n          );\n          offsetSignsByRow[i].unshift(...offsetSignsByRow[i].slice(0, size1d));\n        }\n\n        // Add last point pair to the end of the array\n        positionsByRow[i].push(...positionsByRow[i].slice(-size2d));\n        colorIndicesByRow[i].push(...colorIndicesByRow[i].slice(-size1d));\n        offsetSignsByRow[i].push(...offsetSignsByRow[i].slice(-size1d));\n      }\n\n      return [\n        new Float32Array(positionsByRow.flatMap(identity)),\n        new Float32Array(colorIndicesByRow.flatMap(identity)),\n        new Float32Array(offsetSignsByRow.flatMap(identity)),\n      ];\n    }\n\n    toLineIndices(numRows, numPointsPerRow, markArea) {\n      const verticesPerLine = markArea ? 12 : 6;\n      const verticesPerPoint = markArea ? 4 : 2;\n      const indices = new Uint32Array(\n        (numPointsPerRow - 1) * numRows * verticesPerLine\n      );\n      let k = 0;\n\n      if (markArea) {\n        // Draw a line and area\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p1c = p1a + 2;\n            const p1d = p1a + 3;\n            const p2a = p1a + 4;\n            const p2b = p1a + 5;\n            const p2c = p1a + 6;\n            const p2d = p1a + 7;\n\n            const indexOffset = k * verticesPerLine;\n            // Area\n            indices[indexOffset] = p1c;\n            indices[indexOffset + 1] = p1d;\n            indices[indexOffset + 2] = p2c;\n            indices[indexOffset + 3] = p2c;\n            indices[indexOffset + 4] = p1d;\n            indices[indexOffset + 5] = p2d;\n            // Line\n            indices[indexOffset + 6] = p1a;\n            indices[indexOffset + 7] = p1b;\n            indices[indexOffset + 8] = p2a;\n            indices[indexOffset + 9] = p2a;\n            indices[indexOffset + 10] = p1b;\n            indices[indexOffset + 11] = p2b;\n\n            k++;\n          }\n        }\n      } else {\n        // Just draw a line\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p2a = p1a + 2;\n            const p2b = p1a + 3;\n\n            const indexOffset = k * verticesPerLine;\n            indices[indexOffset] = p1a;\n            indices[indexOffset + 1] = p1b;\n            indices[indexOffset + 2] = p2a;\n            indices[indexOffset + 3] = p2a;\n            indices[indexOffset + 4] = p1b;\n            indices[indexOffset + 5] = p2b;\n\n            k++;\n          }\n        }\n      }\n\n      return indices;\n    }\n\n    getRowHeight(numRows) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? [\n            Math.floor(visibleTrackHeight / numRows),\n            Math.floor(visibleTrackHeight / numRows),\n          ]\n        : [this.rowHeight, this.rowHeight + this.rowPadding];\n    }\n\n    getTrackHeight(numRows, rowHeight) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? visibleTrackHeight\n        : rowHeight * numRows + this.rowPadding * (numRows - 1);\n    }\n\n    renderLines() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n\n      const [positions, colorIndices, offsetSigns] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const numPointsPerRow = getNumPointsPerRow(\n        numRows,\n        positions,\n        this.markArea\n      );\n\n      const indices = this.toLineIndices(\n        numRows,\n        numPointsPerRow,\n        this.markArea\n      );\n\n      const uniforms = new PIXI.UniformGroup({\n        uLineColor: [...this.markColorRgbNorm, 1.0],\n        uNaNColor: [1.0, 1.0, 1.0, 1.0],\n        uAreaColorTex: this.markColorTex,\n        uAreaColorTexRes: this.markColorTexRes,\n        uWidth: 0.25,\n        uMiter: 1,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      const numCoords = 2;\n      const numVerticesPoint = this.markArea ? 4 : 2;\n      geometry.addAttribute(\n        'aPrevPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        0 // offset/start\n      );\n      geometry.addAttribute(\n        'aCurrPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        // note that each point is duplicated, hence we need to skip over the first two\n        FLOAT_BYTES * numCoords * numVerticesPoint // offset/start\n      );\n      geometry.addAttribute(\n        'aNextPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * 2, // stride\n        // note that each point is duplicated, hence we need to skip over the first four\n        FLOAT_BYTES * numCoords * numVerticesPoint * 2 // offset/start\n      );\n      geometry.addAttribute('aOffsetSign', offsetSigns, 1);\n      geometry.addAttribute('aColorIndex', colorIndices, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.lineGraphics) {\n        this.pMain.removeChild(this.lineGraphics);\n        this.lineGraphics.destroy();\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.lineGraphics = newGraphics;\n\n      scaleGraphics(this.lineGraphics, this._xScale, this.drawnAtScale);\n\n      this.draw();\n      this.animate();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.renderLines();\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.lineGraphics) {\n        scaleGraphics(this.lineGraphics, newXScale, this.drawnAtScale);\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Return the data currently visible at position X and Y\n     *\n     * @param {Number} trackX: The x position relative to the track's start and end\n     * @param {Number} trakcY: The y position relative to the track's start and end\n     */\n    getVisibleData(trackX, trackY) {\n      const zoomLevel = this.calculateZoomLevel();\n\n      const numRows = getNumRows(this.fetchedTiles);\n      const [, rowStepHeight] = this.getRowHeight(numRows);\n\n      // the width of the tile in base pairs\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tilePos = this._xScale.invert(trackX) / tileWidth;\n\n      // the position of query within the tile\n      let posInTileX =\n        this.tilesetInfo.tile_size * (tilePos - Math.floor(tilePos));\n      // const posInTileYNormalized = trackY / this.dimensions[1];\n      // The first track doesn't apply padding so we have to shift padding\n      // to the mouse position once\n      const rowIndex = Math.floor(\n        Math.max(0, (trackY + this.rowPadding) / rowStepHeight)\n      );\n      const rowSelection = this.rowSelections[rowIndex];\n      const tileId = this.tileToLocalId([zoomLevel, Math.floor(tilePos)]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      let text = '';\n      let value = '<em>unknown</em>';\n\n      if (fetchedTile) {\n        if (!this.tilesetInfo.shape) {\n          posInTileX =\n            fetchedTile.tileData.dense.length * (tilePos - Math.floor(tilePos));\n        }\n\n        let index = null;\n        if (this.tilesetInfo.shape) {\n          // Accomodate data from vector sources\n          if (\n            Array.isArray(rowSelection) &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            // Need to aggregate, so `index` will actually be an array.\n            index = rowSelection.map(\n              (rowI) =>\n                this.tilesetInfo.shape[0] * rowI + Math.floor(posInTileX)\n            );\n          } else if (\n            rowSelection &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            index =\n              this.tilesetInfo.shape[0] * rowSelection + Math.floor(posInTileX);\n          } else {\n            // No need to aggregate, `index` will contain a single item.\n            index =\n              this.tilesetInfo.shape[0] * rowIndex + Math.floor(posInTileX);\n          }\n        } else {\n          index =\n            fetchedTile.tileData.dense.length * rowIndex +\n            Math.floor(posInTileX);\n        }\n\n        if (Array.isArray(index)) {\n          const values = index.map((i) => fetchedTile.tileData.dense[i]);\n          value = format('.3f')(this.selectRowsAggregationFn(values));\n          text = value;\n\n          text += '<br/>';\n          text += `${index.length}-item ${this.options.selectRowsAggregationMode}`;\n        } else {\n          value = format('.3f')(fetchedTile.tileData.dense[index]);\n          text = value;\n\n          if (Array.isArray(rowSelection)) {\n            value += '<br/>';\n            value += `${rowSelection.length}-item ${this.options.selectRowsAggregationMode}`;\n          }\n        }\n      }\n\n      // add information about the row\n      if (this.tilesetInfo.row_infos) {\n        let rowInfo = '';\n\n        if (rowSelection !== undefined) {\n          rowInfo = this.tilesetInfo.row_infos[rowSelection];\n        } else if (rowIndex) {\n          rowInfo = this.tilesetInfo.row_infos[rowIndex];\n        }\n\n        const label =\n          typeof rowInfo === 'object'\n            ? this.rowIdToCategory(rowInfo.id)\n            : rowInfo;\n\n        const color = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_GROUP_COLORS_DARK[\n              this.rowCategories[label].index % DEFAULT_GROUP_COLORS_DARK.length\n            ]\n          : '#666666';\n\n        const background = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_GROUP_COLORS_LIGHT[\n              this.rowCategories[label].index %\n                DEFAULT_GROUP_COLORS_LIGHT.length\n            ]\n          : '#ffffff';\n\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${background}\"><strong style=\"color: ${color};\">${label}:</strong> ${value}</div>`;\n      }\n\n      return text;\n    }\n\n    /**\n     * Get some information to display when the mouse is over this\n     * track\n     *\n     * @param {Number} trackX: the x position of the mouse over the track\n     * @param {Number} trackY: the y position of the mouse over the track\n     *\n     * @return {string}: A HTML string containing the information to display\n     *\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      return this.getVisibleData(trackX, trackY);\n    }\n  }\n\n  return new RidgePlotTrack(...args);\n};\n\ncreateRidgePlotTrack.config = {\n  type: 'ridge-plot',\n  datatype: ['multivec'],\n  orientation: '1d',\n  name: 'RidgePlot',\n};\n\nexport default createRidgePlotTrack;\n","import createIntervalTree from 'interval-tree-1d';\n\nimport {\n  DEFAULT_GROUP_COLORS,\n  DEFAULT_GROUP_COLORS_DARK,\n  DEFAULT_GROUP_COLORS_LIGHT,\n} from './constants';\nimport { contains, dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aHighlight;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main(void)\n  {\n    vHighlight = aHighlight;\n    vOpacity = aOpacity;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n\n  uniform vec4 uColor;\n  uniform vec4 uColorHighlight;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main() {\n    float isNotFocused = 1.0 - vHighlight;\n\n    float r = uColor.r * isNotFocused + uColorHighlight.r * vHighlight;\n    float g = uColor.g * isNotFocused + uColorHighlight.g * vHighlight;\n    float b = uColor.b * isNotFocused + uColorHighlight.b * vHighlight;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [pt.opacity, pt.opacity, pt.opacity, pt.opacity];\n\nconst pointToHighlight = (pt) => [\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getRegionId = (item) =>\n  `${item.fields[0]}:${item.fields[1]}-${item.fields[2]}`;\n\nconst createStratifiedBedTrack = function createStratifiedBedTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class StratifiedBedTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.regionId = getRegionId(item);\n        item.isLeftToRight = item.start < item.end;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorHighlight = HGC.utils.colorToHex(\n        this.options.markColorHighlight || 'red'\n      );\n\n      this.markColorHighlightRgbNorm = this.options.markColorHighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorHighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markColorDehighlight = HGC.utils.colorToHex(\n        this.options.markColorDehighlight || '#999999'\n      );\n\n      this.markColorDehighlightRgbNorm = this.options.markColorDehighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorDehighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0.6, 0.6, 0.6];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      this.opacityEncoding = this.options.opacityEncoding || 'solid';\n\n      switch (this.opacityEncoding) {\n        case 'frequency':\n          this.opacityScale = () => 0.1;\n          break;\n\n        case 'highestImportance':\n        case 'closestImportance': {\n          const importanceDomain = this.options.importanceDomain || [1000, 1];\n          const opacityLinearScale = scaleLinear()\n            .domain(importanceDomain)\n            .range([1, 10]);\n          this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n          break;\n        }\n\n        case 'solid':\n        default:\n          this.opacityScale = () => 1;\n          break;\n      }\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.getRegion = this.options.focusRegion\n        ? (item) => [item.xStart, item.xEnd]\n        : undefined;\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.focusStyle = this.options.focusStyle\n        ? this.options.focusStyle.toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item, isHighlighting) {\n      return {\n        cX: this._xScale(item.start),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        highlight: isHighlighting && item.__focus,\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n        __item: item,\n      };\n    }\n\n    isItemInFocus() {\n      if (\n        this.getGene &&\n        this.focusGene &&\n        this.getRegion &&\n        this.focusRegion\n      ) {\n        return (item) => {\n          item.__focus =\n            this.getGene(item) === this.focusGene &&\n            contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      if (this.getGene && this.focusGene) {\n        return (item) => {\n          item.__focus = this.getGene(item) === this.focusGene;\n          return item.__focus;\n        };\n      }\n\n      if (this.getRegion && this.focusRegion) {\n        return (item) => {\n          item.__focus = contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      return (item) => {\n        item.__focus = false;\n        // If no focus was defined, we include all intervals\n        return true;\n      };\n    }\n\n    itemToIndicatorReducer(filterFn, addFn) {\n      if (this.focusStyle === 'highlighting') {\n        return (filteredItems, item) => {\n          filterFn(item);\n          addFn(filteredItems, item);\n          return filteredItems;\n        };\n      }\n\n      return (filteredItems, item) => {\n        if (filterFn(item)) addFn(filteredItems, item);\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      let reducerVar = [];\n      let addFn = (accumulator, item) =>\n        accumulator.push(this.itemToIndicatorCategory(item, isHighlighting));\n\n      if (this.opacityEncoding === 'highestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (accumulator[item.regionId]) {\n            const i1 = this.getImportance(accumulator[item.regionId].__item);\n            const i2 = this.getImportance(item);\n            if (i2 > i1) {\n              accumulator[item.regionId] = this.itemToIndicatorCategory(\n                item,\n                isHighlighting\n              );\n            }\n          } else {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      } else if (this.opacityEncoding === 'closestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (\n            !accumulator[item.regionId] ||\n            item.width < accumulator[item.regionId].__item.width\n          ) {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      }\n\n      const filterFn = this.isItemInFocus();\n      const dataToPoint = this.itemToIndicatorReducer(filterFn, addFn);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        Object.values(tile.tileData.reduce(dataToPoint, reducerVar))\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const highlights = new Float32Array(points.flatMap(pointToHighlight));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: isHighlighting\n          ? [...this.markColorDehighlightRgbNorm, this.markOpacity]\n          : [...this.markColorRgbNorm, this.markOpacity],\n        uColorHighlight: [...this.markColorHighlightRgbNorm, this.markOpacity],\n        uHighlighting: isHighlighting,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aHighlight', highlights, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (this.options.focusStyle === 'highlighting') {\n          this.pAxis.beginFill(0xffffff, 0.66);\n        } else {\n          this.pAxis.beginFill(this.groupToColor.get(i)[1], 0.66);\n        }\n\n        this.pAxis.lineStyle(0);\n        if (this.axisAlign === 'right') {\n          this.pAxis.drawRect(\n            labelPixiText.x - labelPixiText.width,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        } else {\n          this.pAxis.drawRect(\n            labelPixiText.x,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        }\n        this.pAxis.endFill();\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      this.renderIndicatorPoints();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(trackX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(trackY))\n      );\n\n      const xAbsLo = this._xScale.invert(trackX - 1);\n      const xAbsHi = this._xScale.invert(trackX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      if (foundItem) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(foundItem).toFixed(2);\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new StratifiedBedTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStratifiedBedTrack.config = {\n  type: 'stratified-bed',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStratifiedBedTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo || !this.options.toolTip) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst DEFAULT_COLOR_MAP = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n      tile.histogram2dNumPred = new Uint8Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      const categoryBinHash = new Map();\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const category = this.getCategory(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          const binHash = categoryBinHash.get(category) || {};\n\n          // Make sure we count multiple enhancer predictions of the same biosample and bin only once (i.e., summing up)\n          if (!binHash[bin]) {\n            binHash[bin] = binHash[bin] || score > 0;\n            tile.histogram2dNumPred[histIdx] += binHash[bin];\n            categoryBinHash.set(category, binHash);\n          }\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const rowCumSum = [];\n      const rowNumPred = [];\n      let totalPred = 0;\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        const numPred =\n          fetchedTile.histogram2dNumPred[i * this.numBins + binXPos];\n        rowNumPred.push(numPred);\n        totalPred += numPred;\n        rowCumSum.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = rowCumSum.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value =\n          fetchedTile.histogram2dNumPred[group * this.numBins + binXPos];\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value} of ${totalPred} samples</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import createPubSub from 'pub-sub-es';\n\nfunction createTssTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  class TssTrack extends HGC.tracks.BedLikeTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      const { publish, subscribe, unsubscribe } = createPubSub();\n      this.publish = publish;\n      this.subscribe = subscribe;\n      this.unsubscribe = unsubscribe;\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = 1;\n      const radius = 2;\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = {\n              xStartScreen: xStartPos,\n              xEndScreen: xEndPos,\n              xStartAbs: txStart,\n              xEndAbs: txEnd,\n              data: td,\n            };\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        circleDraws.forEach((circleDraw) => {\n          this.publish('annotationDrawn', circleDraw);\n        });\n      }\n    }\n\n    rerender() {\n      // Monkey patch because TiledPixiTrack doesn't always fire correctly\n      this.draw();\n      this.pubSub.publish('TiledPixiTrack.tilesDrawnEnd', { uuid: this.uuid });\n    }\n\n    getMouseOverHtml() {\n      return '';\n    }\n  }\n\n  return new TssTrack(...args);\n}\n\ncreateTssTrack.config = {\n  type: 'tss',\n  datatype: ['bedlike'],\n};\n\nexport default createTssTrack;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAnnotationOverlayMetaTrack from './annotation-overlay-meta-track';\nimport createRidgePlotTrack from './ridge-plot-track';\nimport createStratifiedBedTrack from './stratified-bed-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\nimport createTssTrack from './tss-track';\n\nimport './index.css';\n\nregister({\n  track: createRidgePlotTrack,\n  config: createRidgePlotTrack.config,\n});\n\nregister({\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  track: createStratifiedBedTrack,\n  config: createStratifiedBedTrack.config,\n});\n\nregister({\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nregister({\n  track: createTssTrack,\n  config: createTssTrack.config,\n});\n\nregister({\n  track: createAnnotationOverlayMetaTrack,\n  config: createAnnotationOverlayMetaTrack.config,\n  isMetaTrack: true,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}