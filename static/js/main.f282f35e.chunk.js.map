{"version":3,"sources":["AppInitializing.js","AppError.js","SearchField.js","use-debounce.js","utils.js","use-query-string.js","constants.js","Viewer.js","with-either.js","App.js","serviceWorker.js","annotation-overlay-meta-track.js","stratified-bed-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","tss-track.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","backgroundColor","AppInitializing","classes","className","Backdrop","open","CircularProgress","SearchField","props","useState","setOpen","options","setOptions","inputValue","searchQuery","setSearchQuery","debouncedSearchQuery","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","loading","length","active","a","fetch","searchUrl","response","json","geneList","Autocomplete","onChange","event","newValue","onInputChange","newInputValue","fullWidth","style","width","onOpen","onClose","getOptionSelected","option","_value","geneName","getOptionLabel","renderInput","params","TextField","id","label","variant","size","InputProps","endAdornment","Fragment","defaultProps","identity","contains","b","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","rgba","Float32Array","forEach","i","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","y","dashSize","diff","direction","sign","abs","stepSize","numSteps","moveTo","lineTo","getQueryStringValue","key","decoder","queryString","parse","window","location","search","setQueryStringValue","encoder","values","newQsValue","stringify","strict","url","origin","pathname","history","pushState","path","toAbsPosition","position","chromInfo","absPosition","indexOf","split","chrom","pos","chrPositions","useQueryString","initialValue","undefined","setValue","onSetValue","useCallback","GENE_SEARCH_URL","VARIANT_SEARCH_URL","DEFAULT_STRATIFICATION","categoryField","axisShowGroupSeparator","groups","categories","DEFAULT_VIEW_CONFIG","editable","trackSourceServers","views","uid","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","visible","chromInfoPath","tracks","top","type","height","contents","stroke","fontSize","fontIsLeftAligned","showMousePosition","mousePositionColor","tilesetUid","server","fromViewUid","projectionFillColor","projectionStrokeColor","projectionFillOpacity","projectionStrokeOpacity","strokeWidth","plusStrandColor","minusStrandColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","focusRegion","name","toolTip","field","numDecimals","other","binSize","axisAlign","labelPosition","arcStyle","indicatorStyle","labelColor","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","markMinWidth","markHeight","rowHeight","overlays","includes","extent","minWidth","fill","fillOpacity","outline","outlineOpacity","outlineWidth","outlinePos","metaTracks","overlaysTrack","annotationTracks","layout","w","h","x","initialXDomain","initialYDomain","root","display","right","bottom","left","appBar","marginLeft","palette","common","black","white","boxShadow","grey","flexShrink","drawerPaper","textInput","toolbar","mixins","content","flexDirection","flexGrow","padding","spacing","higlass","DEFAULT_HIGLASS_OPTIONS","sizeMode","chrPosUrlEncoder","chrPos","replace","chrPosUrlDecoder","Viewer","focusGene","setFocusGene","focusVariant","setFocusVariant","matrixColoring","setMatrixColoring","variantYScale","setVariantYScale","absToChr","slice","join","xDomainStart","setXDomainStart","xDomainEnd","setXDomainEnd","focusGeneOption","setFocusGeneOption","focusVariantOption","setFocusVariantOption","higlassApi","useRef","viewConfig","useMemo","pipe","gene","start","chr","txStart","end","txEnd","n","Number","isNaN","coloring","opacityEncoding","yScale","newXDomainStart","newXDomainEnd","xDomain","deepClone","numericalXDomainStart","isString","chrToAbs","numericalXDomainEnd","focusGeneChangeHandler","focusVariantChangeHandler","higlassClickHandler","payload","fields","score","importance","higlassLocationChangeHandlerDb","debounce","map","absPos","r","results","higlassInitHandler","higlassInstance","current","api","on","CssBaseline","AppBar","Toolbar","Typography","noWrap","Drawer","paper","anchor","Divider","Box","m","FormControl","margin","InputLabel","htmlFor","OutlinedInput","target","Button","onClick","newViewConfig","zoomTo","disableElevation","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","ref","withEither","ifEitherFn","EitherComponent","Component","createMuiTheme","primary","main","secondary","App","setChromInfo","ChromosomeInfo","then","_chromInfo","totalLength","catch","AppViewer","AppError","ThemeProvider","Boolean","hostname","match","createAnnotationOverlayMetaTrack","HGC","Error","pubSub","services","AnnotationOverlayMetaTrack","context","definition","getTrackObject","animate","onNewTilesLoaded","this","annotationTrackIds","Set","track","add","uuid","console","warn","filter","annotationDrawnHandlerBound","annotationDrawnHandler","bind","drawnAnnotations","Map","tracksDrawingTiles","pubSubs","subscribe","push","tilesDrawnEndHandler","xStartAbs","xEndAbs","data","set","unsubscribe","has","updateOverlays","Array","from","draw","clear","args","config","availableOptions","defaultOptions","VS","FS","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","pointToPosition","pt","cX","widthHalf","pointToIndex","base","pointToOpacity","opacity","pointToFocused","focused","getIs2d","tile","tileData","yStart","get1dItemWidth","item","get2dItemWidth","yEnd","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","fetchedTiles","Object","reduce","maxWidth","maxWidthItem","scaleScalableGraphics","xScale","drawnAtScale","tileK","domain","posOffset","scale","getRegionId","createStratifiedBedTrack","libraries","d3Scale","scaleLinear","scaleLog","tileProxy","opacityLogScale","range","clamp","StratifiedBedTrack","updateOptions","is2d","getItemWidth","getStart","getEnd","intervals","regionId","isLeftToRight","intervalTree","createIntervalTree","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","toLowerCase","categoryToY","yToCategory","groupSizes","group","groupSize","k","utils","colorToHex","category","j","cat","groupLabelsPixiText","Text","labelSize","align","axisLabelColor","markColorRgbNorm","colorToRgba","min","markColorFocusRgbNorm","getImportance","opacityScale","opacityLinearScale","Infinity","getRegion","getGene","minImportance","updateStratificationOption","newOptions","updateExistingGraphics","dimensions","heightScale","categoryHeightScale","valueScale","valueScaleInverted","_xScale","get","__item","addFn","filteredItems","region","reducerVar","accumulator","itemToIndicatorCategory","i1","dataToPoint","itemToIndicatorReducer","points","flatMap","positions","indices","Uint16Array","opacities","uniforms","UniformGroup","uColor","uColorFocused","shader","Shader","geometry","Geometry","addAttribute","addIndex","mesh","Mesh","newGraphics","Graphics","addChild","pMain","indicatorPointGraphics","removeChild","drawAxis","pAxis","xTickOffset","xTickEnd","xLabelOffset","numAxisLabels","children","lineStyle","labelPixiText","renderIndicatorCategoryAxis","renderIndicatorPoints","hasFetchedTiles","updateScales","updateIndicators","storePolyStr","axisNoGroupColor","beginFill","drawRect","endFill","trackX","trackY","tilesetInfo","zoomLevel","calculateZoomLevel","tileWidth","calculateTileWidth","tile_size","tileId","tileToLocalId","floor","invert","fetchedTile","foundItem","xAbsLo","xAbsHi","queryInterval","interval","bg","colorHex","toString","bgHex","toFixed","newPosition","newXScale","newYScale","refreshTiles","setAttribute","output","document","createElement","appendChild","visibleAndFetchedTiles","polys","drawTile","polyStr","g","HorizontalLine1DPixiTrack","datatype","orientation","thumbnail","DOMParser","parseFromString","documentElement","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","createScalableArcs1dTrack","ScalableArcs1dTrack","numBins","pointSize","widthHistogramLeft","Uint32Array","widthHistogramRight","bin","round","histPos","widthHistogramMax","updateTileWidthHistogram","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","mapFn","vertexShader","fragmentShader","drawTriangles","uPointSize","State","DRAW_MODES","TRIANGLES","POINTS","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","startsWith","drawCircle","drawEllipse","x1","x2","trackWidth","trackHeight","d","cx","cy","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","createSnpTrack","d3Array","scaleBand","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","radius","rectGraphics","finalDotYPos","rows","maxRows","initialize","rowScale","paddingInner","circleDraws","circleFocusDraws","td","geneInfo","chrOffset","yMiddle","step","drawnRects","circleDraw","drawPoly","interactive","buttonMode","mouseup","hoveringSnp","publish","relTilePos","tilePos","minDist","dist","itemY","MAX_RADIUS","otherStr","v","substr","BedLikeTrack","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","getTilePosAndDimensions","tileX","binXPos","histogram1d","histogram2d","histogram2dNumPred","Uint8Array","categoryBinHash","maxBinId","binStart","binEnd","histIdx","binHash","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","rowCumSum","rowNumPred","totalPred","sum","numPred","relYPos","findIndex","createTssTrack","TssTrack","createPubSub","xStartScreen","xEndScreen","register","isMetaTrack","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"8XAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,OAAQF,EAAME,OAAOC,OAAS,EAC9BC,MAAO,OACPC,gBAAiB,YAgBNC,EAZS,WACtB,IAAMC,EAAUT,IAEhB,OACE,yBAAKU,UAAU,WACb,kBAACC,EAAA,EAAD,CAAUD,UAAWD,EAAQN,SAAUS,MAAM,GAC3C,kBAACC,EAAA,EAAD,CAAkBP,MAAM,eCVjBE,G,OANS,kBACtB,yBAAKE,UAAU,qBACb,0D,mMCIW,SAASI,EAAYC,GAAQ,IAAD,EACjBC,oBAAS,GADQ,mBAClCJ,EADkC,KAC5BK,EAD4B,OAEXD,mBAAS,IAFE,mBAElCE,EAFkC,KAEzBC,EAFyB,OAGHH,mBAASD,EAAMK,YAHZ,mBAGlCC,EAHkC,KAGrBC,EAHqB,KAInCC,ECXO,SAAqBC,EAAOC,GAAQ,IAAD,EACJT,mBAASQ,GADL,mBACzCE,EADyC,KACzBC,EADyB,KAahD,OAVAC,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBH,EAAkBH,KACjBC,GAEH,OAAO,WACLM,aAAaF,MAEd,CAACL,EAAOC,IAEJC,EDFsBM,CAAYX,EAAa,KAChDY,EAAUrB,GAA2B,IAAnBM,EAAQgB,OA+BhC,OA7BAN,qBAAU,WACR,IAAIO,GAAS,EAEb,GAAKvB,EAeL,OAbAO,EAAW,IAEX,sBAAC,8BAAAiB,EAAA,sEACwBC,MAAM,GAAD,OACvBtB,EAAMuB,UADiB,eACDf,GAAwB,KAFpD,cACOgB,EADP,gBAIwBA,EAASC,OAJjC,OAIOC,EAJP,OAMKN,GACFhB,EAAWsB,GAPd,0CAAD,GAWO,WACLN,GAAS,KAEV,CAACpB,EAAMuB,UAAW1B,EAAMW,IAE3BK,qBAAU,WACHhB,GACHO,EAAW,MAEZ,CAACP,IAGF,kBAAC8B,EAAA,EAAD,CACEC,SAAU,SAACC,EAAOC,GAChB9B,EAAM4B,SAASE,IAEjBrB,MAAOT,EAAMS,MACbsB,cAAe,SAACF,EAAOG,GACjBH,GAAOtB,EAAeyB,IAE5BC,UAAWjC,EAAMiC,UACjBC,MAAO,CAAEC,MAAOnC,EAAMiC,UAAY,OAASjC,EAAMmC,OACjDtC,KAAMA,EACNuC,OAAQ,WACNlC,GAAQ,IAEVmC,QAAS,WACPnC,GAAQ,IAEVoC,kBAAmB,SAACC,EAAQC,GAAT,OACjBD,EAAOE,WAAaD,EAAOC,UAE7BC,eAAgB,SAACH,GAAD,OAAYA,EAAOE,UACnCtC,QAASH,EAAMS,OAA4B,IAAnBN,EAAQgB,OAAe,CAACnB,EAAMS,OAASN,EAC/De,QAASA,EACTyB,YAAa,SAACC,GAAD,OACX,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEEE,GAAI9C,EAAM8C,GACVC,MAAO/C,EAAM+C,MACbC,QAAShD,EAAMgD,QACfC,KAAMjD,EAAMiD,KACZC,WAAU,2BACLN,EAAOM,YADF,IAERC,aACE,kBAAC,IAAMC,SAAP,KACGlC,EACC,kBAACpB,EAAA,EAAD,CAAkBP,MAAM,UAAU0D,KAAM,KACtC,KACHL,EAAOM,WAAWC,sBAUnCpD,EAAYsD,aAAe,CACzBzB,SAAU0B,IACVP,MAAO,GACPD,GAAI,GACJb,WAAW,EACXgB,KAAM,QACNxC,MAAO,KACPuC,QAAS,WACTb,MAAO,S,8BElGIoB,EAAW,SAAClC,EAAGmC,GAAJ,OAAUnC,EAAE,IAAMmC,EAAE,IAAMnC,EAAE,IAAMmC,EAAE,IAE/CC,EAAqB,SAACC,EAAMC,GACvC,IAAMC,EAAcC,KAAKC,IAAI,EAAGD,KAAKE,KAAKF,KAAKG,KAAKL,EAAOxC,UACrD8C,EAAO,IAAIC,aAAgC,EAAnB,SAAAN,EAAe,IAY7C,OAXAD,EAAOQ,SAAQ,SAAC5E,EAAO6E,GAErBH,EAAS,EAAJG,GAAS7E,EAAM,GAEpB0E,EAAS,EAAJG,EAAQ,GAAK7E,EAAM,GAExB0E,EAAS,EAAJG,EAAQ,GAAK7E,EAAM,GAExB0E,EAAS,EAAJG,EAAQ,GAAK7E,EAAM,MAGnB,CAACmE,EAAKW,QAAQC,WAAWL,EAAML,EAAaA,GAAcA,IAGtDW,EAAgB,SAACC,EAAUC,EAAQC,EAAMC,EAAGC,GAMvD,IALA,IAAMC,EAAOH,EAAOD,EACdK,EAAYjB,KAAKkB,KAAKF,GACtB1C,EAAQ0B,KAAKmB,IAAIH,GACjBI,EAAsB,EAAXL,EACXM,EAAWrB,KAAKE,KAAK5B,EAAQ8C,GAC1Bb,EAAI,EAAGA,EAAIc,EAAUd,IAC5BI,EAASW,OAAOV,EAASL,EAAIa,EAAWH,EAAWH,GACnDH,EAASY,OAAOX,GAAUL,EAAIa,EAAWL,GAAYE,EAAWH,IAIvDU,EAAsB,SAACC,GAAD,IAAMC,EAAN,uDAAgBjC,IAAhB,OACjCiC,EAAQC,IAAYC,MAAMC,OAAOC,SAASC,QAAQN,KAEvCO,EAAsB,SAACP,EAAK7E,GAA+B,IAAxBqF,EAAuB,uDAAbxC,IAClDyC,EAASP,IAAYC,MAAMC,OAAOC,SAASC,QAC3CI,EAAaR,IAAYS,UAAZ,2BAEZF,GAFY,kBAGdT,EAAMQ,EAAQrF,KAEjB,CAAEyF,QAAQ,IAENC,EAAG,UAAMT,OAAOC,SAASS,QAAtB,OAA+BV,OAAOC,SAASU,SAA/C,YAA2DL,GACpEN,OAAOY,QAAQC,UAAU,CAAEC,KAAML,GAAO,GAAIA,IAGjCM,EAAgB,SAACC,EAAUC,GACtC,IAAIC,EACJ,GAAIF,EAASG,SAAWH,EAASG,QAAQ,MAAQ,EAAG,CAAC,IAAD,EAC7BH,EAASI,MAAM,KADc,mBAC3CC,EAD2C,KACpCC,EADoC,KAElDJ,EAAcD,EAAUM,aAAaF,GAAOC,MAAOA,OAEnDJ,GAAeF,EAEjB,OAAOE,GCnCMM,MApBf,SAAwB5B,EAAK6B,GAA0C,IAAD,yDAAJ,GAArBrB,EAAyB,EAAzBA,QAASP,EAAgB,EAAhBA,QAAgB,EAC1CtF,wBACcmH,IAAtC/B,EAAoBC,EAAKC,GACrB4B,EACA9B,EAAoBC,EAAKC,IAJqC,mBAC7D9E,EAD6D,KACtD4G,EADsD,KAM9DC,EAAaC,uBACjB,SAACzF,GACCuF,EAASvF,GACT+D,EAAoBP,EAAKxD,EAAUgE,KAErC,CAACR,EAAKQ,IAMR,OAFAD,EAAoBP,EAAK7E,EAAOqF,GAEzB,CAACrF,EAAO6G,ICpBJE,EACX,8DAEWC,EACX,6DAEWC,GAAyB,CACpCC,cAAe,GACfC,wBAAwB,EAExBC,OAAQ,CACN,CACE9E,MAAO,yBACP+E,WAAY,CACV,wBACA,qBACA,2DACA,0DACA,4DACA,gBACA,sBACA,0DACA,sBACA,+BACA,2DACA,gCACA,qBACA,+EACA,4DACA,wBACA,uCACA,iFACA,0DACA,qBACA,OACA,iCACA,iFACA,gBACA,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACE/E,MAAO,UACP+E,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACE/E,MAAO,UACP+E,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACE/E,MAAO,6BACP+E,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACE/E,MAAO,cACP+E,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACE/E,MAAO,aACP+E,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCACA,0BACA,qDACA,gBACA,0BACA,wBACA,aACA,0BACA,qDACA,2BACA,uCACA,QACA,4CACA,gBACA,uBACA,mCACA,kCACA,gDACA,iBACA,kCAGJ,CACE/E,MAAO,QACP+E,WAAY,CACV,wBACA,kBACA,oBACA,yBACA,2BACA,yBACA,gBACA,8BACA,gCACA,yBACA,mBACA,eACA,cACA,yBACA,6BACA,oBACA,wDACA,6CACA,QACA,2DACA,uBACA,iEACA,sEASKC,GAAsB,CACjCC,UAAU,EACVC,mBAAoB,CAClB,sBACA,0CAEFC,MAAO,CAqDL,CACEC,IAAK,UACLC,wBAAyB,CACvBC,mBAAoB,sBACpBC,eAAgB,yBAChBC,gBAAiB,sBACjBC,YAAa,OACbC,SAAS,GAEXC,cAAe,oDACfC,OAAQ,CACNC,IAAK,CACH,CACEC,KAAM,WACNV,IAAK,kBACLW,OAAQ,GACRC,SAAU,CACR,CACEF,KAAM,+BACN1I,QAAS,C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","file":"static/js/main.f282f35e.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#bbb',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst AppInitializing = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"full-wh\">\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { identity } from '@flekschas/utils';\n\nimport useDebounce from './use-debounce';\n\nexport default function SearchField(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(props.inputValue);\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!open) return undefined;\n\n    setOptions([]);\n\n    (async () => {\n      const response = await fetch(\n        `${props.searchUrl}&ac=${debouncedSearchQuery || ''}`\n      );\n      const geneList = await response.json();\n\n      if (active) {\n        setOptions(geneList);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [props.searchUrl, open, debouncedSearchQuery]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      value={props.value}\n      onInputChange={(event, newInputValue) => {\n        if (event) setSearchQuery(newInputValue);\n      }}\n      fullWidth={props.fullWidth}\n      style={{ width: props.fullWidth ? 'auto' : props.width }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, _value) =>\n        option.geneName === _value.geneName\n      }\n      getOptionLabel={(option) => option.geneName}\n      options={props.value && options.length === 0 ? [props.value] : options}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          id={props.id}\n          label={props.label}\n          variant={props.variant}\n          size={props.size}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nSearchField.defaultProps = {\n  onChange: identity,\n  label: '',\n  id: '',\n  fullWidth: true,\n  size: 'small',\n  value: null,\n  variant: 'outlined',\n  width: '10rem',\n};\n\nSearchField.propTypes = {\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  searchUrl: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  value: PropTypes.object,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { identity } from '@flekschas/utils';\nimport queryString from 'query-string';\n\nexport const contains = (a, b) => a[0] <= b[0] && a[1] >= b[1];\n\nexport const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nexport const dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nexport const getQueryStringValue = (key, decoder = identity) =>\n  decoder(queryString.parse(window.location.search)[key]);\n\nexport const setQueryStringValue = (key, value, encoder = identity) => {\n  const values = queryString.parse(window.location.search);\n  const newQsValue = queryString.stringify(\n    {\n      ...values,\n      [key]: encoder(value),\n    },\n    { strict: false }\n  );\n  const url = `${window.location.origin}${window.location.pathname}?${newQsValue}`;\n  window.history.pushState({ path: url }, '', url);\n};\n\nexport const toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n","import { useState, useCallback } from 'react';\nimport { getQueryStringValue, setQueryStringValue } from './utils';\n\nfunction useQueryString(key, initialValue, { encoder, decoder } = {}) {\n  const [value, setValue] = useState(\n    getQueryStringValue(key, decoder) === undefined\n      ? initialValue\n      : getQueryStringValue(key, decoder)\n  );\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n\nexport default useQueryString;\n","export const GENE_SEARCH_URL =\n  'https://higlass.io/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA';\n\nexport const VARIANT_SEARCH_URL =\n  'https://resgen.io/api/v1/suggest/?d=VF5-RDXWTxidGMJU7FeaxA';\n\nexport const DEFAULT_STRATIFICATION = {\n  categoryField: 10,\n  axisShowGroupSeparator: true,\n  // axisNoGroupColor: true,\n  groups: [\n    {\n      label: 'Mononuclear Phagocytes',\n      categories: [\n        'THP1_LPS_4hr-Engreitz',\n        'THP_pmaLPS_ATAC_6h',\n        'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n        'THP1-Engreitz',\n        'THP_pmaLPS_ATAC_96h',\n        'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n        'THP_pmaLPS_ATAC_72h',\n        'THP-1_monocyte-VanBortle2017',\n        'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n        'CD14-positive_monocyte-ENCODE',\n        'THP_pmaLPS_ATAC_2h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n        'U937_LPS_4hr-Engreitz',\n        'CD14-positive_monocyte-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n        'THP_pmaLPS_ATAC_0h',\n        'HAP1',\n        'THP-1_macrophage-VanBortle2017',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n        'U937-Engreitz',\n        'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n        'THP_pmaLPS_ATAC_24h',\n        'THP_pmaLPS_ATAC_1h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n        'THP_pmaLPS_ATAC_120h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n        'THP_pmaLPS_ATAC_48h',\n        'CD14-positive_monocytes-Roadmap',\n        'THP_pmaLPS_ATAC_12h', // monoctye\n      ],\n    },\n    {\n      label: 'B Cells',\n      categories: [\n        'Karpas-422-ENCODE', // b-cell cell line\n        'BJAB-Engreitz',\n        'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n        'B_cell-ENCODE',\n        'OCI-LY7-ENCODE',\n        'GM12878-Roadmap',\n        'MM.1S-ENCODE',\n        'CD19-positive_B_cell-Roadmap',\n        'CD8-positive_alpha-beta_T_cell-ENCODE',\n      ],\n    },\n    {\n      label: 'T Cells',\n      categories: [\n        'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n        'Jurkat-Engreitz',\n        'CD3-positive_T_cell-Roadmap',\n        'CD4-positive_helper_T_cell-ENCODE',\n        'CD8-positive_alpha-beta_T_cell-Corces2016',\n        'thymus_fetal-Roadmap',\n        'CD4-positive_helper_T_cell-Corces2016',\n        'T-cell-ENCODE',\n      ],\n    },\n    {\n      label: 'Other haematopoietic cells',\n      categories: [\n        'spleen-ENCODE',\n        'K562-Roadmap',\n        'CD56-positive_natural_killer_cells-Roadmap',\n        'erythroblast-Corces2016',\n        'CD34-positive_mobilized-Roadmap',\n        'megakaryocyte-erythroid_progenitor-Corces2016',\n        'natural_killer_cell-Corces2016',\n        'IMR90-Roadmap',\n      ],\n    },\n    {\n      label: 'Fibroblasts',\n      categories: [\n        'foreskin_fibroblast-Roadmap',\n        'fibroblast_of_dermis-Roadmap',\n        'fibroblast_of_arm-ENCODE',\n        'astrocyte-ENCODE',\n        'fibroblast_of_lung-Roadmap',\n      ],\n    },\n    {\n      label: 'Epithelial',\n      categories: [\n        'small_intestine_fetal-Roadmap',\n        'epithelial_cell_of_prostate-ENCODE',\n        'HCT116-ENCODE',\n        'MCF-7-ENCODE',\n        'adrenal_gland_fetal-ENCODE',\n        'H7',\n        'keratinocyte-Roadmap',\n        'MCF10A-Ji2017',\n        'pancreas-Roadmap',\n        'mammary_epithelial_cell-Roadmap',\n        'stomach-Roadmap',\n        'LoVo',\n        'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n        'PC-9-ENCODE',\n        'H1-hESC-Roadmap',\n        'thyroid_gland-ENCODE',\n        'HT29',\n        'MDA-MB-231',\n        'iPS_DF_19.11_Cell_Line-Roadmap',\n        'large_intestine_fetal-Roadmap',\n        'Panc1-ENCODE',\n        'adrenal_gland-ENCODE',\n        'MCF10A_treated_with_TAM24hr-Ji2017',\n        'trophoblast_cell-ENCODE',\n        'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n        'uterus-ENCODE',\n        'body_of_pancreas-ENCODE',\n        'stomach_fetal-Roadmap',\n        'H9-Roadmap',\n        'transverse_colon-ENCODE',\n        'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n        'breast_epithelium-ENCODE',\n        'induced_pluripotent_stem_cell-ENCODE',\n        'LNCAP',\n        'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n        'ovary-Roadmap',\n        'sigmoid_colon-ENCODE',\n        'skeletal_muscle_myoblast-Roadmap',\n        'bipolar_neuron_from_iPSC-ENCODE',\n        'coronary_artery_smooth_muscle_cell-Miller2016',\n        'SK-N-SH-ENCODE',\n        'muscle_of_trunk_fetal-Roadmap',\n      ],\n    },\n    {\n      label: 'Other',\n      categories: [\n        'adipose_tissue-ENCODE',\n        'HeLa-S3-Roadmap',\n        'hepatocyte-ENCODE',\n        'heart_ventricle-ENCODE',\n        'spinal_cord_fetal-ENCODE',\n        'coronary_artery-ENCODE',\n        'HepG2-Roadmap',\n        'muscle_of_leg_fetal-Roadmap',\n        'gastrocnemius_medialis-ENCODE',\n        'brite_adipose-Loft2014',\n        'placenta-Roadmap',\n        'liver-ENCODE',\n        'A673-ENCODE',\n        'white_adipose-Loft2014',\n        'cardiac_muscle_cell-ENCODE',\n        'osteoblast-ENCODE',\n        'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n        'endothelial_cell_of_umbilical_vein-Roadmap',\n        'NCCIT',\n        'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n        'psoas_muscle-Roadmap',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n      ],\n    },\n  ],\n};\n\nexport const DEFAULT_X_DOMAIN_START = 1761366260;\nexport const DEFAULT_X_DOMAIN_END = 1761603836;\n\nexport const DEFAULT_VIEW_CONFIG = {\n  editable: false,\n  trackSourceServers: [\n    '//higlass.io/api/v1',\n    'https://resgen.io/api/v1/gt/paper-data',\n  ],\n  views: [\n    // {\n    //   uid: 'overview',\n    //   chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n    //   layout: {\n    //     w: 12,\n    //     h: 24,\n    //     x: 0,\n    //     y: 0,\n    //   },\n    //   initialXDomain: [0, 3095693983],\n    //   initialYDomain: [0, 3095693983],\n    //   tracks: {\n    //     top: [\n    //       {\n    //         type: 'combined',\n    //         uid: 'chroms-viewport',\n    //         height: 24,\n    //         contents: [\n    //           {\n    //             type: 'horizontal-chromosome-labels',\n    //             tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n    //             height: 24,\n    //             server: 'https://resgen.io/api/v1',\n    //             uid: 'chroms',\n    //             options: {\n    //               // tickPositions: 'ends',\n    //               color: '#999999',\n    //               stroke: 'white',\n    //               fontSize: 12,\n    //               fontIsLeftAligned: false,\n    //               showMousePosition: true,\n    //               mousePositionColor: '#000000',\n    //             },\n    //           },\n    //           {\n    //             uid: 'viewport-details-chroms',\n    //             type: 'viewport-projection-horizontal',\n    //             fromViewUid: 'context',\n    //             height: 24,\n    //             options: {\n    //               projectionFillColor: '#cc0078',\n    //               projectionStrokeColor: '#cc0078',\n    //               projectionFillOpacity: 0.3,\n    //               projectionStrokeOpacity: 0.3,\n    //               strokeWidth: 1,\n    //             },\n    //           },\n    //         ],\n    //       },\n    //     ],\n    //   },\n    // },\n    {\n      uid: 'context',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'combined',\n            uid: 'chroms-viewport',\n            height: 12,\n            contents: [\n              {\n                type: 'horizontal-chromosome-labels',\n                options: {\n                  // tickPositions: 'ends',\n                  color: '#999999',\n                  stroke: 'white',\n                  fontSize: 10,\n                  fontIsLeftAligned: true,\n                  showMousePosition: false,\n                  mousePositionColor: '#000000',\n                },\n                tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n                height: 12,\n                server: 'https://resgen.io/api/v1',\n                uid: 'chroms',\n              },\n              {\n                uid: 'viewport-details-chroms',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 12,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'genes-tss-viewport',\n            height: 50,\n            contents: [\n              {\n                type: 'horizontal-gene-annotations',\n                uid: 'genes',\n                height: 50,\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                type: 'tss',\n                uid: 'tss',\n                height: 50,\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'RefSeqCurated170308bedCollapsedGeneBoundsTSS500bp',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VMZDLKrtQDmJMSjg7Ds4yA',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                uid: 'viewport-details-genes',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 50,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'point-annotation',\n            uid: 'ibd-snps',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 36,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          // {\n          //   type: 'horizontal-bar',\n          //   uid: 'microglia',\n          //   server: 'https://resgen.io/api/v1',\n          //   tilesetUid: 'V3eSdmpsQqquMuV-gX8lPw',\n          //   height: 36,\n          //   options: {\n          //     barFillColor: 'black',\n          //     align: 'bottom',\n          //     labelColor: '[glyph-color]',\n          //     labelPosition: 'topLeft',\n          //     labelLeftMargin: 0,\n          //     labelRightMargin: 0,\n          //     labelTopMargin: 0,\n          //     labelBottomMargin: 0,\n          //     labelShowResolution: false,\n          //     axisLabelFormatting: 'scientific',\n          //     axisPositionHorizontal: 'right',\n          //     valueScaling: 'linear',\n          //     trackBorderWidth: 0,\n          //     trackBorderColor: 'black',\n          //     labelTextOpacity: 0.4,\n          //     barOpacity: 1,\n          //     name: 'microglia_H3K27ac_pooled',\n          //   },\n          // },\n          {\n            type: 'stacked-bar',\n            server: 'http://localhost:9876/api/v1',\n            tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2chr10',\n            // server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA',\n            height: 96,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: DEFAULT_STRATIFICATION,\n            },\n          },\n          {\n            type: 'stratified-bed',\n            server: 'http://localhost:9876/api/v1',\n            tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2chr10',\n            // server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA',\n            height: 403,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: DEFAULT_STRATIFICATION,\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes-tss-viewport'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 0,\n            outlineWidth: 0,\n          },\n        },\n        {\n          uid: 'tss-overlays',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [],\n            minWidth: 1,\n            fill: 'black',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: 'black',\n            outlineOpacity: 0.1,\n            outlineWidth: 1,\n            outlinePos: ['left'],\n          },\n        },\n      ],\n      metaTracks: [\n        {\n          uid: 'tss-overlays-meta',\n          type: 'annotation-overlay',\n          overlaysTrack: 'tss-overlays',\n          options: {\n            annotationTracks: ['tss'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n      initialYDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n    },\n    //   {\n    //     uid: 'details',\n    //     chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n    //     tracks: {\n    //       top: [\n    //         {\n    //           type: 'horizontal-chromosome-labels',\n    //           options: {\n    //             // tickPositions: 'ends',\n    //             color: '#999999',\n    //             stroke: 'white',\n    //             fontSize: 10,\n    //             fontIsLeftAligned: true,\n    //             showMousePosition: false,\n    //             mousePositionColor: '#000000',\n    //           },\n    //           tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n    //           height: 12,\n    //           server: 'https://resgen.io/api/v1',\n    //           uid: 'chroms',\n    //         },\n    //         {\n    //           type: 'horizontal-gene-annotations',\n    //           uid: 'genes',\n    //           height: 48,\n    //           server: 'https://resgen.io/api/v1',\n    //           tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n    //           options: {\n    //             fontSize: 9,\n    //             plusStrandColor: 'black',\n    //             minusStrandColor: 'black',\n    //             geneAnnotationHeight: 12,\n    //             geneLabelPosition: 'outside',\n    //             geneStrandSpacing: 2,\n    //           },\n    //         },\n    //         {\n    //           type: 'point-annotation',\n    //           uid: 'ibd-snps',\n    //           // server: 'http://localhost:9876/api/v1',\n    //           // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n    //           server: 'https://resgen.io/api/v1',\n    //           tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n    //           height: 132,\n    //           options: {\n    //             axisPositionHorizontal: 'right',\n    //             markColor: 'black',\n    //             markColorFocus: '#cc0078',\n    //             markSize: 2,\n    //             markOpacity: 0.33,\n    //             markOpacityFocus: 0.66,\n    //             // axisPositionHorizontal: 'right',\n    //             valueColumn: 7,\n    //             focusRegion: [\n    //               1680373143 + 81046453 - 25,\n    //               1680373143 + 81046453 + 25,\n    //             ],\n    //             name: 'IBD SNPs',\n    //             toolTip: {\n    //               name: {\n    //                 field: 3,\n    //               },\n    //               value: {\n    //                 field: 6,\n    //                 numDecimals: 2,\n    //               },\n    //               other: [\n    //                 {\n    //                   label: 'Post. Prob.',\n    //                   field: 7,\n    //                   numDecimals: 2,\n    //                 },\n    //               ],\n    //             },\n    //           },\n    //         },\n    //         {\n    //           type: 'multivec',\n    //           uid: 'dna-accessibility',\n    //           height: 403,\n    //           // server: 'http://localhost:9876/api/v1',\n    //           // tilesetUid: 'test',\n    //           server: 'https://resgen.io/api/v1',\n    //           tilesetUid: 'Uz1_tEABQf-uzktblvBKSQ',\n    //           options: {\n    //             name: 'DNA Accessibility',\n    //             labelPosition: 'outerBottom',\n    //             labelShowResolution: false,\n    //             labelShowAssembly: false,\n    //             valueScaling: 'exponential',\n    //             colorRange: ['#ffffff', '#000000'],\n    //             selectRows: [\n    //               120,\n    //               36,\n    //               54,\n    //               20,\n    //               80,\n    //               35,\n    //               101,\n    //               49,\n    //               44,\n    //               23,\n    //               30,\n    //               66,\n    //               5,\n    //               26,\n    //               15,\n    //               105,\n    //               57,\n    //               56,\n    //               74,\n    //               84,\n    //               79,\n    //               93,\n    //               106,\n    //               107,\n    //               34,\n    //               28,\n    //               25,\n    //               55,\n    //               121,\n    //               94,\n    //               58,\n    //               69,\n    //               67,\n    //               63,\n    //               126,\n    //               71,\n    //               72,\n    //               47,\n    //               11,\n    //               46,\n    //               39,\n    //               113,\n    //               29,\n    //               60,\n    //               45,\n    //               76,\n    //               21,\n    //               103,\n    //               129,\n    //               13,\n    //               128,\n    //               90,\n    //               104,\n    //               32,\n    //               109,\n    //               27,\n    //               9,\n    //               130,\n    //               95,\n    //               86,\n    //               53,\n    //               73,\n    //               50,\n    //               48,\n    //               78,\n    //               14,\n    //               92,\n    //               124,\n    //               31,\n    //               114,\n    //               64,\n    //               88,\n    //               12,\n    //               10,\n    //               38,\n    //               68,\n    //               3,\n    //               111,\n    //               70,\n    //               22,\n    //               61,\n    //               98,\n    //               6,\n    //               123,\n    //               118,\n    //               43,\n    //               37,\n    //               65,\n    //               81,\n    //               62,\n    //               33,\n    //               1,\n    //               24,\n    //               122,\n    //               83,\n    //               75,\n    //               112,\n    //               40,\n    //               97,\n    //               16,\n    //               117,\n    //               87,\n    //               19,\n    //               125,\n    //               7,\n    //               102,\n    //               116,\n    //               77,\n    //               8,\n    //               17,\n    //               82,\n    //               115,\n    //               89,\n    //               119,\n    //               18,\n    //               4,\n    //               108,\n    //               59,\n    //               127,\n    //               91,\n    //               0,\n    //               100,\n    //               85,\n    //               110,\n    //               99,\n    //               2,\n    //               96,\n    //               51,\n    //               41,\n    //               52,\n    //               42,\n    //             ],\n    //           },\n    //         },\n    //       ],\n    //     },\n    //     layout: {\n    //       w: 4,\n    //       h: 11,\n    //       x: 8,\n    //       y: 1,\n    //     },\n    //     initialXDomain: [\n    //       1680373143 + 81046453 - 500,\n    //       1680373143 + 81046454 + 500,\n    //     ],\n    //     initialYDomain: [\n    //       1680373143 + 81046453 - 500,\n    //       1680373143 + 81046454 + 500,\n    //     ],\n    //   },\n  ],\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { HiGlassComponent } from 'higlass';\nimport { debounce, deepClone, isString, pipe } from '@flekschas/utils';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SearchField from './SearchField';\n\nimport useQueryString from './use-query-string';\nimport { toAbsPosition } from './utils';\nimport {\n  DEFAULT_X_DOMAIN_START,\n  DEFAULT_X_DOMAIN_END,\n  DEFAULT_VIEW_CONFIG,\n  GENE_SEARCH_URL,\n  VARIANT_SEARCH_URL,\n} from './constants';\n\nimport 'higlass/dist/hglib.css';\nimport './Viewer.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    boxShadow: `0 1px 0 0 ${theme.palette.grey['300']}`,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  textInput: {\n    minWidth: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  higlass: {\n    flexGrow: 1,\n  },\n}));\n\nconst DEFAULT_HIGLASS_OPTIONS = {\n  sizeMode: 'bounded',\n  // pixelPreciseMarginPadding: true,\n  // containerPaddingX: 0,\n  // containerPaddingY: 0,\n  // viewMarginTop: 0,\n  // viewMarginBottom: 6,\n  // viewMarginLeft: 0,\n  // viewMarginRight: 0,\n  // viewPaddingTop: 3,\n  // viewPaddingBottom: 3,\n  // viewPaddingLeft: 0,\n  // viewPaddingRight: 0,\n};\n\nconst chrPosUrlEncoder = (chrPos) =>\n  chrPos ? chrPos.replace(':', '.') : chrPos;\n\nconst chrPosUrlDecoder = (chrPos) =>\n  chrPos ? chrPos.replace('.', ':') : chrPos;\n\nconst updateViewConfigXDomain = (newXDomainStart, newXDomainEnd) => (\n  viewConfig\n) => {\n  const xDomain = [...viewConfig.views[0].initialXDomain];\n\n  if (!Number.isNaN(+newXDomainStart)) {\n    xDomain[0] = newXDomainStart;\n  }\n  if (!Number.isNaN(+newXDomainEnd)) {\n    xDomain[1] = newXDomainEnd;\n  }\n\n  viewConfig.views[0].initialXDomain = xDomain;\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusGene = (gene, start, end) => (viewConfig) => {\n  const n = viewConfig.views[0].tracks.top.length;\n\n  if (gene) {\n    viewConfig.views[0].tracks.top[n - 1].options.focusGene = gene;\n    viewConfig.views[0].overlays[1].options.extent = [[start, end]];\n  } else {\n    delete viewConfig.views[0].tracks.top[n - 1].options.focusGene;\n    delete viewConfig.views[0].overlays[1].options.extent;\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusVariant = (position) => (viewConfig) => {\n  // const n = viewConfig.views.length;\n\n  if (Number.isNaN(+position) || position === null) {\n    delete viewConfig.views[0].tracks.top[2].options.focusRegion;\n    delete viewConfig.views[0].tracks.top[4].options.focusRegion;\n    // viewConfig.views[0].tracks.top[n - 1].options.focusRegion = focusRegion;\n    viewConfig.views[0].overlays[0].options.extent = [];\n  } else {\n    const focusRegion = [position - 0.5, position + 0.5];\n    viewConfig.views[0].tracks.top[2].options.focusRegion = focusRegion;\n    viewConfig.views[0].tracks.top[4].options.focusRegion = focusRegion;\n    // viewConfig.views[0].tracks.top[n - 1].options.focusRegion = focusRegion;\n    viewConfig.views[0].overlays[0].options.extent = [focusRegion];\n\n    // const focusDomain = Number.isNaN(+variantAbsPosition)\n    //   ? viewConfig.views[1].initialXDomain\n    //   : [variantAbsPosition - 500, variantAbsPosition + 500];\n\n    // viewConfig.views[1].initialXDomain = focusDomain;\n    // viewConfig.views[1].initialYDomain = focusDomain;\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigVariantYScale = (yScale) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[2].options.valueColumn =\n    yScale === 'pValue' ? 7 : 8;\n  // viewConfig.views[1].tracks.top[2].options.valueColumn =\n  //   yScale === 'pValue' ? 7 : 8;\n\n  return viewConfig;\n};\n\nconst updateViewConfigMatrixColoring = (coloring) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.opacityEncoding = coloring;\n  return viewConfig;\n};\n\nconst Viewer = (props) => {\n  const [focusGene, setFocusGene] = useQueryString('gene', '');\n  const [focusVariant, setFocusVariant] = useQueryString(\n    'variant',\n    'rs1250566'\n  );\n  const [matrixColoring, setMatrixColoring] = useQueryString(\n    'matrix-coloring',\n    'solid'\n  );\n  const [variantYScale, setVariantYScale] = useQueryString(\n    'varient-scale',\n    'pValue'\n  );\n  const [xDomainStart, setXDomainStart] = useQueryString(\n    'start',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_START).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [xDomainEnd, setXDomainEnd] = useQueryString(\n    'end',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_END).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n\n  const [focusGeneOption, setFocusGeneOption] = useState(null);\n  const [focusVariantOption, setFocusVariantOption] = useState(null);\n  const [options, setOptions] = useState(DEFAULT_HIGLASS_OPTIONS);\n  const higlassApi = useRef(null);\n\n  // Derived State\n  const viewConfig = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusGene(\n          focusGeneOption ? focusGeneOption.geneName : null,\n          focusGeneOption\n            ? toAbsPosition(\n                `${focusGeneOption.chr}:${focusGeneOption.txStart}`,\n                props.chromInfo\n              )\n            : null,\n          focusGeneOption\n            ? toAbsPosition(\n                `${focusGeneOption.chr}:${focusGeneOption.txEnd}`,\n                props.chromInfo\n              )\n            : null\n        ),\n        updateViewConfigFocusVariant(\n          focusVariantOption\n            ? toAbsPosition(\n                `${focusVariantOption.chr}:${focusVariantOption.txStart}`,\n                props.chromInfo\n              )\n            : null,\n          focusVariantOption\n        ),\n        updateViewConfigMatrixColoring(matrixColoring),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigXDomain(\n          toAbsPosition(xDomainStart, props.chromInfo),\n          toAbsPosition(xDomainEnd, props.chromInfo)\n        )\n      )(deepClone(DEFAULT_VIEW_CONFIG)),\n    [\n      // `xDomainStart` and `xDomainEnd` are ommitted on purpose\n      focusGeneOption,\n      focusVariantOption,\n      matrixColoring,\n      variantYScale,\n      props.chromInfo,\n    ]\n  );\n\n  const numericalXDomainStart = useMemo(\n    () =>\n      isString(xDomainStart) && xDomainStart.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainStart.split(':')[0],\n            +xDomainStart.split(':')[1],\n          ])\n        : +xDomainStart,\n    [xDomainStart, props.chromInfo]\n  );\n\n  const numericalXDomainEnd = useMemo(\n    () =>\n      isString(xDomainEnd) && xDomainEnd.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainEnd.split(':')[0],\n            +xDomainEnd.split(':')[1],\n          ])\n        : +xDomainEnd,\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n  };\n\n  const focusGeneChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusGene(newValue.geneName);\n      setFocusGeneOption(newValue);\n    } else {\n      clearFocusGene();\n    }\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    setFocusVariantOption(null);\n  };\n\n  const focusVariantChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusVariant(newValue.geneName);\n      setFocusVariantOption(newValue);\n    } else {\n      clearFocusVariant();\n    }\n  };\n\n  const variantYScaleChangeHandler = (event) => {\n    setVariantYScale(event.target.value);\n  };\n\n  const matrixColoringChangeHandler = (event) => {\n    setMatrixColoring(event.target.value);\n  };\n\n  const xDomainStartChangeHandler = (event) => {\n    setXDomainStart(event.target.value);\n  };\n\n  const xDomainEndChangeHandler = (event) => {\n    setXDomainEnd(event.target.value);\n  };\n\n  // HiGlass Functions\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      setFocusGeneOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n      });\n    } else if (event.type === 'snp') {\n      setFocusVariant(`${event.payload.fields[0]}:${event.payload.fields[1]}`);\n      setFocusVariantOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        score: event.payload.importance,\n      });\n    }\n  };\n\n  const higlassLocationChangeHandler = (event) => {\n    const [newXDomainStart, newXDomainEnd] = event.xDomain.map((absPos) =>\n      props.chromInfo.absToChr(absPos).slice(0, 2).join(':')\n    );\n    setXDomainStart(newXDomainStart);\n    setXDomainEnd(newXDomainEnd);\n  };\n  const higlassLocationChangeHandlerDb = debounce(\n    higlassLocationChangeHandler,\n    250\n  );\n\n  const higlassZoomToXDomain = (event) => {\n    if (!higlassApi.current) return;\n\n    const newViewConfig = deepClone(viewConfig);\n\n    const xDomain = [...newViewConfig.views[0].initialXDomain];\n\n    if (!Number.isNaN(+numericalXDomainStart)) {\n      xDomain[0] = numericalXDomainStart;\n    }\n    if (!Number.isNaN(+numericalXDomainEnd)) {\n      xDomain[1] = numericalXDomainEnd;\n    }\n\n    higlassApi.current.zoomTo(\n      'context',\n      xDomain[0],\n      xDomain[1],\n      xDomain[0],\n      xDomain[1],\n      2000\n    );\n  };\n\n  // Initializations\n  useEffect(() => {\n    (async () => {\n      if (focusGene && !focusGeneOption) {\n        const r = await fetch(`${GENE_SEARCH_URL}&ac=${focusGene}`);\n        const results = await r.json();\n        focusGeneChangeHandler(results[0]);\n      }\n      if (focusVariant && !focusVariantOption) {\n        const r = await fetch(`${VARIANT_SEARCH_URL}&ac=${focusVariant}`);\n        const results = await r.json();\n        focusVariantChangeHandler(results[0]);\n      }\n    })();\n  }, []);\n\n  const higlassInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassApi.current = higlassInstance.api;\n      higlassInstance.api.on('click', higlassClickHandler);\n      higlassInstance.api.on(\n        'location',\n        higlassLocationChangeHandlerDb,\n        'context'\n      );\n    }\n  }, []);\n\n  // Run on every render\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            Enhancer-Promoter Vis\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <Box m={1}>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <InputLabel htmlFor=\"x-domain-start\">Region Start</InputLabel>\n              <OutlinedInput\n                id=\"x-domain-start\"\n                label=\"Region Start\"\n                onChange={xDomainStartChangeHandler}\n                value={xDomainStart}\n              />\n            </FormControl>\n          </Box>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <InputLabel htmlFor=\"x-domain-end\">Region End</InputLabel>\n              <OutlinedInput\n                id=\"x-domain-end\"\n                label=\"Region End\"\n                onChange={xDomainEndChangeHandler}\n                value={xDomainEnd}\n              />\n            </FormControl>\n          </Box>\n          <Box m={0}>\n            <Button\n              variant=\"contained\"\n              margin=\"dense\"\n              onClick={higlassZoomToXDomain}\n              fullWidth\n              disableElevation\n            >\n              Go\n            </Button>\n          </Box>\n        </Box>\n        <Divider />\n        <Box m={1}>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <SearchField\n                label=\"Focus Gene\"\n                searchUrl={GENE_SEARCH_URL}\n                onChange={focusGeneChangeHandler}\n                value={focusGeneOption}\n                fullWidth\n              />\n            </FormControl>\n          </Box>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <SearchField\n                label=\"Focus Variant\"\n                searchUrl={VARIANT_SEARCH_URL}\n                onChange={focusVariantChangeHandler}\n                value={focusVariantOption}\n                fullWidth\n              />\n            </FormControl>\n          </Box>\n        </Box>\n        <Box m={1}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Variant y-scale</FormLabel>\n            <RadioGroup\n              aria-label=\"variantYScale\"\n              name=\"variantYScale\"\n              value={variantYScale}\n              onChange={variantYScaleChangeHandler}\n            >\n              <FormControlLabel\n                label=\"p-value\"\n                control={<Radio size=\"small\" />}\n                value=\"pValue\"\n              />\n              <FormControlLabel\n                label=\"Posterior probability\"\n                control={<Radio size=\"small\" />}\n                value=\"posteriorProbability\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n        <Box m={1}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Matrix coloring</FormLabel>\n            <RadioGroup\n              aria-label=\"matrixColoring\"\n              name=\"matrixColoring\"\n              value={matrixColoring}\n              onChange={matrixColoringChangeHandler}\n            >\n              <FormControlLabel\n                label=\"Solid\"\n                control={<Radio size=\"small\" />}\n                value=\"solid\"\n              />\n              <FormControlLabel\n                label=\"Number of predictions\"\n                control={<Radio size=\"small\" />}\n                value=\"frequency\"\n              />\n              <FormControlLabel\n                label=\"Highest prediction score\"\n                control={<Radio size=\"small\" />}\n                value=\"highestImportance\"\n              />\n              <FormControlLabel\n                label=\"Prediction score of the closest TSS interaction\"\n                control={<Radio size=\"small\" />}\n                value=\"closestImportance\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div className={classes.higlass}>\n          <HiGlassComponent\n            ref={higlassInitHandler}\n            viewConfig={viewConfig}\n            options={options}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Viewer;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport Viewer from './Viewer';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n    secondary: {\n      main: '#000',\n    },\n  },\n});\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const AppViewer = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(Viewer);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <AppViewer chromInfo={chromInfo} />\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createAnnotationOverlayMetaTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  // Services\n  const { pubSub } = HGC.services;\n\n  class AnnotationOverlayMetaTrack {\n    constructor(context, options) {\n      const { definition, getTrackObject, onNewTilesLoaded: animate } = context;\n\n      this.animate = animate;\n      this.options = options;\n\n      this.overlaysTrack = getTrackObject(definition.overlaysTrack);\n\n      if (!this.overlaysTrack) {\n        console.warn(\n          `Overlays track (uid: ${definition.overlaysTrack}) not found`\n        );\n        return;\n      }\n\n      this.annotationTrackIds = new Set();\n      this.annotationTracks = definition.options.annotationTracks\n        .map((uid) => {\n          const track = getTrackObject(uid);\n\n          if (!track) {\n            console.warn(`Child track (uid: ${uid}) not found`);\n          } else {\n            this.annotationTrackIds.add(track.uuid);\n          }\n\n          return track;\n        })\n        .filter((track) => track);\n\n      this.annotationDrawnHandlerBound = this.annotationDrawnHandler.bind(this);\n\n      this.drawnAnnotations = new Map();\n      this.tracksDrawingTiles = new Set();\n\n      this.pubSubs = [];\n\n      // Augment annotation tracks\n      this.annotationTracks.forEach((track) => {\n        track.subscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n\n      this.pubSubs.push(\n        pubSub.subscribe(\n          'TiledPixiTrack.tilesDrawnEnd',\n          this.tilesDrawnEndHandler.bind(this)\n        )\n      );\n    }\n\n    /**\n     * Handles annotation drawn events\n     *\n     * @param  {String}  event.uid  UID of the view that triggered the event.\n     * @param  {Array}  event.viewPos  View position (i.e., [x, y, width, height])\n     *   of the drawn annotation on the screen.\n     * @param  {Array}  event.dataPos  Data position of the drawn annotation. For\n     *   example base pairs (Hi-C), or pixels (gigapixel images), or lng-lat\n     *   (geo json).\n     */\n    annotationDrawnHandler({ xStartAbs, xEndAbs, data }) {\n      this.drawnAnnotations.set(data.uid, [xStartAbs, xEndAbs]);\n    }\n\n    /**\n     * Remove this track.\n     */\n    remove() {\n      this.pubSubs.forEach(pubSub.unsubscribe);\n      this.pubSubs = undefined;\n      this.annotationTracks.forEach((track) => {\n        track.unsubscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n    }\n\n    /**\n     * Callback function passed into the annotation tracks to trigger tree\n     * building of the spatial RTree.\n     *\n     * @description\n     * Simple counter that call `this.buildTree()` once the number of annotation\n     * tracks is reached.\n     */\n    tilesDrawnEndHandler({ uuid }) {\n      if (!this.annotationTrackIds.has(uuid)) return;\n\n      this.tracksDrawingTiles.add(uuid);\n\n      if (!(this.tracksDrawingTiles.size % this.annotationTracks.length)) {\n        this.updateOverlays();\n      }\n    }\n\n    updateOverlays() {\n      this.overlaysTrack.options.extent = Array.from(\n        this.drawnAnnotations.values()\n      );\n      this.overlaysTrack.draw();\n      this.tracksDrawingTiles.clear();\n    }\n  }\n\n  return new AnnotationOverlayMetaTrack(...args);\n}\n\ncreateAnnotationOverlayMetaTrack.config = {\n  type: 'annotation-overlay',\n  availableOptions: ['annotationTracks'],\n  defaultOptions: {\n    annotationTracks: [],\n  },\n};\n\nexport default createAnnotationOverlayMetaTrack;\n","import createIntervalTree from 'interval-tree-1d';\nimport { contains, dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [\n  pt.opacity,\n  pt.opacity,\n  pt.opacity,\n  pt.opacity,\n  // pt.opacity,\n  // pt.opacity,\n];\n\nconst pointToFocused = (pt) => [\n  pt.focused,\n  pt.focused,\n  pt.focused,\n  pt.focused,\n  // pt.focused,\n  // pt.focused,\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getRegionId = (item) =>\n  `${item.fields[0]}:${item.fields[1]}-${item.fields[2]}`;\n\nconst createStratifiedBedTrack = function createStratifiedBedTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class StratifiedBedTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.regionId = getRegionId(item);\n        item.isLeftToRight = item.start < item.end;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      this.opacityEncoding = this.options.opacityEncoding || 'solid';\n\n      switch (this.opacityEncoding) {\n        case 'frequency':\n          this.opacityScale = () => 0.1;\n          break;\n\n        case 'highestImportance':\n        case 'closestImportance': {\n          const importanceDomain = this.options.importanceDomain || [1000, 1];\n          const opacityLinearScale = scaleLinear()\n            .domain(importanceDomain)\n            .range([1, 10]);\n          this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n          break;\n        }\n\n        case 'solid':\n        default:\n          this.opacityScale = () => 1;\n          break;\n      }\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.getRegion = this.options.focusRegion\n        ? (item) => [item.xStart, item.xEnd]\n        : undefined;\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        // focused:\n        //   item.xStart <= this.focusRegion[1] &&\n        //   item.xEnd >= this.focusRegion[0],\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n        __item: item,\n      };\n    }\n\n    itemToIndicatorReducer(addFn) {\n      if (\n        this.getGene &&\n        this.focusGene &&\n        this.getRegion &&\n        this.focusRegion\n      ) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          const region = this.getRegion(item);\n          if (gene === this.focusGene && contains(region, this.focusRegion)) {\n            addFn(filteredItems, item);\n          }\n          return filteredItems;\n        };\n      }\n\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) {\n            addFn(filteredItems, item);\n          }\n          return filteredItems;\n        };\n      }\n\n      if (this.getRegion && this.focusRegion) {\n        return (filteredItems, item) => {\n          const region = this.getRegion(item);\n          if (contains(region, this.focusRegion)) {\n            addFn(filteredItems, item);\n          }\n          return filteredItems;\n        };\n      }\n\n      return (filteredItems, item) => {\n        addFn(filteredItems, item);\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      let reducerVar = [];\n      let addFn = (accumulator, item) =>\n        accumulator.push(this.itemToIndicatorCategory(item));\n\n      if (this.opacityEncoding === 'highestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (accumulator[item.regionId]) {\n            const i1 = this.getImportance(accumulator[item.regionId].__item);\n            const i2 = this.getImportance(item);\n            if (i2 > i1) {\n              accumulator[item.regionId] = this.itemToIndicatorCategory(item);\n            }\n          } else {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(item);\n          }\n        };\n      } else if (this.opacityEncoding === 'closestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (\n            !accumulator[item.regionId] ||\n            item.width < accumulator[item.regionId].__item.width\n          ) {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(item);\n          }\n        };\n      }\n\n      const dataToPoint = this.itemToIndicatorReducer(addFn);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        Object.values(tile.tileData.reduce(dataToPoint, reducerVar))\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      this.renderIndicatorPoints();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(trackX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(trackY))\n      );\n\n      const xAbsLo = this._xScale.invert(trackX - 1);\n      const xAbsHi = this._xScale.invert(trackX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      if (foundItem) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(foundItem).toFixed(2);\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new StratifiedBedTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStratifiedBedTrack.config = {\n  type: 'stratified-bed',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStratifiedBedTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo || !this.options.toolTip) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst DEFAULT_COLOR_MAP = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n      tile.histogram2dNumPred = new Uint8Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      const categoryBinHash = new Map();\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const category = this.getCategory(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          const binHash = categoryBinHash.get(category) || {};\n\n          // Make sure we count multiple enhancer predictions of the same biosample and bin only once (i.e., summing up)\n          if (!binHash[bin]) {\n            binHash[bin] = binHash[bin] || score > 0;\n            tile.histogram2dNumPred[histIdx] += binHash[bin];\n            categoryBinHash.set(category, binHash);\n          }\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const rowCumSum = [];\n      const rowNumPred = [];\n      let totalPred = 0;\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        const numPred =\n          fetchedTile.histogram2dNumPred[i * this.numBins + binXPos];\n        rowNumPred.push(numPred);\n        totalPred += numPred;\n        rowCumSum.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = rowCumSum.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value =\n          fetchedTile.histogram2dNumPred[group * this.numBins + binXPos];\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value} of ${totalPred} samples</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import createPubSub from 'pub-sub-es';\n\nfunction createTssTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  class TssTrack extends HGC.tracks.BedLikeTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      const { publish, subscribe, unsubscribe } = createPubSub();\n      this.publish = publish;\n      this.subscribe = subscribe;\n      this.unsubscribe = unsubscribe;\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = 1;\n      const radius = 2;\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = {\n              xStartScreen: xStartPos,\n              xEndScreen: xEndPos,\n              xStartAbs: txStart,\n              xEndAbs: txEnd,\n              data: td,\n            };\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        circleDraws.forEach((circleDraw) => {\n          this.publish('annotationDrawn', circleDraw);\n        });\n      }\n    }\n\n    rerender() {\n      // Monkey patch because TiledPixiTrack doesn't always fire correctly\n      this.draw();\n      this.pubSub.publish('TiledPixiTrack.tilesDrawnEnd', { uuid: this.uuid });\n    }\n\n    getMouseOverHtml() {\n      return '';\n    }\n  }\n\n  return new TssTrack(...args);\n}\n\ncreateTssTrack.config = {\n  type: 'tss',\n  datatype: ['bedlike'],\n};\n\nexport default createTssTrack;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAnnotationOverlayMetaTrack from './annotation-overlay-meta-track';\nimport createStratifiedBedTrack from './stratified-bed-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\nimport createTssTrack from './tss-track';\n\nimport './index.css';\n\nregister({\n  name: 'ScalableArcs1dTrack',\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  name: 'StratifiedBedTrack',\n  track: createStratifiedBedTrack,\n  config: createStratifiedBedTrack.config,\n});\n\nregister({\n  name: 'SnpTrack',\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  name: 'StackedBarTrack',\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nregister({\n  name: 'TssTrack',\n  track: createTssTrack,\n  config: createTssTrack.config,\n});\n\nregister({\n  name: 'AnnotationsToInsetsMetaTrack',\n  track: createAnnotationOverlayMetaTrack,\n  isMetaTrack: true,\n  config: createAnnotationOverlayMetaTrack.config,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}