{"version":3,"sources":["AppInitializing.js","AppError.js","Logo.js","use-debounce.js","SearchField.js","utils.js","use-query-string.js","use-previous.js","constants.js","Viewer.js","with-either.js","App.js","serviceWorker.js","annotation-overlay-meta-track.js","ridge-plot-track.js","stratified-bed-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","tss-track.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","backgroundColor","AppInitializing","classes","className","Backdrop","open","CircularProgress","logo","height","padding","alignItems","fontSize","lineHeight","fontWeight","logoAbc","letterSpacing","paddingRight","logoEnhancer","Logo","props","Grid","container","style","styles","item","direction","defaultProps","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","inputRoot","background","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","boxShadow","transition","focused","input","textFieldRoot","transform","fetchJsonFromUrl","url","query","a","fetch","response","json","results","map","result","type","GeneIcon","SvgIcon","viewBox","d","GeneOption","key","option","geneName","VariantOption","Option","SearchField","setOpen","options","setOptions","inputValue","searchQuery","setSearchQuery","debouncedSearchQuery","loading","length","autocompleteClasses","active","Array","isArray","searchUrl","Promise","all","then","resultList","flat","multiple","autocompleteOptions","Autocomplete","larger","onChange","event","newValue","onInputChange","newInputValue","fullWidth","width","onOpen","onClose","getOptionSelected","_value","getOptionLabel","renderInput","params","TextField","id","label","variant","size","InputProps","endAdornment","Fragment","renderOption","renderTags","v","getTagProps","index","Chip","icon","identity","contains","b","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","rgba","Float32Array","forEach","i","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","y","dashSize","diff","sign","abs","stepSize","numSteps","moveTo","lineTo","getQueryStringValue","decoder","queryString","parse","window","location","search","setQueryStringValue","encoder","values","newQsValue","stringify","strict","origin","pathname","history","pushState","path","toAbsPosition","position","chromInfo","absPosition","indexOf","split","chrom","pos","chrPositions","toFixed","number","decimals","forced","string","substring","useQueryString","initialValue","undefined","setValue","onSetValue","useCallback","usePrevious","ref","useRef","current","EPS","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","GENE_SEARCH_URL","VARIANT_SEARCH_URL","DEFAULT_STRATIFICATION","categoryField","axisShowGroupSeparator","axisNoGroupColor","groups","categories","DEFAULT_VIEW_CONFIG_ENHANCER","editable","trackSourceServers","views","uid","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","visible","chromInfoPath","tracks","top","contents","stroke","fontIsLeftAligned","showMousePosition","mousePositionColor","tilesetUid","server","fromViewUid","projectionFillColor","projectionStrokeColor","projectionFillOpacity","projectionStrokeOpacity","strokeWidth","plusStrandColor","minusStrandColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","showGlobalMousePosition","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","focusRegion","name","toolTip","field","numDecimals","other","binSize","axisAlign","labelPosition","arcStyle","indicatorStyle","labelColor","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","legendAlign","markColorHighlight","markColorDehighlight","markMinWidth","markHeight","rowHeight","overlays","includes","extent","minWidth","fill","fillOpacity","outline","outlineOpacity","outlineWidth","outlinePos","metaTracks","overlaysTrack","annotationTracks","layout","w","h","x","initialXDomain","initialYDomain","DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY","zoomFixed","labelShowResolution","labelShowAssembly","markArea","markResolution","valueScaling","colorRange","rowPadding","rowNormalization","rowSelections","rowIdToCategory","fn","args","rowCategories","reduce","row","group","category","axisLabelColor","axisLabelBackground","sample","showRowLabels","rowLabelSize","black","gray","palette","grey","pink","root","display","right","bottom","left","h1","margin","modal","justifyContent","paper","borderRadius","shadows","maxWidth","spacing","startExploring","appBar","marginLeft","common","white","flexShrink","drawerGrid","drawerPaper","settings","flexGrow","settingsContent","overflow","textInput","toolbar","mixins","content","flexDirection","grow","higlass","higlassEnhancer","higlassDnaAccessibility","higlassTitleBar","higlassTitleBarTitle","higlassTitleBarHelp","higlassTitleBarHelpPopeover","paddingTop","higlassEnhancerInfoBar","minHeight","higlassDnaAccessibilityInfoBar","higlassSeparator","toolbarExtra","paddingLeft","chrPosUrlEncoder","chrPos","replace","chrPosUrlDecoder","updateViewConfigXDomain","newXDomainStart","newXDomainEnd","force","viewConfig","xDomain","focusGeneRegion","getFocusGeneRegion","focusVariantRegion","getFocusVariantRegion","Number","isNaN","min","updateViewConfigFocusVariant","trackIdxs","trackIdx","updateViewConfigVariantYScale","yScale","extractSvgCore","svg","fifthLn","nthIndexOf","lastLn","lastIndexOf","Viewer","infoOpen","setInfoOpen","focusGene","setFocusGene","focusVariant","setFocusVariant","hideUnfocused","setHideUnfocused","matrixColoring","setMatrixColoring","variantYScale","setVariantYScale","dnaAccessLabels","setDnaAccessLabels","absToChr","slice","join","xDomainStart","setXDomainStart","xDomainEnd","setXDomainEnd","focusGeneOption","setFocusGeneOption","focusVariantOption","setFocusVariantOption","prevFocusGeneOption","prevFocusVariantOption","higlassEnhancerApi","higlassDnaAccessApi","higlassEnhancerHelpAnchorEl","setHiglassEnhancerHelpAnchorEl","higlassDnaAccessHelpAnchorEl","setHiglassDnaAccessHelpAnchorEl","focusGeneVariantOptions","useMemo","_focusGeneVariant","push","focusGeneStartPosition","chr","txStart","focusGeneEndPosition","txEnd","focusVariantPosition","xDomainStartAbs","xDomainEndAbs","xDomainStartAbsDb","xDomainEndAbsDb","viewConfigEnhancer","pipe","gene","start","end","n","focusStyle","updateViewConfigFocusStyle","coloring","opacityEncoding","deepClone","viewConfigDnaAccessibility","labels","midPos","getDnaAccessibilityXDomain","dnaAccessibilityRegionSize","round","numericalXDomainStart","isString","chrToAbs","numericalXDomainEnd","clearFocusGene","clearFocusVariant","focusVariantChangeHandler","higlassClickHandler","payload","fields","score","importance","higlassLocationChangeHandlerDb","debounce","absPos","r","higlassEnhancerInitHandler","higlassInstance","api","on","higlassDnaAccessibilityInitHandler","higlassEnhancerHelpOpen","Boolean","higlassEnhancerHelpId","higlassDnaAccessHelpOpen","higlassDnaAccessHelpId","infoCloseHandler","CssBaseline","AppBar","Toolbar","FormControl","newValues","newFocusElements","console","warn","Drawer","anchor","ButtonBase","onClick","Divider","Box","m","InputLabel","htmlFor","OutlinedInput","target","Button","newViewConfig","zoomTo","disableElevation","FormControlLabel","control","Switch","checked","toString","component","FormLabel","RadioGroup","aria-label","Radio","mergedSvg","enhancerSvg","dnaAccessSvg","enhancerCoreSvg","enhancerWidth","enhancerHeight","dnaAccessCoreSvg","dnaAccessWidth","dnaAccessHeight","actualEnhancerHeight","track","actualDnaAccessHeight","mergeSvgs","exportAsSvg","filename","stringOrBlob","blob","Blob","navigator","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","Typography","align","noWrap","IconButton","aria-describedby","currentTarget","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","sizeMode","globalMousePosition","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","title","Modal","aria-labelledby","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","rel","primary","withEither","ifEitherFn","EitherComponent","Component","createMuiTheme","main","secondary","App","setChromInfo","ChromosomeInfo","_chromInfo","totalLength","catch","AppViewer","AppError","ThemeProvider","hostname","match","createAnnotationOverlayMetaTrack","HGC","Error","pubSub","services","AnnotationOverlayMetaTrack","context","definition","getTrackObject","animate","onNewTilesLoaded","this","annotationTrackIds","Set","add","uuid","filter","annotationDrawnHandlerBound","annotationDrawnHandler","bind","tilesDrawnEndHandlerBound","tilesDrawnEndHandler","drawnAnnotations","Map","tracksDrawingTiles","pubSubs","subscribe","xStartAbs","xEndAbs","data","set","unsubscribe","has","updateOverlays","from","draw","clear","config","availableOptions","defaultOptions","FLOAT_BYTES","BYTES_PER_ELEMENT","VS","FS","COLORMAP_GRAYS","getMax","fetchedTiles","Object","maxValue","tile","tileData","maxNonZero","Infinity","getNumRows","coarseShape","getRowMaxs","maxVector","maxValueByRow","scaleGraphics","xScale","drawnAtScale","tileK","domain","posOffset","scale","getNumPointsPerRow","numRows","positions","createRidgePlotTrack","libraries","format","d3Format","scaleLinear","d3Scale","tileProxy","RidgePlotTrack","updateOptions","coarsifyTileValues","tilesetInfo","bins_per_dimension","zoomLevel","tilePos","binsPerTileIn","binsPerTile","resolutions","chosenResolution","sort","tileWidth","tileHeight","tileX","tileY","xTilePos","yTilePos","minX","min_pos","minY","reverseYAxis","max_pos","max_width","selectRowsAggregationMode","selectRowsAggregationFn","maxNan","minNan","sumNan","meanNan","markAreaColor","utils","colorToHex","markColorRgbNorm","colorToRgba","markColorTex","markColorTexRes","markNumColors","oldMarkResolution","TILE_SIZE","oldRowHeight","oldRowPadding","oldRowNormalization","oldRowSelections","updateTiles","updateScales","oldShowRowLabels","updateRowLabels","drawLabel","rowLabelAlign","pAxis","children","removeChildAt","rowLabels","rowLabel","destroy","row_infos","rowIndex","removeRowLabels","indicator","Sprite","WHITE","tint","Text","dimensions","yStart","xLabelOffset","getRowHeight","rowStepHeight","rowStepYCenter","addChild","newOptions","updateExistingGraphics","getTilePosAndDimensions","shape","binSizePx","floor","binSizeBp","binSizeBpHalf","binXPos","valuesByRow","j","meanValue","dense","subarray","rowIdx","actualTrackHeight","getTrackHeight","globalMax","valueScale","range","colorIndexScale","clamp","rowMaxs","rowValueScales","rowColorIndexScales","valueScaleByRow","colorIndexScaleByRow","rowScale","tiles","maxRows","positionsByRow","colorIndicesByRow","offsetSignsByRow","_xScale","size2d","size1d","unshift","flatMap","numPointsPerRow","verticesPerLine","verticesPerPoint","indices","Uint32Array","k","p1a","p1b","p1c","p1d","p2a","p2b","p2c","p2d","indexOffset","visibleTrackHeight","tilesToData","colorIndices","offsetSigns","toLineIndices","uniforms","UniformGroup","uLineColor","uNaNColor","uAreaColorTex","uAreaColorTexRes","uWidth","uMiter","shader","Shader","geometry","Geometry","numVerticesPoint","addAttribute","TYPES","FLOAT","addIndex","mesh","Mesh","newGraphics","Graphics","pMain","lineGraphics","hasFetchedTiles","renderLines","newPosition","newXScale","newYScale","refreshTiles","trackX","trackY","calculateZoomLevel","calculateTileWidth","tile_size","invert","posInTileX","rowSelection","tileId","tileToLocalId","fetchedTile","text","selectRowsAggregationMethod","rowI","rowInfo","getVisibleData","svgns","base","setAttribute","output","stride","createLine","line","posPerRow","posToPoints","arr","numColors","defs","createElementNS","linearGradient","stop","insertBefore","firstChild","l","y0","firstComma","firstX","firstY","lastComma","lastX","lastY","HorizontalLine1DPixiTrack","datatype","orientation","pointToPosition","pt","cX","widthHalf","pointToIndex","pointToOpacity","opacity","pointToHighlight","highlight","getIs2d","get1dItemWidth","get2dItemWidth","yEnd","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","maxWidthItem","scaleScalableGraphics","getRegionId","createStratifiedBedTrack","scaleLog","opacityLogScale","StratifiedBedTrack","pLegend","pMasked","legendMin","legendMax","is2d","getItemWidth","getStart","getEnd","intervals","regionId","isLeftToRight","intervalTree","createIntervalTree","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","toLowerCase","categoryToY","yToCategory","groupSizes","groupSize","cat","groupLabelsPixiText","labelSize","markColorHighlightRgbNorm","markColorDehighlightRgbNorm","getImportance","opacityScale","opacityLinearScale","getRegion","getGene","minImportance","updateStratificationOption","heightScale","categoryHeightScale","valueScaleInverted","isHighlighting","get","__focus","__item","filterFn","addFn","filteredItems","reducerVar","accumulator","itemToIndicatorCategory","i1","isItemInFocus","dataToPoint","itemToIndicatorReducer","points","getPoints","Uint16Array","opacities","highlights","uColor","uColorHighlight","uHighlighting","indicatorPointGraphics","xTickOffset","xTickEnd","numAxisLabels","lineStyle","labelPixiText","beginFill","drawRect","endFill","legendMinText","legendMaxText","isRightAligned","minValue","minTextWidth","getBounds","maxTextWidth","offset","drawRoundedRect","renderIndicatorCategoryAxis","renderIndicatorLegend","renderIndicatorPoints","updateIndicators","storePolyStr","foundItem","xAbsLo","xAbsHi","queryInterval","interval","bg","colorHex","bgHex","gAxis","createRect","f","o","strokeDasharray","x1","y1","x2","y2","createDashedLine","pixiText","t","_style","_fill","_align","_font","textContent","createText","colorHighlight","renderIndicatorCategoryAxisAsSvg","thumbnail","DOMParser","parseFromString","documentElement","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","createScalableArcs1dTrack","ScalableArcs1dTrack","numBins","pointSize","widthHistogramLeft","widthHistogramRight","bin","histPos","widthHistogramMax","updateTileWidthHistogram","markColorFocusRgbNorm","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","mapFn","pointToFocused","vertexShader","fragmentShader","drawTriangles","uPointSize","uColorFocused","State","DRAW_MODES","TRIANGLES","POINTS","drawAxis","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","startsWith","drawCircle","drawEllipse","trackWidth","trackHeight","cx","cy","polyStr","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","polys","visibleAndFetchedTiles","drawTile","g","createSnpTrack","d3Array","scaleBand","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","radius","rectGraphics","finalDotYPos","rows","initialize","paddingInner","circleDraws","circleFocusDraws","td","geneInfo","chrOffset","yMiddle","step","drawnRects","circleDraw","drawPoly","interactive","buttonMode","mouseup","hoveringSnp","publish","relTilePos","minDist","dist","itemY","MAX_RADIUS","otherStr","substr","plusStrandRows","renderRows","circles","focusedCircles","c","axis","axisPositionVertical","gDrawnAxis","exportAxisLeftSVG","exportAxisRightSVG","BedLikeTrack","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","histogram1d","histogram2d","histogram2dNumPred","Uint8Array","categoryBinHash","maxBinId","binStart","binEnd","histIdx","binHash","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","rowCumSum","rowNumPred","totalPred","sum","numPred","relYPos","findIndex","createTssTrack","TssTrack","createPubSub","xStartScreen","xEndScreen","register","isMetaTrack","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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AaC,uBACjB,SAAC/F,GACC6F,EAAS7F,GACTgE,GAAoB/F,EAAK+B,EAAUiE,KAErC,CAAChG,EAAKgG,IAMR,OAFAD,GAAoB/F,EAAKpC,EAAOoI,GAEzB,CAACpI,EAAOiK,IClBF,SAASE,GAAYnK,GAClC,IAAMoK,EAAMC,mBAIZ,OAHAhK,qBAAU,WACR+J,EAAIE,QAAUtK,KAEToK,EAAIE,QCPN,IAAMC,GAAM,KAeNC,GAAoB,CAE/B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GAAyB,CAEpC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GAA0B,CAErC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GACX,8DAEWC,GACX,6DAEWC,GAAyB,CACpCC,cAAe,GACfC,wBAAwB,EACxBC,kBAAkB,EAClBC,OAAQ,CACN,CACEhG,MAAO,yBACPiG,WAAY,CACV,wBACA,qBACA,2DACA,0DACA,4DACA,gBACA,sBACA,0DACA,sBACA,+BACA,2DACA,gCACA,qBACA,+EACA,4DACA,wBACA,uCACA,iFACA,0DACA,qBACA,OACA,iCACA,iFACA,gBACA,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACEjG,MAAO,UACPiG,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACEjG,MAAO,UACPiG,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACEjG,MAAO,6BACPiG,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACEjG,MAAO,cACPiG,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACEjG,MAAO,aACPiG,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCA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","file":"static/js/main.56ce162f.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#bbb',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst AppInitializing = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"full-wh\">\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: '100%',\n    padding: '0.1em',\n    alignItems: 'center',\n    fontSize: '1em',\n    lineHeight: '1em',\n    fontWeight: 'bold',\n  },\n  logoAbc: {\n    fontSize: '2.75em',\n    letterSpacing: '-0.1rem',\n    paddingRight: '0.1em',\n  },\n  logoEnhancer: {\n    alignItems: 'flex-start',\n  },\n}));\n\nconst Logo = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.logo} style={props.styles}>\n      <Grid item className={classes.logoAbc}>\n        ABC\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" className={classes.logoEnhancer}>\n          <Grid item>Enhancer-Gene</Grid>\n          <Grid item>Connections</Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nLogo.defaultProps = {\n  styles: {},\n};\n\nLogo.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Logo;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { identity } from '@flekschas/utils';\n\nimport useDebounce from './use-debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    background: 'white !important',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    '&::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 0)',\n      transition: 'boxShadow 0.2s ease',\n    },\n    '&:hover::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n    },\n  },\n  focused: {\n    boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n  },\n  input: {\n    height: 35,\n    padding: '6px 0 6px',\n  },\n  textFieldRoot: {\n    '& .MuiFormLabel-root': {\n      color: 'black',\n      fontWeight: 'bold',\n      transform: 'translate(12px, 21px) scale(1.25)',\n    },\n    '& .MuiInputLabel-shrink': {\n      fontWeight: 'normal',\n    },\n  },\n}));\n\nconst fetchJsonFromUrl = async (url, query) => {\n  if (typeof url === 'string') {\n    const response = await fetch(`${url}&ac=${query || ''}`);\n    return response.json();\n  }\n  const response = await fetch(`${url.url}&ac=${query || ''}`);\n  const results = await response.json();\n  return results.map((result) => {\n    result.type = url.type;\n    return result;\n  });\n};\n\nfunction GeneIcon(props) {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <path d=\"M5.03 14.378A7.33 7.33 0 003.423 16h2.42a7.762 7.762 0 011.281-.774 13.241 13.241 0 01-1.863-1.016c-.078.054-.156.11-.233.168zM5.766 0l.219.174a8.754 8.754 0 001.636.92l.024.008c.797.24 1.507.627 2.023.933.325.18.674.4 1.024.66 1.825 1.363 2.79 3.22 2.79 5.367 0 2.062-.962 3.89-2.782 5.286-.061.048-.125.094-.186.139a10.45 10.45 0 00-1.895-.955 8.17 8.17 0 001.69-1.162h-3.92a6.191 6.191 0 01-1.199-1.15h6.093a4.054 4.054 0 00.603-1.747H3.839c.072.656.307 1.239.636 1.747h.011c.282.438.628.822.991 1.15H5.47l.74.584c.831.588 1.573.893 1.636.92a9.358 9.358 0 012.847 1.504A7.38 7.38 0 0112.3 16H9.879l-.759-.5a7.876 7.876 0 00-1.256-.594 11.833 11.833 0 01-2.07-1.04l.017-.009c-1.567-.999-3.571-2.851-3.571-5.794 0-2.149.964-4.005 2.79-5.367.076-.058.154-.113.231-.167.495.32 1.143.698 1.863 1.015a7.677 7.677 0 00-1.296.786c-.043.032-.083.066-.125.098h3.318c.535.336.999.727 1.364 1.149H4.598a4.215 4.215 0 00-.721 1.748h7.97l-.038-.195a3.527 3.527 0 00-.306-.904 4.417 4.417 0 00-.378-.65l-.01-.007a5.793 5.793 0 00-1.081-1.13l-.14-.109a7.236 7.236 0 00-.722-.48l-.031-.02a7.942 7.942 0 00-1.276-.607 10.278 10.278 0 01-1.257-.57C5.728 2.218 4.31 1.364 3.281 0h2.486zm6.267 0a7.808 7.808 0 01-1.743 1.707A10.443 10.443 0 008.396.752 8.592 8.592 0 009.592 0h2.442z\" />\n    </SvgIcon>\n  );\n}\n\nfunction GeneOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <GeneIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction VariantOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <FlashOnIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction Option(props) {\n  if (props.option.type === 'gene') return <GeneOption option={props.option} />;\n  if (props.option.type === 'variant')\n    return <VariantOption option={props.option} />;\n  return <div>{props.option.geneName}</div>;\n}\n\nexport default function SearchField(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(props.inputValue);\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const loading = open && options.length === 0;\n  const classes = useStyles();\n  const autocompleteClasses = { ...classes };\n  delete autocompleteClasses.textFieldRoot;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!open) return undefined;\n\n    setOptions([]);\n\n    const results = Array.isArray(props.searchUrl)\n      ? props.searchUrl.map((url) =>\n          fetchJsonFromUrl(url, debouncedSearchQuery)\n        )\n      : fetchJsonFromUrl(props.searchUrl, debouncedSearchQuery);\n\n    Promise.all(results).then((resultList) => {\n      if (active) setOptions(resultList.flat());\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [props.searchUrl, open, debouncedSearchQuery]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const value =\n    props.multiple && !Array.isArray(props.value) ? [props.value] : props.value;\n\n  let autocompleteOptions = value && options.length === 0 ? value : options;\n  autocompleteOptions = Array.isArray(autocompleteOptions)\n    ? autocompleteOptions\n    : [autocompleteOptions];\n\n  return (\n    <Autocomplete\n      classes={props.larger ? autocompleteClasses : {}}\n      multiple={props.multiple}\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      value={value}\n      onInputChange={(event, newInputValue) => {\n        if (event) setSearchQuery(newInputValue);\n      }}\n      fullWidth={props.fullWidth}\n      style={{ width: props.fullWidth ? 'auto' : props.width }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, _value) =>\n        option.geneName === _value.geneName\n      }\n      getOptionLabel={(option) => (option ? option.geneName : '')}\n      options={autocompleteOptions}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          className={props.larger ? classes.textFieldRoot : ''}\n          id={props.id}\n          label={props.label}\n          variant={props.variant}\n          size={props.size}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n      renderOption={(option) => <Option option={option} />}\n      renderTags={(v, getTagProps) =>\n        v.map((option, index) => (\n          <Chip\n            icon={option.type === 'gene' ? <GeneIcon /> : <FlashOnIcon />}\n            key={option.geneName}\n            label={option.geneName}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n    />\n  );\n}\n\nSearchField.defaultProps = {\n  fullWidth: true,\n  id: '',\n  label: '',\n  multiple: false,\n  onChange: identity,\n  size: 'small',\n  value: null,\n  variant: 'outlined',\n  width: '10rem',\n};\n\nSearchField.propTypes = {\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  searchUrl: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          url: PropTypes.string,\n          type: PropTypes.string,\n        }),\n        PropTypes.string,\n      ])\n    ),\n    PropTypes.string,\n  ]).isRequired,\n  size: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  variant: PropTypes.string,\n  width: PropTypes.string,\n};\n","import { identity } from '@flekschas/utils';\nimport queryString from 'query-string';\n\nexport const contains = (a, b) => a[0] <= b[0] && a[1] >= b[1];\n\nexport const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nexport const dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nexport const download = (filename, stringOrBlob) => {\n  const blob =\n    typeof stringOrBlob === 'string'\n      ? new Blob([stringOrBlob], { type: 'application/octet-stream' })\n      : stringOrBlob;\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    const elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n    URL.revokeObjectURL(elem.href);\n  }\n};\n\nexport const getQueryStringValue = (key, decoder = identity) =>\n  decoder(queryString.parse(window.location.search)[key]);\n\nexport const setQueryStringValue = (key, value, encoder = identity) => {\n  const values = queryString.parse(window.location.search);\n  const newQsValue = queryString.stringify(\n    {\n      ...values,\n      [key]: encoder(value),\n    },\n    { strict: false }\n  );\n  const url = `${window.location.origin}${window.location.pathname}?${newQsValue}`;\n  window.history.pushState({ path: url }, '', url);\n};\n\nexport const toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n\nexport const toFixed = (number, decimals, forced) => {\n  let string = number.toFixed(decimals);\n  if (!forced) {\n    while (string[string.length - 1] === '0') {\n      string = string.substring(0, string.length - 1);\n    }\n    if (string[string.length - 1] === '.') {\n      string = string.substring(0, string.length - 1);\n    }\n  }\n  return string;\n};\n","import { useState, useCallback } from 'react';\nimport { getQueryStringValue, setQueryStringValue } from './utils';\n\nfunction useQueryString(key, initialValue, { encoder, decoder } = {}) {\n  const [value, setValue] = useState(\n    getQueryStringValue(key, decoder) === undefined\n      ? initialValue\n      : getQueryStringValue(key, decoder)\n  );\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n\nexport default useQueryString;\n","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","export const EPS = 1e-6;\n\nexport const SVG_SKELETON = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"_WIDTH_px\" height=\"_HEIGHT_px\">\n    <g id=\"enhancer-view\">\n    _ENHANCER_\n    </g>\n    <g id=\"dna-accessibility-view\" transform=\"translate(_DNA_ACCESS_X_,0)\">\n    _DNA_ACCESS_\n    </g>\n</svg>`;\n\nexport const DEFAULT_COLOR_MAP = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nexport const DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nexport const DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nexport const GENE_SEARCH_URL =\n  'https://higlass.io/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA';\n\nexport const VARIANT_SEARCH_URL =\n  'https://resgen.io/api/v1/suggest/?d=VF5-RDXWTxidGMJU7FeaxA';\n\nexport const DEFAULT_STRATIFICATION = {\n  categoryField: 10,\n  axisShowGroupSeparator: true,\n  axisNoGroupColor: false,\n  groups: [\n    {\n      label: 'Mononuclear Phagocytes',\n      categories: [\n        'THP1_LPS_4hr-Engreitz',\n        'THP_pmaLPS_ATAC_6h',\n        'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n        'THP1-Engreitz',\n        'THP_pmaLPS_ATAC_96h',\n        'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n        'THP_pmaLPS_ATAC_72h',\n        'THP-1_monocyte-VanBortle2017',\n        'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n        'CD14-positive_monocyte-ENCODE',\n        'THP_pmaLPS_ATAC_2h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n        'U937_LPS_4hr-Engreitz',\n        'CD14-positive_monocyte-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n        'THP_pmaLPS_ATAC_0h',\n        'HAP1',\n        'THP-1_macrophage-VanBortle2017',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n        'U937-Engreitz',\n        'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n        'THP_pmaLPS_ATAC_24h',\n        'THP_pmaLPS_ATAC_1h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n        'THP_pmaLPS_ATAC_120h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n        'THP_pmaLPS_ATAC_48h',\n        'CD14-positive_monocytes-Roadmap',\n        'THP_pmaLPS_ATAC_12h', // monoctye\n      ],\n    },\n    {\n      label: 'B Cells',\n      categories: [\n        'Karpas-422-ENCODE', // b-cell cell line\n        'BJAB-Engreitz',\n        'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n        'B_cell-ENCODE',\n        'OCI-LY7-ENCODE',\n        'GM12878-Roadmap',\n        'MM.1S-ENCODE',\n        'CD19-positive_B_cell-Roadmap',\n        'CD8-positive_alpha-beta_T_cell-ENCODE',\n      ],\n    },\n    {\n      label: 'T Cells',\n      categories: [\n        'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n        'Jurkat-Engreitz',\n        'CD3-positive_T_cell-Roadmap',\n        'CD4-positive_helper_T_cell-ENCODE',\n        'CD8-positive_alpha-beta_T_cell-Corces2016',\n        'thymus_fetal-Roadmap',\n        'CD4-positive_helper_T_cell-Corces2016',\n        'T-cell-ENCODE',\n      ],\n    },\n    {\n      label: 'Other haematopoietic cells',\n      categories: [\n        'spleen-ENCODE',\n        'K562-Roadmap',\n        'CD56-positive_natural_killer_cells-Roadmap',\n        'erythroblast-Corces2016',\n        'CD34-positive_mobilized-Roadmap',\n        'megakaryocyte-erythroid_progenitor-Corces2016',\n        'natural_killer_cell-Corces2016',\n        'IMR90-Roadmap',\n      ],\n    },\n    {\n      label: 'Fibroblasts',\n      categories: [\n        'foreskin_fibroblast-Roadmap',\n        'fibroblast_of_dermis-Roadmap',\n        'fibroblast_of_arm-ENCODE',\n        'astrocyte-ENCODE',\n        'fibroblast_of_lung-Roadmap',\n      ],\n    },\n    {\n      label: 'Epithelial',\n      categories: [\n        'small_intestine_fetal-Roadmap',\n        'epithelial_cell_of_prostate-ENCODE',\n        'HCT116-ENCODE',\n        'MCF-7-ENCODE',\n        'adrenal_gland_fetal-ENCODE',\n        'H7',\n        'keratinocyte-Roadmap',\n        'MCF10A-Ji2017',\n        'pancreas-Roadmap',\n        'mammary_epithelial_cell-Roadmap',\n        'stomach-Roadmap',\n        'LoVo',\n        'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n        'PC-9-ENCODE',\n        'H1-hESC-Roadmap',\n        'thyroid_gland-ENCODE',\n        'HT29',\n        'MDA-MB-231',\n        'iPS_DF_19.11_Cell_Line-Roadmap',\n        'large_intestine_fetal-Roadmap',\n        'Panc1-ENCODE',\n        'adrenal_gland-ENCODE',\n        'MCF10A_treated_with_TAM24hr-Ji2017',\n        'trophoblast_cell-ENCODE',\n        'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n        'uterus-ENCODE',\n        'body_of_pancreas-ENCODE',\n        'stomach_fetal-Roadmap',\n        'H9-Roadmap',\n        'transverse_colon-ENCODE',\n        'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n        'breast_epithelium-ENCODE',\n        'induced_pluripotent_stem_cell-ENCODE',\n        'LNCAP',\n        'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n        'ovary-Roadmap',\n        'sigmoid_colon-ENCODE',\n        'skeletal_muscle_myoblast-Roadmap',\n        'bipolar_neuron_from_iPSC-ENCODE',\n        'coronary_artery_smooth_muscle_cell-Miller2016',\n        'SK-N-SH-ENCODE',\n        'muscle_of_trunk_fetal-Roadmap',\n      ],\n    },\n    {\n      label: 'Other',\n      categories: [\n        'adipose_tissue-ENCODE',\n        'HeLa-S3-Roadmap',\n        'hepatocyte-ENCODE',\n        'heart_ventricle-ENCODE',\n        'spinal_cord_fetal-ENCODE',\n        'coronary_artery-ENCODE',\n        'HepG2-Roadmap',\n        'muscle_of_leg_fetal-Roadmap',\n        'gastrocnemius_medialis-ENCODE',\n        'brite_adipose-Loft2014',\n        'placenta-Roadmap',\n        'liver-ENCODE',\n        'A673-ENCODE',\n        'white_adipose-Loft2014',\n        'cardiac_muscle_cell-ENCODE',\n        'osteoblast-ENCODE',\n        'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n        'endothelial_cell_of_umbilical_vein-Roadmap',\n        'NCCIT',\n        'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n        'psoas_muscle-Roadmap',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n      ],\n    },\n  ],\n};\n\nexport const DEFAULT_X_DOMAIN_START = 1761366260;\nexport const DEFAULT_X_DOMAIN_END = 1761603836;\n\nexport const DEFAULT_VIEW_CONFIG_ENHANCER = {\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'context',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'combined',\n            uid: 'chroms-viewport',\n            height: 12,\n            contents: [\n              {\n                type: 'horizontal-chromosome-labels',\n                options: {\n                  // tickPositions: 'ends',\n                  color: '#999999',\n                  stroke: 'white',\n                  fontSize: 10,\n                  fontIsLeftAligned: true,\n                  showMousePosition: false,\n                  mousePositionColor: '#000000',\n                },\n                tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n                height: 12,\n                server: 'https://resgen.io/api/v1',\n                uid: 'chroms',\n              },\n              {\n                uid: 'viewport-details-chroms',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 12,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'genes-tss-viewport',\n            height: 52,\n            contents: [\n              {\n                type: 'horizontal-gene-annotations',\n                uid: 'genes',\n                height: 52,\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                  showMousePosition: true,\n                  showGlobalMousePosition: true,\n                  mousePositionColor: 'black',\n                },\n              },\n              {\n                type: 'tss',\n                uid: 'tss',\n                height: 52,\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'RefSeqCurated170308bedCollapsedGeneBoundsTSS500bp',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VMZDLKrtQDmJMSjg7Ds4yA',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                uid: 'viewport-details-genes',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 52,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'point-annotation',\n            uid: 'ibd-snps',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 36,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            type: 'stacked-bar',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 96,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: DEFAULT_STRATIFICATION,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n          {\n            type: 'stratified-bed',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 430,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              legendAlign: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorHighlight: '#bf0071',\n              markColorDehighlight: '#bbbbbb',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: DEFAULT_STRATIFICATION,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes-tss-viewport'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 0,\n            outlineWidth: 0,\n          },\n        },\n        {\n          uid: 'tss-overlays',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [],\n            minWidth: 1,\n            fill: 'black',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: 'black',\n            outlineOpacity: 0.1,\n            outlineWidth: 1,\n            outlinePos: ['left'],\n          },\n        },\n      ],\n      metaTracks: [\n        {\n          uid: 'tss-overlays-meta',\n          type: 'annotation-overlay',\n          overlaysTrack: 'tss-overlays',\n          options: {\n            annotationTracks: ['tss'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n      initialYDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n    },\n  ],\n};\n\nexport const DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY = {\n  zoomFixed: false,\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'details',\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            uid: 'chroms',\n            type: 'horizontal-chromosome-labels',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n            height: 17,\n            options: {\n              // tickPositions: 'ends',\n              color: '#999999',\n              stroke: 'white',\n              fontSize: 10,\n              fontIsLeftAligned: true,\n              showMousePosition: false,\n              mousePositionColor: '#000000',\n            },\n          },\n          {\n            uid: 'genes',\n            type: 'horizontal-gene-annotations',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n            height: 52,\n            options: {\n              fontSize: 9,\n              plusStrandColor: 'black',\n              minusStrandColor: 'black',\n              geneAnnotationHeight: 12,\n              geneLabelPosition: 'outside',\n              geneStrandSpacing: 2,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n          {\n            uid: 'ibd-snps',\n            type: 'point-annotation',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 132,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            uid: 'dna-accessibility',\n            type: 'ridge-plot',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'test',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'Uz1_tEABQf-uzktblvBKSQ',\n            // height: 403,\n            height: 131 * (24 - 6) + 6,\n            options: {\n              name: 'DNA Accessibility',\n              labelPosition: 'outerBottom',\n              labelShowResolution: false,\n              labelShowAssembly: false,\n              markArea: true,\n              markColor: '#444444',\n              markResolution: 256,\n              valueScaling: 'exponential',\n              colorRange: ['#ffffff', '#000000'],\n              rowHeight: 24,\n              rowPadding: -6,\n              rowNormalization: true,\n              rowSelections: [\n                120,\n                36,\n                54,\n                20,\n                80,\n                35,\n                101,\n                49,\n                44,\n                23,\n                30,\n                66,\n                5,\n                26,\n                15,\n                105,\n                57,\n                56,\n                74,\n                84,\n                79,\n                93,\n                106,\n                107,\n                34,\n                28,\n                25,\n                55,\n                121,\n                94,\n                58,\n                69,\n                67,\n                63,\n                126,\n                71,\n                72,\n                47,\n                11,\n                46,\n                39,\n                113,\n                29,\n                60,\n                45,\n                76,\n                21,\n                103,\n                129,\n                13,\n                128,\n                90,\n                104,\n                32,\n                109,\n                27,\n                9,\n                130,\n                95,\n                86,\n                53,\n                73,\n                50,\n                48,\n                78,\n                14,\n                92,\n                124,\n                31,\n                114,\n                64,\n                88,\n                12,\n                10,\n                38,\n                68,\n                3,\n                111,\n                70,\n                22,\n                61,\n                98,\n                6,\n                123,\n                118,\n                43,\n                37,\n                65,\n                81,\n                62,\n                33,\n                1,\n                24,\n                122,\n                83,\n                75,\n                112,\n                40,\n                97,\n                16,\n                117,\n                87,\n                19,\n                125,\n                7,\n                102,\n                116,\n                77,\n                8,\n                17,\n                82,\n                115,\n                89,\n                119,\n                18,\n                4,\n                108,\n                59,\n                127,\n                91,\n                0,\n                100,\n                85,\n                110,\n                99,\n                2,\n                96,\n                51,\n                41,\n                52,\n                42,\n              ],\n              rowIdToCategory: {\n                fn: 'replace',\n                args: ['.accessibility', ''],\n              },\n              rowCategories: DEFAULT_STRATIFICATION.groups.reduce(\n                (row, group, index) => {\n                  const category = {\n                    label: group.label,\n                    color: group.axisLabelColor,\n                    background: group.axisLabelBackground,\n                    index,\n                  };\n                  group.categories.forEach((sample) => {\n                    row[sample] = category;\n                  });\n                  return row;\n                },\n                {}\n              ),\n              showRowLabels: true,\n              rowLabelSize: 10,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: ['chroms', 'genes', 'ibd-snps', 'dna-accessibility'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n      initialYDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n    },\n  ],\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { HiGlassComponent } from 'higlass';\nimport {\n  debounce,\n  deepClone,\n  isString,\n  nthIndexOf,\n  pipe,\n} from '@flekschas/utils';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fade from '@material-ui/core/Fade';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Modal from '@material-ui/core/Modal';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Logo from './Logo';\nimport SearchField from './SearchField';\n\nimport useDebounce from './use-debounce';\nimport useQueryString from './use-query-string';\nimport usePrevious from './use-previous';\nimport { download, toAbsPosition, toFixed } from './utils';\nimport {\n  DEFAULT_X_DOMAIN_START,\n  DEFAULT_X_DOMAIN_END,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n  DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY,\n  GENE_SEARCH_URL,\n  VARIANT_SEARCH_URL,\n  SVG_SKELETON,\n} from './constants';\n\nimport 'higlass/dist/hglib.css';\nimport './Viewer.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  black: {\n    color: 'black',\n  },\n  gray: {\n    color: theme.palette.grey['400'],\n  },\n  pink: {\n    color: '#cc0078',\n  },\n  root: {\n    position: 'absolute',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  h1: {\n    height: '100%',\n    margin: '0',\n    padding: '0',\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    fontWeight: 'bold',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '4rem',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '0.25rem',\n    boxShadow: theme.shadows[4],\n    maxWidth: '60rem',\n    padding: theme.spacing(2, 4),\n    outline: 0,\n    '&>h2': {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: theme.spacing(2, 0, 3),\n    },\n    '&>p': {\n      fontSize: '1.125em',\n    },\n  },\n  startExploring: {\n    color: 'white',\n    background: '#cc0078 linear-gradient(45deg, #cc0078 30%, #cc0066 90%)',\n    boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .3)',\n    '&:hover': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n    },\n    '&:focus': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n    },\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    boxShadow: `0 1px 0 0 ${theme.palette.grey['300']}`,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerGrid: {\n    height: '100%',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  settings: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  settingsContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden auto',\n  },\n  textInput: {\n    minWidth: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  higlass: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  higlassEnhancer: {\n    flexGrow: 1,\n    margin: '-8px 0 -8px -8px',\n  },\n  higlassDnaAccessibility: {\n    width: '20rem',\n    margin: '-8px -8px -8px 0',\n  },\n  higlassTitleBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'relative',\n    padding: '2px',\n    fontSize: '0.8rem',\n    background: theme.palette.grey['100'],\n  },\n  higlassTitleBarTitle: {\n    padding: '0 2px',\n    fontSize: '0.8rem',\n  },\n  higlassTitleBarHelp: {\n    color: theme.palette.grey['400'],\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  higlassTitleBarHelpPopeover: {\n    maxWidth: '20rem',\n    padding: '0.5rem',\n    fontSize: '0.8rem',\n    '&+p': {\n      paddingTop: 0,\n    },\n  },\n  higlassEnhancerInfoBar: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    minHeight: '2.625rem',\n    padding: '2px 4px',\n    color: theme.palette.grey['600'],\n  },\n  higlassDnaAccessibilityInfoBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '2px 4px',\n    color: theme.palette.grey['600'],\n  },\n  higlassSeparator: {\n    width: 1,\n    margin: '-8px 0',\n    background: theme.palette.grey['300'],\n  },\n  toolbarExtra: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    alignItems: 'flex-end',\n  },\n}));\n\nconst chrPosUrlEncoder = (chrPos) =>\n  chrPos ? chrPos.replace(':', '.') : chrPos;\n\nconst chrPosUrlDecoder = (chrPos) =>\n  chrPos ? chrPos.replace('.', ':') : chrPos;\n\nconst getFocusGeneRegion = (viewConfig) => {\n  return viewConfig.views[0].overlays[1] &&\n    viewConfig.views[0].overlays[1].options.extent &&\n    viewConfig.views[0].overlays[1].options.extent.length\n    ? [...viewConfig.views[0].overlays[1].options.extent[0]]\n    : null;\n};\n\nconst getFocusVariantRegion = (viewConfig) =>\n  viewConfig.views[0].tracks.top[2].options.focusRegion\n    ? [...viewConfig.views[0].tracks.top[2].options.focusRegion]\n    : null;\n\nconst updateViewConfigXDomain = (newXDomainStart, newXDomainEnd, force) => (\n  viewConfig\n) => {\n  const xDomain = [...viewConfig.views[0].initialXDomain];\n  const focusGeneRegion = getFocusGeneRegion(viewConfig);\n  const focusVariantRegion = getFocusVariantRegion(viewConfig);\n\n  if (!Number.isNaN(+newXDomainStart)) {\n    xDomain[0] = newXDomainStart;\n  }\n  if (!Number.isNaN(+newXDomainEnd)) {\n    xDomain[1] = newXDomainEnd;\n  }\n\n  if (focusGeneRegion && !force) {\n    xDomain[0] = focusGeneRegion[0] - 100000;\n    xDomain[1] = focusGeneRegion[1] + 100000;\n  }\n\n  if (focusVariantRegion && !force) {\n    xDomain[0] = Math.min(xDomain[0], focusVariantRegion[0] - 100000);\n    xDomain[1] = Math.max(xDomain[1], focusVariantRegion[1] + 100000);\n  }\n\n  viewConfig.views[0].initialXDomain = xDomain;\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusGene = (gene, start, end) => (viewConfig) => {\n  const n = viewConfig.views[0].tracks.top.length;\n\n  if (gene) {\n    viewConfig.views[0].tracks.top[n - 1].options.focusGene = gene;\n    viewConfig.views[0].overlays[1].options.extent = [[start, end]];\n  } else {\n    delete viewConfig.views[0].tracks.top[n - 1].options.focusGene;\n    delete viewConfig.views[0].overlays[1].options.extent;\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusVariant = (position, trackIdxs = []) => (\n  viewConfig\n) => {\n  if (Number.isNaN(+position) || position === null) {\n    trackIdxs.forEach((trackIdx) => {\n      delete viewConfig.views[0].tracks.top[trackIdx].options.focusRegion;\n    });\n    viewConfig.views[0].overlays[0].options.extent = [];\n  } else {\n    const focusRegion = [position - 0.5, position + 0.5];\n    trackIdxs.forEach((trackIdx) => {\n      viewConfig.views[0].tracks.top[\n        trackIdx\n      ].options.focusRegion = focusRegion;\n    });\n\n    viewConfig.views[0].overlays[0].options.extent = [focusRegion];\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusStyle = (hideUnfocused) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.focusStyle =\n    hideUnfocused === 'true' ? 'filtering' : 'highlighting';\n  viewConfig.views[0].tracks.top[4].options.stratification.axisNoGroupColor =\n    hideUnfocused !== 'true';\n\n  return viewConfig;\n};\n\nconst updateViewConfigVariantYScale = (yScale) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[2].options.valueColumn =\n    yScale === 'pValue' ? 7 : 8;\n\n  return viewConfig;\n};\n\nconst updateViewConfigMatrixColoring = (coloring) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.opacityEncoding = coloring;\n  return viewConfig;\n};\n\nconst updateViewConfigDnaAccessLabels = (labels) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[3].options.showRowLabels =\n    !labels || labels === 'hidden' ? false : labels;\n  return viewConfig;\n};\n\nconst extractSvgCore = (svg) => {\n  const fifthLn = nthIndexOf(svg, '\\n', 4);\n  const lastLn = svg.lastIndexOf('\\n');\n  const width = +svg.substring(\n    svg.indexOf('width=\"') + 7,\n    svg.indexOf('px', svg.indexOf('width=\"') + 7)\n  );\n  const height = +svg.substring(\n    svg.indexOf('height=\"') + 8,\n    svg.indexOf('px', svg.indexOf('height=\"') + 8)\n  );\n  return [svg.substring(fifthLn + 1, lastLn), width, height];\n};\n\nconst Viewer = (props) => {\n  const [infoOpen, setInfoOpen] = useQueryString('info', true, {\n    decoder: (v) => v === 'true',\n  });\n  const [focusGene, setFocusGene] = useQueryString('gene', '');\n  const [focusVariant, setFocusVariant] = useQueryString(\n    'variant',\n    'rs1250566'\n  );\n  const [hideUnfocused, setHideUnfocused] = useQueryString('hide-unfocused');\n  const [matrixColoring, setMatrixColoring] = useQueryString(\n    'matrix-coloring',\n    'solid'\n  );\n  const [variantYScale, setVariantYScale] = useQueryString(\n    'varient-scale',\n    'pValue'\n  );\n  const [dnaAccessLabels, setDnaAccessLabels] = useQueryString(\n    'access-labels',\n    'indicator'\n  );\n  const [xDomainStart, setXDomainStart] = useQueryString(\n    'start',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_START).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [xDomainEnd, setXDomainEnd] = useQueryString(\n    'end',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_END).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n\n  const [focusGeneOption, setFocusGeneOption] = useState(null);\n  const [focusVariantOption, setFocusVariantOption] = useState(null);\n  const prevFocusGeneOption = usePrevious(focusGeneOption);\n  const prevFocusVariantOption = usePrevious(focusVariantOption);\n  const higlassEnhancerApi = useRef(null);\n  const higlassDnaAccessApi = useRef(null);\n  const [\n    higlassEnhancerHelpAnchorEl,\n    setHiglassEnhancerHelpAnchorEl,\n  ] = useState(null);\n  const [\n    higlassDnaAccessHelpAnchorEl,\n    setHiglassDnaAccessHelpAnchorEl,\n  ] = useState(null);\n\n  // Derived State\n  const focusGeneVariantOptions = useMemo(\n    () => {\n      const _focusGeneVariant = [];\n      // Add the focus element that has not changed first!\n      if (focusGeneOption && focusGeneOption === prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption === prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      // Now add the focused element that has changed!\n      if (focusGeneOption && focusGeneOption !== prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption !== prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      return _focusGeneVariant;\n    },\n    // `prevFocusGeneOption` and `prevFocusVariantOption` are ommitted\n    // on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [focusGeneOption, focusVariantOption]\n  );\n\n  const focusGeneStartPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusGeneEndPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txEnd}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusVariantPosition = useMemo(\n    () =>\n      focusVariantOption\n        ? toAbsPosition(\n            `${focusVariantOption.chr}:${focusVariantOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusVariantOption, props.chromInfo]\n  );\n\n  const xDomainStartAbs = useMemo(\n    () => toAbsPosition(xDomainStart, props.chromInfo),\n    [xDomainStart, props.chromInfo]\n  );\n\n  const xDomainEndAbs = useMemo(\n    () => toAbsPosition(xDomainEnd, props.chromInfo),\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const xDomainStartAbsDb = useDebounce(xDomainStartAbs, 1000);\n  const xDomainEndAbsDb = useDebounce(xDomainEndAbs, 1000);\n\n  const viewConfigEnhancer = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusGene(\n          focusGeneOption ? focusGeneOption.geneName : null,\n          focusGeneStartPosition,\n          focusGeneEndPosition\n        ),\n        updateViewConfigFocusVariant(focusVariantPosition, [2, 4]),\n        updateViewConfigFocusStyle(hideUnfocused),\n        updateViewConfigMatrixColoring(matrixColoring),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigXDomain(xDomainStartAbs, xDomainEndAbs)\n      )(deepClone(DEFAULT_VIEW_CONFIG_ENHANCER)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusGeneOption,\n      focusGeneStartPosition,\n      focusGeneEndPosition,\n      focusVariantPosition,\n      hideUnfocused,\n      matrixColoring,\n      variantYScale,\n    ]\n  );\n\n  const getDnaAccessibilityXDomain = () => {\n    if (focusVariantPosition) {\n      return [focusVariantPosition - 2500, focusVariantPosition + 2500];\n    }\n\n    if (focusGeneStartPosition && focusGeneEndPosition) {\n      const midPos =\n        focusGeneStartPosition +\n        (focusGeneEndPosition - focusGeneStartPosition) / 2;\n      return [midPos - 2500, midPos + 2500];\n    }\n\n    return [xDomainStartAbs, xDomainEndAbs];\n  };\n\n  const viewConfigDnaAccessibility = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusVariant(focusVariantPosition, [2]),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigDnaAccessLabels(dnaAccessLabels),\n        updateViewConfigXDomain(\n          ...getDnaAccessibilityXDomain(\n            focusVariantPosition,\n            focusGeneStartPosition,\n            focusGeneEndPosition,\n            xDomainStartAbsDb,\n            xDomainEndAbsDb\n          ),\n          true\n        )\n      )(deepClone(DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusVariantPosition,\n      focusGeneStartPosition,\n      focusGeneEndPosition,\n      xDomainStartAbsDb,\n      xDomainEndAbsDb,\n      variantYScale,\n      dnaAccessLabels,\n      props.chromInfo,\n    ]\n  );\n\n  const dnaAccessibilityRegionSize = useMemo(\n    () =>\n      focusVariantPosition\n        ? 5\n        : Math.round((xDomainEndAbs - xDomainStartAbs) / 1000),\n    [focusVariantPosition, xDomainStartAbs, xDomainEndAbs]\n  );\n\n  const numericalXDomainStart = useMemo(\n    () =>\n      isString(xDomainStart) && xDomainStart.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainStart.split(':')[0],\n            +xDomainStart.split(':')[1],\n          ])\n        : +xDomainStart,\n    [xDomainStart, props.chromInfo]\n  );\n\n  const numericalXDomainEnd = useMemo(\n    () =>\n      isString(xDomainEnd) && xDomainEnd.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainEnd.split(':')[0],\n            +xDomainEnd.split(':')[1],\n          ])\n        : +xDomainEnd,\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n  };\n\n  const focusGeneChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusGene(newValue.geneName);\n      setFocusGeneOption(newValue);\n    } else {\n      clearFocusGene();\n    }\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    setFocusVariantOption(null);\n  };\n\n  const focusVariantChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusVariant(newValue.geneName);\n      setFocusVariantOption(newValue);\n    } else {\n      clearFocusVariant();\n    }\n  };\n\n  const focusGeneVariantChangeHandler = (newValues) => {\n    if (newValues.length) {\n      const newFocusElements = {};\n      // We only allow exactly two selections\n      newValues.slice(newValues.length - 2).forEach((newValue) => {\n        switch (newValue.type) {\n          case 'gene':\n            newFocusElements.gene = newValue;\n            if (focusGene !== newValue.geneName) {\n              setFocusGene(newValue.geneName);\n              setFocusGeneOption(newValue);\n            }\n            break;\n\n          case 'variant':\n            newFocusElements.variant = newValue;\n            if (focusVariant !== newValue.geneName) {\n              setFocusVariant(newValue.geneName);\n              setFocusVariantOption(newValue);\n            }\n            break;\n\n          default:\n            // eslint-disable-next-line no-console\n            console.warn('Unknown focus element', newValue);\n            break;\n        }\n      });\n      // Unset focus elements\n      if (focusGene && !newFocusElements.gene) clearFocusGene();\n      if (focusVariant && !newFocusElements.variant) clearFocusVariant();\n    } else {\n      clearFocusGene();\n      clearFocusVariant();\n    }\n  };\n\n  const hideUnfocusedChangeHandler = (event) => {\n    setHideUnfocused(event.target.checked.toString());\n  };\n\n  const variantYScaleChangeHandler = (event) => {\n    setVariantYScale(event.target.value);\n  };\n\n  const matrixColoringChangeHandler = (event) => {\n    setMatrixColoring(event.target.value);\n  };\n\n  const dnaAccessLabelsChangeHandler = (event) => {\n    setDnaAccessLabels(event.target.value);\n  };\n\n  const xDomainStartChangeHandler = (event) => {\n    setXDomainStart(event.target.value);\n  };\n\n  const xDomainEndChangeHandler = (event) => {\n    setXDomainEnd(event.target.value);\n  };\n\n  // HiGlass Functions\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      setFocusGeneOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        type: 'gene',\n      });\n    } else if (event.type === 'snp') {\n      setFocusVariant(event.payload.name);\n      setFocusVariantOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        score: event.payload.importance,\n        type: 'variant',\n      });\n    }\n  };\n\n  const higlassLocationChangeHandler = (event) => {\n    const [newXDomainStart, newXDomainEnd] = event.xDomain.map((absPos) =>\n      props.chromInfo.absToChr(absPos).slice(0, 2).join(':')\n    );\n    setXDomainStart(newXDomainStart);\n    setXDomainEnd(newXDomainEnd);\n  };\n  const higlassLocationChangeHandlerDb = debounce(\n    higlassLocationChangeHandler,\n    250\n  );\n\n  const higlassEnhancerZoomToXDomain = (event) => {\n    if (!higlassEnhancerApi.current) return;\n\n    const newViewConfig = deepClone(viewConfigEnhancer);\n\n    const xDomain = [...newViewConfig.views[0].initialXDomain];\n\n    if (!Number.isNaN(+numericalXDomainStart)) {\n      xDomain[0] = numericalXDomainStart;\n    }\n    if (!Number.isNaN(+numericalXDomainEnd)) {\n      xDomain[1] = numericalXDomainEnd;\n    }\n\n    higlassEnhancerApi.current.zoomTo(\n      'context',\n      xDomain[0],\n      xDomain[1],\n      xDomain[0],\n      xDomain[1],\n      2000\n    );\n  };\n\n  // Initializations\n  useEffect(\n    () => {\n      (async () => {\n        if (focusGene && !focusGeneOption) {\n          const r = await fetch(`${GENE_SEARCH_URL}&ac=${focusGene}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'gene';\n          focusGeneChangeHandler(results[0]);\n        }\n        if (focusVariant && !focusVariantOption) {\n          const r = await fetch(`${VARIANT_SEARCH_URL}&ac=${focusVariant}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'variant';\n          focusVariantChangeHandler(results[0]);\n        }\n      })();\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassEnhancerInitHandler = useCallback(\n    (higlassInstance) => {\n      if (higlassInstance !== null) {\n        higlassEnhancerApi.current = higlassInstance.api;\n        higlassInstance.api.on('click', higlassClickHandler);\n        higlassInstance.api.on(\n          'location',\n          higlassLocationChangeHandlerDb,\n          'context'\n        );\n      }\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassDnaAccessibilityInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassDnaAccessApi.current = higlassInstance.api;\n    }\n  }, []);\n\n  const higlassEnhancerHelpClickHandler = (event) => {\n    setHiglassEnhancerHelpAnchorEl(event.currentTarget);\n  };\n\n  const higlassEnhancerHelpCloseHandler = () => {\n    setHiglassEnhancerHelpAnchorEl(null);\n  };\n\n  const higlassDnaAccessHelpClickHandler = (event) => {\n    setHiglassDnaAccessHelpAnchorEl(event.currentTarget);\n  };\n\n  const higlassDnaAccessHelpCloseHandler = () => {\n    setHiglassDnaAccessHelpAnchorEl(null);\n  };\n\n  const higlassEnhancerHelpOpen = Boolean(higlassEnhancerHelpAnchorEl);\n  const higlassEnhancerHelpId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const higlassDnaAccessHelpOpen = Boolean(higlassDnaAccessHelpAnchorEl);\n  const higlassDnaAccessHelpId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const infoOpenHandler = () => {\n    setInfoOpen(true);\n  };\n\n  const infoCloseHandler = () => {\n    setInfoOpen(false);\n  };\n\n  const mergeSvgs = (enhancerSvg, dnaAccessSvg) => {\n    const [enhancerCoreSvg, enhancerWidth, enhancerHeight] = extractSvgCore(\n      enhancerSvg\n    );\n    const [dnaAccessCoreSvg, dnaAccessWidth, dnaAccessHeight] = extractSvgCore(\n      dnaAccessSvg\n    );\n\n    const actualEnhancerHeight = viewConfigEnhancer.views[0].tracks.top.reduce(\n      (height, track) => height + track.height,\n      0\n    );\n    const actualDnaAccessHeight = viewConfigDnaAccessibility.views[0].tracks.top.reduce(\n      (height, track) => height + track.height,\n      0\n    );\n    const padding = 24;\n\n    let mergedSvg = SVG_SKELETON;\n    mergedSvg = mergedSvg.replace(\n      '_WIDTH_',\n      enhancerWidth + dnaAccessWidth + padding\n    );\n    mergedSvg = mergedSvg.replace(\n      '_HEIGHT_',\n      Math.max(\n        enhancerHeight,\n        dnaAccessHeight,\n        actualEnhancerHeight,\n        actualDnaAccessHeight\n      )\n    );\n    mergedSvg = mergedSvg.replace('_ENHANCER_', enhancerCoreSvg);\n    mergedSvg = mergedSvg.replace('_DNA_ACCESS_X_', enhancerWidth + padding);\n    mergedSvg = mergedSvg.replace('_DNA_ACCESS_', dnaAccessCoreSvg);\n\n    return mergedSvg;\n  };\n\n  const higlassExportAsSvg = () => {\n    const mergedSvg = mergeSvgs(\n      higlassEnhancerApi.current.exportAsSvg(),\n      higlassDnaAccessApi.current.exportAsSvg()\n    );\n\n    download(\n      'abc-enhancers.svg',\n      new Blob([mergedSvg], { type: 'image/svg+xml' })\n    );\n  };\n\n  // Run on every render\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar\n          classes={{\n            root: classes.toolbarExtra,\n          }}\n        >\n          <FormControl fullWidth>\n            <SearchField\n              label={\n                <Grid container direction=\"row\" alignItems=\"center\">\n                  <SearchIcon fontSize=\"small\" />\n                  <span style={{ marginLeft: 3 }}>Gene or Variant</span>\n                </Grid>\n              }\n              searchUrl={[\n                { url: GENE_SEARCH_URL, type: 'gene' },\n                { url: VARIANT_SEARCH_URL, type: 'variant' },\n              ]}\n              onChange={focusGeneVariantChangeHandler}\n              value={focusGeneVariantOptions}\n              variant=\"filled\"\n              larger\n              fullWidth\n              multiple\n            />\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <Grid container direction=\"column\" className={classes.drawerGrid}>\n          <Grid item>\n            <ButtonBase className={classes.toolbar} style={{ width: '100%' }}>\n              <h1 className={classes.h1} onClick={infoOpenHandler}>\n                <Logo />\n              </h1>\n            </ButtonBase>\n            <Divider />\n          </Grid>\n          <Grid container item className={classes.grow} direction=\"column\">\n            <Grid item>\n              <Box m={1}>\n                <Box m={0}>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel htmlFor=\"x-domain-start\">\n                      Region Start\n                    </InputLabel>\n                    <OutlinedInput\n                      id=\"x-domain-start\"\n                      label=\"Region Start\"\n                      onChange={xDomainStartChangeHandler}\n                      value={xDomainStart}\n                    />\n                  </FormControl>\n                </Box>\n                <Box m={0}>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel htmlFor=\"x-domain-end\">Region End</InputLabel>\n                    <OutlinedInput\n                      id=\"x-domain-end\"\n                      label=\"Region End\"\n                      onChange={xDomainEndChangeHandler}\n                      value={xDomainEnd}\n                    />\n                  </FormControl>\n                </Box>\n                <Box m={0}>\n                  <Button\n                    variant=\"contained\"\n                    margin=\"dense\"\n                    onClick={higlassEnhancerZoomToXDomain}\n                    fullWidth\n                    disableElevation\n                  >\n                    Go\n                  </Button>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid item className={classes.settings}>\n              <Box m={0} className={classes.settingsContent}>\n                <Box m={1}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={hideUnfocused === 'true'}\n                        onChange={hideUnfocusedChangeHandler}\n                        name=\"hideUnfocused\"\n                      />\n                    }\n                    label=\"Hide unfocused\"\n                  />\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Variant y-scale</FormLabel>\n                    <RadioGroup\n                      aria-label=\"variantYScale\"\n                      name=\"variantYScale\"\n                      value={variantYScale}\n                      onChange={variantYScaleChangeHandler}\n                    >\n                      <FormControlLabel\n                        label=\"p-value\"\n                        control={<Radio size=\"small\" />}\n                        value=\"pValue\"\n                      />\n                      <FormControlLabel\n                        label=\"Posterior probability\"\n                        control={<Radio size=\"small\" />}\n                        value=\"posteriorProbability\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Matrix coloring</FormLabel>\n                    <RadioGroup\n                      aria-label=\"matrixColoring\"\n                      name=\"matrixColoring\"\n                      value={matrixColoring}\n                      onChange={matrixColoringChangeHandler}\n                    >\n                      <FormControlLabel\n                        label=\"Solid\"\n                        control={<Radio size=\"small\" />}\n                        value=\"solid\"\n                      />\n                      <FormControlLabel\n                        label=\"Number of predictions\"\n                        control={<Radio size=\"small\" />}\n                        value=\"frequency\"\n                      />\n                      <FormControlLabel\n                        label=\"Highest prediction score\"\n                        control={<Radio size=\"small\" />}\n                        value=\"highestImportance\"\n                      />\n                      <FormControlLabel\n                        label=\"Prediction score of the closest TSS interaction\"\n                        control={<Radio size=\"small\" />}\n                        value=\"closestImportance\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                      DNA accessibility labels\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"dnaAccessLabels\"\n                      name=\"dnaAccessLabels\"\n                      value={dnaAccessLabels}\n                      onChange={dnaAccessLabelsChangeHandler}\n                    >\n                      <FormControlLabel\n                        label=\"Indicator\"\n                        control={<Radio size=\"small\" />}\n                        value=\"indicator\"\n                      />\n                      <FormControlLabel\n                        label=\"Text\"\n                        control={<Radio size=\"small\" />}\n                        value=\"text\"\n                      />\n                      <FormControlLabel\n                        label=\"Hidden\"\n                        control={<Radio size=\"small\" />}\n                        value=\"hidden\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Divider />\n              <Box m={1}>\n                <Button\n                  variant=\"contained\"\n                  margin=\"dense\"\n                  onClick={higlassExportAsSvg}\n                  fullWidth\n                  disableElevation\n                >\n                  Export as SVG\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div className={classes.higlass}>\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassEnhancer}\n          >\n            <Grid item className={classes.higlassTitleBar}>\n              <Typography\n                align=\"center\"\n                className={classes.higlassTitleBarTitle}\n                noWrap\n              >\n                <strong>Predicted Enhancers</strong>\n              </Typography>\n              <IconButton\n                aria-label=\"help\"\n                aria-describedby={higlassEnhancerHelpId}\n                className={classes.higlassTitleBarHelp}\n                size=\"small\"\n                onClick={higlassEnhancerHelpClickHandler}\n              >\n                <HelpIcon fontSize=\"inherit\" />\n              </IconButton>\n              <Popover\n                id={higlassEnhancerHelpId}\n                open={higlassEnhancerHelpOpen}\n                anchorEl={higlassEnhancerHelpAnchorEl}\n                onClose={higlassEnhancerHelpCloseHandler}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <Typography className={classes.higlassTitleBarHelpPopeover}>\n                  This panel visualizes the predicted enhancers by sample type\n                  as a matrix-like track. Each rectangle representes an\n                  enhancer. Promoter regions are indicated by translucent light\n                  gray overlays.\n                </Typography>\n                <Typography className={classes.higlassTitleBarHelpPopeover}>\n                  {' '}\n                  You can filter enhancers via their target gene or by variant\n                  (the dot plot below the gene annotations). Click on a variant\n                  or gene to select it. Selections are shown in pink/red.\n                </Typography>\n              </Popover>\n            </Grid>\n            <Grid item className={classes.grow}>\n              <HiGlassComponent\n                ref={higlassEnhancerInitHandler}\n                viewConfig={viewConfigEnhancer}\n                options={{\n                  sizeMode: 'bounded',\n                  globalMousePosition: true,\n                }}\n              />\n            </Grid>\n            <Grid item className={classes.higlassEnhancerInfoBar}>\n              {focusGene && focusVariant && (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.pink}>■</span> Enhancers containing{' '}\n                  <em>{focusVariant}</em> and predicted to regulate{' '}\n                  <em>{focusGene}</em>\n                </Typography>\n              )}\n              {focusGene && !focusVariant && (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.pink}>■</span> Enhancers predicted to\n                  regulate <em>{focusGene}</em>\n                </Typography>\n              )}\n              {!focusGene && focusVariant && (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.pink}>■</span> Enhancers containing{' '}\n                  <em>{focusVariant}</em>\n                </Typography>\n              )}\n              {focusGene || focusVariant ? (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.gray}>■</span> All other predicted\n                  enhancers\n                </Typography>\n              ) : (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.black}>■</span> All predicted\n                  enhancers\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n          <div className={classes.higlassSeparator} />\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassDnaAccessibility}\n          >\n            <Grid item className={classes.higlassTitleBar}>\n              <Typography\n                align=\"center\"\n                className={classes.higlassTitleBarTitle}\n                noWrap\n              >\n                <strong>DNA Accessibility</strong>\n              </Typography>\n              <IconButton\n                aria-label=\"help\"\n                aria-describedby={higlassDnaAccessHelpId}\n                className={classes.higlassTitleBarHelp}\n                size=\"small\"\n                onClick={higlassDnaAccessHelpClickHandler}\n              >\n                <HelpIcon fontSize=\"inherit\" />\n              </IconButton>\n              <Popover\n                id={higlassDnaAccessHelpId}\n                open={higlassDnaAccessHelpOpen}\n                anchorEl={higlassDnaAccessHelpAnchorEl}\n                onClose={higlassDnaAccessHelpCloseHandler}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <Typography className={classes.higlassTitleBarHelpPopeover}>\n                  This panel visualizes the DNA accessibility of all 131\n                  samples. Each track is individually normalized. Mouse over a\n                  track to see the underlying value. To focus on a specific\n                  locus specify a focus variant.\n                </Typography>\n              </Popover>\n            </Grid>\n            <Grid item className={classes.grow}>\n              <HiGlassComponent\n                ref={higlassDnaAccessibilityInitHandler}\n                viewConfig={viewConfigDnaAccessibility}\n                options={{\n                  sizeMode: 'scroll',\n                  pixelPreciseMarginPadding: true,\n                  containerPaddingX: 0,\n                  containerPaddingY: 0,\n                  viewMarginTop: 0,\n                  viewMarginBottom: 0,\n                  viewMarginLeft: 0,\n                  viewMarginRight: 0,\n                  viewPaddingTop: 0,\n                  viewPaddingBottom: 0,\n                  viewPaddingLeft: 0,\n                  viewPaddingRight: 16,\n                  globalMousePosition: true,\n                }}\n              />\n            </Grid>\n            <Grid item className={classes.higlassDnaAccessibilityInfoBar}>\n              <span>├</span>\n              <Typography\n                align=\"center\"\n                className={classes.higlassTitleBarTitle}\n                noWrap\n              >\n                {toFixed(dnaAccessibilityRegionSize, 1)}{' '}\n                <abbr title=\"kilo base pairs\">kbp</abbr>\n              </Typography>\n              <span>┤</span>\n            </Grid>\n          </Grid>\n        </div>\n      </main>\n      <Modal\n        aria-labelledby=\"info-title\"\n        aria-describedby=\"info-description\"\n        className={classes.modal}\n        open={infoOpen}\n        onClose={infoCloseHandler}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 250,\n        }}\n      >\n        <Fade in={infoOpen}>\n          <div className={classes.paper}>\n            <Typography\n              id=\"info-title\"\n              align=\"center\"\n              variant=\"h5\"\n              component=\"h2\"\n              noWrap\n            >\n              <Logo\n                styles={{\n                  width: 'auto',\n                }}\n              />\n            </Typography>\n            <p id=\"info-description\">\n              This web application visualizes genome-wide enhancer-gene\n              interactions that were predicted with the{' '}\n              <em>Activity-By-Contact</em> (ABC) model. You can interactively\n              browse the entire human genome and filter enhancers by gene and\n              containing variant.\n            </p>\n            <p>\n              For information regarding the ABC model please refer to our\n              initial publication:{' '}\n              <a\n                href=\"https://www.nature.com/articles/s41588-019-0538-0\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Fulco et al., Activity-by-contact model of enhancer–promoter\n                regulation from thousands of CRISPR perturbations,{' '}\n                <em>Nature Genetics</em> (2019)\n              </a>\n              .\n            </p>\n            <Typography align=\"center\">\n              <Button\n                className={classes.startExploring}\n                onClick={infoCloseHandler}\n                variant=\"contained\"\n                primary\n                disableElevation\n              >\n                Start Exploring!\n              </Button>\n            </Typography>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Viewer;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport Viewer from './Viewer';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n    secondary: {\n      main: '#000',\n    },\n  },\n});\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const AppViewer = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(Viewer);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <AppViewer chromInfo={chromInfo} />\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createAnnotationOverlayMetaTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  // Services\n  const { pubSub } = HGC.services;\n\n  class AnnotationOverlayMetaTrack {\n    constructor(context, options) {\n      const { definition, getTrackObject, onNewTilesLoaded: animate } = context;\n\n      this.animate = animate;\n      this.options = options;\n\n      this.overlaysTrack = getTrackObject(definition.overlaysTrack);\n\n      if (!this.overlaysTrack) {\n        console.warn(\n          `Overlays track (uid: ${definition.overlaysTrack}) not found`\n        );\n        return;\n      }\n\n      this.annotationTrackIds = new Set();\n      this.annotationTracks = definition.options.annotationTracks\n        .map((uid) => {\n          const track = getTrackObject(uid);\n\n          if (!track) {\n            console.warn(`Child track (uid: ${uid}) not found`);\n          } else {\n            this.annotationTrackIds.add(track.uuid);\n          }\n\n          return track;\n        })\n        .filter((track) => track);\n\n      this.annotationDrawnHandlerBound = this.annotationDrawnHandler.bind(this);\n      this.tilesDrawnEndHandlerBound = this.tilesDrawnEndHandler.bind(this);\n\n      this.drawnAnnotations = new Map();\n      this.tracksDrawingTiles = new Set();\n\n      this.pubSubs = [];\n\n      // Augment annotation tracks\n      this.annotationTracks.forEach((track) => {\n        track.subscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n        track.subscribe('tilesDrawn', this.tilesDrawnEndHandlerBound);\n      });\n    }\n\n    /**\n     * Handles annotation drawn events\n     *\n     * @param  {String}  event.uid  UID of the view that triggered the event.\n     * @param  {Array}  event.viewPos  View position (i.e., [x, y, width, height])\n     *   of the drawn annotation on the screen.\n     * @param  {Array}  event.dataPos  Data position of the drawn annotation. For\n     *   example base pairs (Hi-C), or pixels (gigapixel images), or lng-lat\n     *   (geo json).\n     */\n    annotationDrawnHandler({ xStartAbs, xEndAbs, data }) {\n      this.drawnAnnotations.set(data.uid, [xStartAbs, xEndAbs]);\n    }\n\n    /**\n     * Remove this track.\n     */\n    remove() {\n      this.pubSubs.forEach(pubSub.unsubscribe);\n      this.pubSubs = undefined;\n      this.annotationTracks.forEach((track) => {\n        track.unsubscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n    }\n\n    tilesDrawnEndHandler({ uuid }) {\n      if (!this.annotationTrackIds.has(uuid)) return;\n\n      this.tracksDrawingTiles.add(uuid);\n\n      if (!(this.tracksDrawingTiles.size % this.annotationTracks.length)) {\n        this.updateOverlays();\n      }\n    }\n\n    updateOverlays() {\n      this.overlaysTrack.options.extent = Array.from(\n        this.drawnAnnotations.values()\n      );\n      this.overlaysTrack.draw();\n      this.tracksDrawingTiles.clear();\n    }\n  }\n\n  return new AnnotationOverlayMetaTrack(...args);\n}\n\ncreateAnnotationOverlayMetaTrack.config = {\n  type: 'annotation-overlay',\n  availableOptions: ['annotationTracks'],\n  defaultOptions: {\n    annotationTracks: [],\n  },\n};\n\nexport default createAnnotationOverlayMetaTrack;\n","import {\n  identity,\n  maxNan,\n  maxVector,\n  meanNan,\n  minNan,\n  sumNan,\n} from '@flekschas/utils';\nimport { line } from 'd3-shape';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_COLOR_MAP_DARK,\n} from './constants';\n\nconst FLOAT_BYTES = Float32Array.BYTES_PER_ELEMENT;\n\nconst VS = `precision mediump float;\n\n  attribute vec2 aPrevPosition;\n  attribute vec2 aCurrPosition;\n  attribute vec2 aNextPosition;\n  attribute float aOffsetSign;\n  attribute float aColorIndex;\n\n  uniform sampler2D uAreaColorTex;\n  uniform float uAreaColorTexRes;\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n\n  uniform vec4 uLineColor;\n  uniform vec4 uNaNColor;\n  uniform float uWidth;\n  uniform int uMiter;\n\n  varying vec4 vColor;\n\n  void main(void)\n  {\n    mat3 model = projectionMatrix * translationMatrix;\n\n    if (aColorIndex <= -0.5) {\n      // Render line\n      vColor = vec4(uLineColor.rgb, 1.0);\n\n      vec4 prevGlPos = vec4((model * vec3(aPrevPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 currGlPos = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 nextGlPos = vec4((model * vec3(aNextPosition, 1.0)).xy, 0.0, 1.0);\n\n      // Calculate the direction\n      vec2 dir = vec2(0.0);\n\n      if (currGlPos == prevGlPos) {\n        // start point uses (next - current)\n        dir = normalize(nextGlPos.xy - currGlPos.xy);\n      }\n      else if (currGlPos == nextGlPos) {\n        // end point uses (current - previous)\n        dir = normalize(currGlPos.xy - prevGlPos.xy);\n      }\n      else {\n        // somewhere in middle, needs a join:\n        // get directions from (C - B) and (B - A)\n        vec2 dirA = normalize((currGlPos.xy - prevGlPos.xy));\n        if (uMiter == 1) {\n          vec2 dirB = normalize((nextGlPos.xy - currGlPos.xy));\n          // now compute the miter join normal and length\n          vec2 tangent = normalize(dirA + dirB);\n          vec2 perp = vec2(-dirA.y, dirA.x);\n          vec2 miter = vec2(-tangent.y, tangent.x);\n          dir = tangent;\n        } else {\n          dir = dirA;\n        }\n      }\n\n      float width = (projectionMatrix * vec3(uWidth, 0.0, 0.0)).x / 2.0;\n\n      vec2 normal = vec2(-dir.y, dir.x) * width;\n      // normal.x /= aspectRatio;\n      vec4 offset = vec4(normal * aOffsetSign, 0.0, 0.0);\n      gl_Position = currGlPos + offset;\n    } else {\n      // Render area\n      float colorRowIndex = aColorIndex / uAreaColorTexRes;\n\n      vec2 colorTexIndex = vec2(\n        (aColorIndex / uAreaColorTexRes) - colorRowIndex,\n        colorRowIndex / uAreaColorTexRes\n      );\n      vColor = texture2D(uAreaColorTex, colorTexIndex);\n\n      gl_Position = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n    }\n  }\n`;\n\nconst FS = `precision mediump float;\n\n  varying vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`;\n\nconst TILE_SIZE = 256;\n\nconst COLORMAP_GRAYS = Array(127)\n  .fill()\n  .map((x, i) => {\n    const gray = (1 - i / 127) * 0.5 + 0.5;\n    return [gray, gray, gray, 1];\n  });\n\nconst getMax = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxValue, tile) => Math.max(maxValue, tile.tileData.maxNonZero),\n    -Infinity\n  );\n\nconst getNumRows = (fetchedTiles) =>\n  Object.values(fetchedTiles)[0].tileData.coarseShape[0];\n\nconst getRowMaxs = (fetchedTiles) =>\n  maxVector(\n    Object.values(fetchedTiles).map((tile) => tile.tileData.maxValueByRow)\n  );\n\nconst scaleGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getNumPointsPerRow = (numRows, positions, markArea) =>\n  positions.length / numRows / 4 / (1 + markArea) - 2;\n\nconst createRidgePlotTrack = function createRidgePlotTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { format } = HGC.libraries.d3Format;\n  const { scaleLinear } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const createColorTexture = (colors) => {\n    const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n    const rgba = new Float32Array(colorTexRes ** 2 * 4);\n    colors.forEach((color, i) => {\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4] = color[0]; // r\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 1] = color[1]; // g\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 2] = color[2]; // b\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 3] = color[3]; // a\n    });\n\n    return [\n      PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes),\n      colorTexRes,\n    ];\n  };\n\n  class RidgePlotTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      this.coarsifyTileValues(tile);\n    }\n\n    destroyTile() {}\n\n    binsPerTile() {\n      return this.tilesetInfo.bins_per_dimension || TILE_SIZE;\n    }\n\n    /**\n     * From HeatmapTiledPixiTrack\n     */\n    getTilePosAndDimensions(zoomLevel, tilePos, binsPerTileIn) {\n      const binsPerTile = binsPerTileIn || this.binsPerTile();\n\n      if (this.tilesetInfo.resolutions) {\n        const sortedResolutions = this.tilesetInfo.resolutions\n          .map((x) => +x)\n          .sort((a, b) => b - a);\n\n        const chosenResolution = sortedResolutions[zoomLevel];\n\n        const tileWidth = chosenResolution * binsPerTile;\n        const tileHeight = tileWidth;\n\n        const tileX = chosenResolution * binsPerTile * tilePos[0];\n        const tileY = chosenResolution * binsPerTile * tilePos[1];\n\n        return {\n          tileX,\n          tileY,\n          tileWidth,\n          tileHeight,\n        };\n      }\n\n      const xTilePos = tilePos[0];\n      const yTilePos = tilePos[1];\n\n      const minX = this.tilesetInfo.min_pos[0];\n      const minY = this.options.reverseYAxis\n        ? -this.tilesetInfo.max_pos[1]\n        : this.tilesetInfo.min_pos[1];\n\n      const tileWidth = this.tilesetInfo.max_width / 2 ** zoomLevel;\n      const tileHeight = this.tilesetInfo.max_width / 2 ** zoomLevel;\n\n      const tileX = minX + xTilePos * tileWidth;\n      const tileY = minY + yTilePos * tileHeight;\n\n      return {\n        tileX,\n        tileY,\n        tileWidth,\n        tileHeight,\n      };\n    }\n\n    updateOptions() {\n      this.selectRowsAggregationMode =\n        this.options.selectRowsAggregationMode || 'mean';\n\n      switch (this.selectRowsAggregationMode) {\n        case 'max':\n          this.selectRowsAggregationFn = maxNan;\n          break;\n\n        case 'min':\n          this.selectRowsAggregationFn = minNan;\n          break;\n\n        case 'sum':\n          this.selectRowsAggregationFn = sumNan;\n          break;\n\n        case 'mean':\n        default:\n          this.selectRowsAggregationFn = meanNan;\n          break;\n      }\n\n      this.markArea = !!this.options.markArea;\n\n      this.markAreaColor = 'grays';\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      [this.markColorTex, this.markColorTexRes] = createColorTexture([\n        ...COLORMAP_GRAYS,\n      ]);\n\n      this.markNumColors = COLORMAP_GRAYS.length;\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      // Number of line segments\n      const oldMarkResolution = this.markResolution;\n      this.markResolution = Math.max(\n        1,\n        Math.min(TILE_SIZE, this.options.markResolution || TILE_SIZE / 4)\n      );\n      // Given 100 (rows) x 256 (tile size). At a resolution of 1 we need:\n      // 100 x (256 / 4) x 4 = 25,600 vertices\n\n      const oldRowHeight = this.rowHeight;\n      this.rowHeight = Number.isNaN(+this.options.rowHeight)\n        ? 'auto'\n        : +this.options.rowHeight;\n\n      const oldRowPadding = this.rowPadding;\n      this.rowPadding =\n        this.rowHeight === 'auto' ? 0 : this.options.rowPadding || 0;\n\n      const oldRowNormalization = this.rowNormalization;\n      this.rowNormalization = this.options.rowNormalization || false;\n\n      const oldRowSelections = this.rowSelections;\n      this.rowSelections =\n        this.options.rowSelections || this.rowSelections || [];\n\n      if (\n        oldMarkResolution !== this.markResolution ||\n        oldRowSelections !== this.rowSelections\n      ) {\n        this.updateTiles();\n      }\n\n      if (\n        oldRowHeight !== this.rowHeight ||\n        oldRowPadding !== this.rowPadding ||\n        oldRowNormalization !== this.rowNormalization\n      ) {\n        this.updateScales();\n      }\n\n      const oldShowRowLabels = this.showRowLabels;\n      this.showRowLabels = this.options.showRowLabels;\n\n      if (oldShowRowLabels !== this.showRowLabels) {\n        this.updateRowLabels(oldShowRowLabels);\n        this.drawLabel();\n      }\n\n      this.rowLabelAlign = this.options.rowLabelAlign || 'left';\n      this.rowLabelSize = this.options.rowLabelSize || 12;\n\n      this.rowCategories = this.options.rowCategories || {};\n      this.rowIdToCategory = (id) => id.substring(0, id.length - 14);\n      this.rowIdToCategory = this.options.rowIdToCategory\n        ? (id) =>\n            id[this.options.rowIdToCategory.fn](\n              ...this.options.rowIdToCategory.args\n            )\n        : identity;\n    }\n\n    removeRowLabels() {\n      while (this.pAxis.children.length) {\n        this.pAxis.removeChildAt(0);\n      }\n      if (this.rowLabels) {\n        this.rowLabels.forEach((rowLabel) => {\n          rowLabel.destroy();\n        });\n        this.rowLabels = undefined;\n      }\n    }\n\n    updateRowLabels(oldShowRowLabels) {\n      if (!this.tilesetInfo || !this.tilesetInfo.row_infos) return;\n\n      const labels = this.rowSelections.length\n        ? this.rowSelections.map((rowIndex) =>\n            this.tilesetInfo.row_infos[rowIndex] === undefined\n              ? '?'\n              : this.rowIdToCategory(this.tilesetInfo.row_infos[rowIndex].id)\n          )\n        : this.tilesetInfo.row_infos.map(({ id }) => this.rowIdToCategory(id));\n\n      this.removeRowLabels();\n\n      if (this.showRowLabels === 'indicator') {\n        this.rowLabels = labels.map((label) => {\n          const indicator = new PIXI.Sprite(PIXI.Texture.WHITE);\n          indicator.width = this.rowLabelSize / 2;\n          indicator.height = this.rowLabelSize;\n          indicator.tint = this.rowCategories[label]\n            ? HGC.utils.colorToHex(\n                this.rowCategories[label].axisLabelColor ||\n                  DEFAULT_COLOR_MAP[\n                    this.rowCategories[label].index % DEFAULT_COLOR_MAP.length\n                  ]\n              )\n            : 0x808080;\n          return indicator;\n        });\n      } else if (this.showRowLabels) {\n        this.rowLabels = labels.map(\n          (label) =>\n            new PIXI.Text(label, {\n              fontSize: this.rowLabelSize,\n              align: this.rowLabelAlign === 'right' ? 'right' : 'left',\n              fill: this.rowCategories[label]\n                ? HGC.utils.colorToHex(\n                    this.rowCategories[label].axisLabelColor ||\n                      DEFAULT_COLOR_MAP_DARK[\n                        this.rowCategories[label].index %\n                          DEFAULT_COLOR_MAP_DARK.length\n                      ]\n                  )\n                : 0x808080,\n            })\n        );\n      }\n    }\n\n    drawLabel() {\n      if (!this.showRowLabels) {\n        if (this.rowLabels) {\n          while (this.pAxis.children.length) {\n            this.pAxis.removeChildAt(0);\n          }\n        }\n        return;\n      }\n      if (this.showRowLabels && !this.rowLabels) this.updateRowLabels();\n      if (!this.rowLabels) return;\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const [, rowStepHeight] = this.getRowHeight();\n      const rowStepYCenter = rowStepHeight / 2;\n\n      this.rowLabels.forEach((label, i) => {\n        label.x = xLabelOffset;\n        label.y = yStart - this.rowPadding + rowStepYCenter;\n        label.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        label.anchor.y = 0.5;\n\n        yStart += rowStepHeight;\n\n        this.pAxis.addChild(label);\n      });\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    coarsifyTileValues(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const [numRows] = tile.tileData.shape;\n      const binSizePx = Math.floor(TILE_SIZE / this.markResolution);\n      const binSizeBp = tileWidth / this.markResolution;\n      const binSizeBpHalf = binSizeBp / 2;\n\n      // Determine bin boundaries\n      tile.tileData.binXPos = Array(this.markResolution).fill();\n      for (let i = 0; i <= this.markResolution; i++) {\n        tile.tileData.binXPos[i] = tileX + binSizeBp * i + binSizeBpHalf;\n      }\n\n      // 1. Coarsify the dense matrix according to `this.markResolution`\n      tile.tileData.valuesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      tile.tileData.maxValueByRow = Array(numRows).fill(-Infinity);\n\n      for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < TILE_SIZE; j += binSizePx) {\n          const meanValue = meanNan(\n            tile.tileData.dense.subarray(\n              i * TILE_SIZE + j,\n              i * TILE_SIZE + j + binSizePx\n            )\n          );\n          tile.tileData.valuesByRow[i].push(meanValue);\n          tile.tileData.maxValueByRow[i] =\n            meanValue > tile.tileData.maxValueByRow[i]\n              ? meanValue\n              : tile.tileData.maxValueByRow[i];\n        }\n      }\n\n      // 2. Sort rows\n      if (this.rowSelections.length) {\n        tile.tileData.valuesByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.valuesByRow[rowIdx])\n          .filter(identity);\n        tile.tileData.maxValueByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.maxValueByRow[rowIdx])\n          .filter(identity);\n      }\n\n      // 3. Set out shape\n      tile.tileData.coarseShape = [\n        tile.tileData.valuesByRow.length,\n        this.markResolution,\n      ];\n    }\n\n    updateTiles() {\n      Object.values(this.fetchedTiles).forEach(\n        this.coarsifyTileValues.bind(this)\n      );\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const numRows = getNumRows(fetchedTiles);\n\n      const [rowHeight] = this.getRowHeight();\n\n      const actualTrackHeight = this.getTrackHeight(numRows, rowHeight);\n\n      const globalMax = getMax(this.fetchedTiles);\n\n      this.valueScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([rowHeight, 0]);\n      this.colorIndexScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([0, this.markNumColors])\n        .clamp(true);\n\n      if (this.rowNormalization) {\n        const rowMaxs = getRowMaxs(this.fetchedTiles);\n        this.rowValueScales = {};\n        this.rowColorIndexScales = {};\n        for (let i = 0; i < numRows; i++) {\n          this.rowValueScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([rowHeight, 0]);\n          this.rowColorIndexScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([0, this.markNumColors])\n            .clamp(true);\n        }\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.rowValueScales[row](value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.rowColorIndexScales[row](value);\n      } else {\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.valueScale(value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.colorIndexScale(value);\n      }\n\n      this.rowScale = scaleLinear()\n        .domain([0, numRows])\n        .range([0, actualTrackHeight + this.rowPadding]);\n    }\n\n    tilesToData(tiles, { markArea, maxRows = Infinity, rowHeight } = {}) {\n      if (!tiles.length) return [];\n\n      const numRows = Math.min(maxRows, getNumRows(tiles));\n\n      const positionsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const colorIndicesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const offsetSignsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n\n      tiles.forEach((tile) => {\n        tile.tileData.valuesByRow.forEach((values, i) => {\n          if (i >= maxRows) return;\n          values.forEach((value, j) => {\n            const x = this._xScale(tile.tileData.binXPos[j]);\n            const yStart = this.rowScale(i);\n            const y = yStart + this.valueScaleByRow(value, i);\n            // We're duplicating the point as for every point on the line we\n            // need two x,y vertices to render triangles.\n            positionsByRow[i].push(x, y, x, y);\n            colorIndicesByRow[i].push(-1, -1); // -1 refers to the line color\n            offsetSignsByRow[i].push(1, -1);\n\n            if (markArea) {\n              positionsByRow[i].push(x, y, x, yStart + rowHeight);\n              colorIndicesByRow[i].push(this.colorIndexScaleByRow(value, i), 0);\n              offsetSignsByRow[i].push(0, 0);\n            }\n          });\n        });\n      });\n\n      const size2d = markArea ? 8 : 4;\n      const size1d = markArea ? 4 : 2;\n\n      // For each row, duplicate the first and last point\n      for (let i = 0; i < numRows; i++) {\n        // Add first point pair to the beginning of the array\n        positionsByRow[i].unshift(...positionsByRow[i].slice(0, size2d));\n\n        // The very first duplicated point positions do not matter as\n        // we offset the buffer reading. Subsequent dupliations need to be\n        // taken into account though.\n        if (i > 0) {\n          colorIndicesByRow[i].unshift(\n            ...colorIndicesByRow[i].slice(0, size1d)\n          );\n          offsetSignsByRow[i].unshift(...offsetSignsByRow[i].slice(0, size1d));\n        }\n\n        // Add last point pair to the end of the array\n        positionsByRow[i].push(...positionsByRow[i].slice(-size2d));\n        colorIndicesByRow[i].push(...colorIndicesByRow[i].slice(-size1d));\n        offsetSignsByRow[i].push(...offsetSignsByRow[i].slice(-size1d));\n      }\n\n      return [\n        new Float32Array(positionsByRow.flatMap(identity)),\n        new Float32Array(colorIndicesByRow.flatMap(identity)),\n        new Float32Array(offsetSignsByRow.flatMap(identity)),\n      ];\n    }\n\n    toLineIndices(numRows, numPointsPerRow, markArea) {\n      const verticesPerLine = markArea ? 12 : 6;\n      const verticesPerPoint = markArea ? 4 : 2;\n      const indices = new Uint32Array(\n        (numPointsPerRow - 1) * numRows * verticesPerLine\n      );\n      let k = 0;\n\n      if (markArea) {\n        // Draw a line and area\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p1c = p1a + 2;\n            const p1d = p1a + 3;\n            const p2a = p1a + 4;\n            const p2b = p1a + 5;\n            const p2c = p1a + 6;\n            const p2d = p1a + 7;\n\n            const indexOffset = k * verticesPerLine;\n            // Area\n            indices[indexOffset] = p1c;\n            indices[indexOffset + 1] = p1d;\n            indices[indexOffset + 2] = p2c;\n            indices[indexOffset + 3] = p2c;\n            indices[indexOffset + 4] = p1d;\n            indices[indexOffset + 5] = p2d;\n            // Line\n            indices[indexOffset + 6] = p1a;\n            indices[indexOffset + 7] = p1b;\n            indices[indexOffset + 8] = p2a;\n            indices[indexOffset + 9] = p2a;\n            indices[indexOffset + 10] = p1b;\n            indices[indexOffset + 11] = p2b;\n\n            k++;\n          }\n        }\n      } else {\n        // Just draw a line\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p2a = p1a + 2;\n            const p2b = p1a + 3;\n\n            const indexOffset = k * verticesPerLine;\n            indices[indexOffset] = p1a;\n            indices[indexOffset + 1] = p1b;\n            indices[indexOffset + 2] = p2a;\n            indices[indexOffset + 3] = p2a;\n            indices[indexOffset + 4] = p1b;\n            indices[indexOffset + 5] = p2b;\n\n            k++;\n          }\n        }\n      }\n\n      return indices;\n    }\n\n    getRowHeight(numRows) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? [\n            Math.floor(visibleTrackHeight / numRows),\n            Math.floor(visibleTrackHeight / numRows),\n          ]\n        : [this.rowHeight, this.rowHeight + this.rowPadding];\n    }\n\n    getTrackHeight(numRows, rowHeight) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? visibleTrackHeight\n        : rowHeight * numRows + this.rowPadding * (numRows - 1);\n    }\n\n    renderLines() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n\n      const [positions, colorIndices, offsetSigns] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const numPointsPerRow = getNumPointsPerRow(\n        numRows,\n        positions,\n        this.markArea\n      );\n\n      const indices = this.toLineIndices(\n        numRows,\n        numPointsPerRow,\n        this.markArea\n      );\n\n      const uniforms = new PIXI.UniformGroup({\n        uLineColor: [...this.markColorRgbNorm, 1.0],\n        uNaNColor: [1.0, 1.0, 1.0, 1.0],\n        uAreaColorTex: this.markColorTex,\n        uAreaColorTexRes: this.markColorTexRes,\n        uWidth: 0.25,\n        uMiter: 1,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      const numCoords = 2;\n      const numVerticesPoint = this.markArea ? 4 : 2;\n      geometry.addAttribute(\n        'aPrevPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        0 // offset/start\n      );\n      geometry.addAttribute(\n        'aCurrPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        // note that each point is duplicated, hence we need to skip over the first two\n        FLOAT_BYTES * numCoords * numVerticesPoint // offset/start\n      );\n      geometry.addAttribute(\n        'aNextPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * 2, // stride\n        // note that each point is duplicated, hence we need to skip over the first four\n        FLOAT_BYTES * numCoords * numVerticesPoint * 2 // offset/start\n      );\n      geometry.addAttribute('aOffsetSign', offsetSigns, 1);\n      geometry.addAttribute('aColorIndex', colorIndices, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.lineGraphics) {\n        this.pMain.removeChild(this.lineGraphics);\n        this.lineGraphics.destroy();\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.lineGraphics = newGraphics;\n\n      scaleGraphics(this.lineGraphics, this._xScale, this.drawnAtScale);\n\n      this.draw();\n      this.animate();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.renderLines();\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.lineGraphics) {\n        scaleGraphics(this.lineGraphics, newXScale, this.drawnAtScale);\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Return the data currently visible at position X and Y\n     *\n     * @param {Number} trackX: The x position relative to the track's start and end\n     * @param {Number} trakcY: The y position relative to the track's start and end\n     */\n    getVisibleData(trackX, trackY) {\n      if (!this.hasFetchedTiles()) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n\n      const numRows = getNumRows(this.fetchedTiles);\n      const [, rowStepHeight] = this.getRowHeight(numRows);\n\n      // the width of the tile in base pairs\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tilePos = this._xScale.invert(trackX) / tileWidth;\n\n      // the position of query within the tile\n      let posInTileX =\n        this.tilesetInfo.tile_size * (tilePos - Math.floor(tilePos));\n      // const posInTileYNormalized = trackY / this.dimensions[1];\n      // The first track doesn't apply padding so we have to shift padding\n      // to the mouse position once\n      const rowIndex = Math.floor(\n        Math.max(0, (trackY + this.rowPadding) / rowStepHeight)\n      );\n      const rowSelection = this.rowSelections[rowIndex];\n      const tileId = this.tileToLocalId([zoomLevel, Math.floor(tilePos)]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      let text = '';\n      let value = '<em>unknown</em>';\n\n      if (fetchedTile) {\n        if (!this.tilesetInfo.shape) {\n          posInTileX =\n            fetchedTile.tileData.dense.length * (tilePos - Math.floor(tilePos));\n        }\n\n        let index = null;\n        if (this.tilesetInfo.shape) {\n          // Accomodate data from vector sources\n          if (\n            Array.isArray(rowSelection) &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            // Need to aggregate, so `index` will actually be an array.\n            index = rowSelection.map(\n              (rowI) =>\n                this.tilesetInfo.shape[0] * rowI + Math.floor(posInTileX)\n            );\n          } else if (\n            rowSelection &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            index =\n              this.tilesetInfo.shape[0] * rowSelection + Math.floor(posInTileX);\n          } else {\n            // No need to aggregate, `index` will contain a single item.\n            index =\n              this.tilesetInfo.shape[0] * rowIndex + Math.floor(posInTileX);\n          }\n        } else {\n          index =\n            fetchedTile.tileData.dense.length * rowIndex +\n            Math.floor(posInTileX);\n        }\n\n        if (Array.isArray(index)) {\n          const values = index.map((i) => fetchedTile.tileData.dense[i]);\n          value = format('.3f')(this.selectRowsAggregationFn(values));\n          text = value;\n\n          text += '<br/>';\n          text += `${index.length}-item ${this.options.selectRowsAggregationMode}`;\n        } else {\n          value = format('.3f')(fetchedTile.tileData.dense[index]);\n          text = value;\n\n          if (Array.isArray(rowSelection)) {\n            value += '<br/>';\n            value += `${rowSelection.length}-item ${this.options.selectRowsAggregationMode}`;\n          }\n        }\n      }\n\n      // add information about the row\n      if (this.tilesetInfo.row_infos) {\n        let rowInfo = '';\n\n        if (rowSelection !== undefined) {\n          rowInfo = this.tilesetInfo.row_infos[rowSelection];\n        } else if (rowIndex) {\n          rowInfo = this.tilesetInfo.row_infos[rowIndex];\n        }\n\n        const label =\n          typeof rowInfo === 'object'\n            ? this.rowIdToCategory(rowInfo.id)\n            : rowInfo;\n\n        const color = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_DARK[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_DARK.length\n            ]\n          : '#666666';\n\n        const background = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_LIGHT[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_LIGHT.length\n            ]\n          : '#ffffff';\n\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${background}\"><strong style=\"color: ${color};\">${label}:</strong> ${value}</div>`;\n      }\n\n      return text;\n    }\n\n    /**\n     * Get some information to display when the mouse is over this\n     * track\n     *\n     * @param {Number} trackX: the x position of the mouse over the track\n     * @param {Number} trackY: the y position of the mouse over the track\n     *\n     * @return {string}: A HTML string containing the information to display\n     *\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      return this.getVisibleData(trackX, trackY);\n    }\n\n    exportSVG() {\n      const svgns = 'http://www.w3.org/2000/svg';\n\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'ridge-plot-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]}, ${this.position[1]})`\n      );\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n      const stride = this.markArea ? 8 : 4;\n\n      const [positions] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const createLine = line()\n        .x((d) => d[0])\n        .y((d) => d[1]);\n\n      const posPerRow = positions.length / numRows;\n\n      const posToPoints = (pos) => {\n        const arr = [];\n        const start = stride;\n        const end = pos.length - stride;\n\n        for (let i = start; i < end; i += stride) {\n          arr.push([pos[i], pos[i + 1]]);\n        }\n\n        return arr;\n      };\n\n      let fill = this.markArea\n        ? (this.options.colorRange && this.options.colorRange[0]) || '#ffffff'\n        : 'none';\n      if (this.markArea && this.options.colorRange) {\n        const numColors = this.options.colorRange.length;\n        const defs = document.createElementNS(svgns, 'defs');\n        const linearGradient = document.createElementNS(\n          svgns,\n          'linearGradient'\n        );\n        linearGradient.setAttribute('id', 'RidgePlotGradient');\n        linearGradient.setAttribute('x1', '0');\n        linearGradient.setAttribute('y1', '1');\n        linearGradient.setAttribute('x2', '0');\n        linearGradient.setAttribute('y2', '0');\n        this.options.colorRange.forEach((color, i) => {\n          const stop = document.createElementNS(svgns, 'stop');\n          stop.setAttribute(\n            'offset',\n            `${Math.round((i / (numColors - 1)) * 100)}%`\n          );\n          stop.setAttribute('stop-color', color);\n          linearGradient.appendChild(stop);\n        });\n        defs.appendChild(linearGradient);\n        base.insertBefore(defs, base.firstChild);\n        fill = 'url(#RidgePlotGradient)';\n      }\n\n      for (let i = 0; i < numRows; i++) {\n        const arr = posToPoints(\n          positions.subarray(i * posPerRow, (i + 1) * posPerRow)\n        );\n\n        const l = document.createElement('path');\n        let d = createLine(arr);\n\n        const y0 = this.rowScale(i) + this.valueScaleByRow(0, i);\n\n        // We extend the line a little to the left and right and anchor them at\n        // y = 0 to avoid weird glitches with the fill.\n        const firstComma = d.indexOf(',');\n        const firstX = +d.substring(1, firstComma);\n        const firstY = +d.substring(firstComma + 1, d.indexOf('L'));\n        d = `M${firstX - 1},${y0}L${firstX - 1},${firstY}L${d.substring(1)}`;\n        const lastComma = d.lastIndexOf(',');\n        const lastX = +d.substring(d.lastIndexOf('L') + 1, lastComma);\n        const lastY = +d.substring(lastComma + 1);\n        d += `L${lastX + 1},${lastY}L${lastX + 1},${y0}`;\n\n        l.setAttribute('d', d);\n        l.setAttribute('fill', fill);\n        l.setAttribute('stroke', this.options.markColor || 'black');\n        l.setAttribute('stroke-width', (this.options.markSize || 2) / 8);\n\n        output.appendChild(l);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new RidgePlotTrack(...args);\n};\n\ncreateRidgePlotTrack.config = {\n  type: 'ridge-plot',\n  datatype: ['multivec'],\n  orientation: '1d',\n  name: 'RidgePlot',\n};\n\nexport default createRidgePlotTrack;\n","import createIntervalTree from 'interval-tree-1d';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n  EPS,\n} from './constants';\nimport { contains, dashedXLineTo, toFixed } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aHighlight;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main(void)\n  {\n    vHighlight = aHighlight;\n    vOpacity = aOpacity;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n\n  uniform vec4 uColor;\n  uniform vec4 uColorHighlight;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main() {\n    float isNotFocused = 1.0 - vHighlight;\n\n    float r = uColor.r * isNotFocused + uColorHighlight.r * vHighlight;\n    float g = uColor.g * isNotFocused + uColorHighlight.g * vHighlight;\n    float b = uColor.b * isNotFocused + uColorHighlight.b * vHighlight;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [pt.opacity, pt.opacity, pt.opacity, pt.opacity];\n\nconst pointToHighlight = (pt) => [\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getRegionId = (item) =>\n  `${item.fields[0]}:${item.fields[1]}-${item.fields[2]}`;\n\nconst createStratifiedBedTrack = function createStratifiedBedTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class StratifiedBedTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.pLegend = new PIXI.Graphics();\n      this.pMasked.addChild(this.pLegend);\n\n      this.legendMin = Infinity;\n      this.legendMax = -Infinity;\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.regionId = getRegionId(item);\n        item.isLeftToRight = item.start < item.end;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorHighlight = HGC.utils.colorToHex(\n        this.options.markColorHighlight || 'red'\n      );\n\n      this.markColorHighlightRgbNorm = this.options.markColorHighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorHighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markColorDehighlight = HGC.utils.colorToHex(\n        this.options.markColorDehighlight || '#999999'\n      );\n\n      this.markColorDehighlightRgbNorm = this.options.markColorDehighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorDehighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0.6, 0.6, 0.6];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      this.opacityEncoding = this.options.opacityEncoding || 'solid';\n\n      switch (this.opacityEncoding) {\n        case 'frequency':\n          this.opacityScale = () => 0.1;\n          break;\n\n        case 'highestImportance':\n        case 'closestImportance': {\n          const importanceDomain = this.options.importanceDomain || [1, 1000];\n          const opacityLinearScale = scaleLinear()\n            .domain(importanceDomain)\n            .range([1, 10]);\n          this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n          break;\n        }\n\n        case 'solid':\n        default:\n          this.opacityScale = () => 1;\n          break;\n      }\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.getRegion = this.options.focusRegion\n        ? (item) => [item.xStart, item.xEnd]\n        : undefined;\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.focusStyle = this.options.focusStyle\n        ? this.options.focusStyle.toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item, isHighlighting) {\n      return {\n        cX: this._xScale(item.start),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        highlight: isHighlighting && item.__focus,\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n        __item: item,\n      };\n    }\n\n    isItemInFocus() {\n      if (\n        this.getGene &&\n        this.focusGene &&\n        this.getRegion &&\n        this.focusRegion\n      ) {\n        return (item) => {\n          item.__focus =\n            this.getGene(item) === this.focusGene &&\n            contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      if (this.getGene && this.focusGene) {\n        return (item) => {\n          item.__focus = this.getGene(item) === this.focusGene;\n          return item.__focus;\n        };\n      }\n\n      if (this.getRegion && this.focusRegion) {\n        return (item) => {\n          item.__focus = contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      return (item) => {\n        item.__focus = false;\n        // If no focus was defined, we include all intervals\n        return true;\n      };\n    }\n\n    itemToIndicatorReducer(filterFn, addFn) {\n      if (this.focusStyle === 'highlighting') {\n        return (filteredItems, item) => {\n          filterFn(item);\n          addFn(filteredItems, item);\n          return filteredItems;\n        };\n      }\n\n      return (filteredItems, item) => {\n        if (filterFn(item)) addFn(filteredItems, item);\n        return filteredItems;\n      };\n    }\n\n    getPoints(isHighlighting) {\n      let reducerVar = [];\n      let addFn = (accumulator, item) =>\n        accumulator.push(this.itemToIndicatorCategory(item, isHighlighting));\n\n      if (this.opacityEncoding === 'highestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (accumulator[item.regionId]) {\n            const i1 = this.getImportance(accumulator[item.regionId].__item);\n            const i2 = this.getImportance(item);\n            if (i2 > i1) {\n              accumulator[item.regionId] = this.itemToIndicatorCategory(\n                item,\n                isHighlighting\n              );\n            }\n          } else {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      } else if (this.opacityEncoding === 'closestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (\n            !accumulator[item.regionId] ||\n            item.width < accumulator[item.regionId].__item.width\n          ) {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      }\n\n      const filterFn = this.isItemInFocus();\n      const dataToPoint = this.itemToIndicatorReducer(filterFn, addFn);\n\n      return Object.values(this.fetchedTiles).flatMap((tile) =>\n        Object.values(tile.tileData.reduce(dataToPoint, reducerVar))\n      );\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const highlights = new Float32Array(points.flatMap(pointToHighlight));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: isHighlighting\n          ? [...this.markColorDehighlightRgbNorm, this.markOpacity]\n          : [...this.markColorRgbNorm, this.markOpacity],\n        uColorHighlight: [...this.markColorHighlightRgbNorm, this.markOpacity],\n        uHighlighting: isHighlighting,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aHighlight', highlights, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (this.options.focusStyle === 'highlighting') {\n          this.pAxis.beginFill(0xffffff, 0.66);\n        } else {\n          this.pAxis.beginFill(this.groupToColor.get(i)[1], 0.66);\n        }\n\n        this.pAxis.lineStyle(0);\n        if (this.axisAlign === 'right') {\n          this.pAxis.drawRect(\n            labelPixiText.x - labelPixiText.width,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        } else {\n          this.pAxis.drawRect(\n            labelPixiText.x,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        }\n        this.pAxis.endFill();\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    renderIndicatorLegend() {\n      this.pLegend.clear();\n\n      if (this.opacityEncoding.indexOf('Importance') === -1) {\n        if (this.legendMinText) {\n          this.pLegend.removeChild(this.legendMinText);\n          this.legendMinText.destroy();\n          this.legendMinText = undefined;\n        }\n        if (this.legendMaxText) {\n          this.pLegend.removeChild(this.legendMaxText);\n          this.legendMaxText.destroy();\n          this.legendMaxText = undefined;\n        }\n        return;\n      }\n\n      const padding = 6;\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n      const [, y] = this.categoryHeightScale.range();\n      const isRightAligned = this.options.legendAlign === 'right';\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      this.pLegend.position.x = isRightAligned ? left + width : left;\n      this.pLegend.position.y = top + y + padding;\n\n      const [minValue, maxValue] = this.options.importanceDomain || [1, 1000];\n\n      if (Math.abs(minValue - this.legendMin) > EPS) {\n        if (this.legendMinText) {\n          this.pLegend.removeChild(this.legendMinText);\n          this.legendMinText.destroy();\n        }\n        this.legendMinText = new PIXI.Text(toFixed(minValue, 3), {\n          fontSize: this.labelSize,\n          align: isRightAligned ? 'right' : 'left',\n          fill: 0x808080,\n        });\n        this.legendMinText.x = 0;\n        this.legendMinText.y = padding / 2;\n        this.legendMinText.anchor.x = isRightAligned ? 1 : 0;\n        this.pLegend.addChild(this.legendMinText);\n      }\n\n      if (Math.abs(maxValue - this.legendMax) > EPS) {\n        if (this.legendMaxText) {\n          this.pLegend.removeChild(this.legendMaxText);\n          this.legendMaxText.destroy();\n        }\n        this.legendMaxText = new PIXI.Text(toFixed(maxValue, 3), {\n          fontSize: this.labelSize,\n          align: isRightAligned ? 'right' : 'left',\n          fill: 0x808080,\n        });\n        this.legendMaxText.x = 0;\n        this.legendMaxText.y = padding / 2;\n        this.legendMaxText.anchor.x = isRightAligned ? 1 : 0;\n        this.pLegend.addChild(this.legendMaxText);\n      }\n\n      const legendRectWidth = 42;\n      const minTextWidth = this.legendMinText.getBounds().width;\n      const maxTextWidth = this.legendMaxText.getBounds().width;\n      const offset = isRightAligned\n        ? -(maxTextWidth + legendRectWidth + padding)\n        : minTextWidth + padding;\n\n      this.pLegend.beginFill(0xffffff);\n      this.pLegend.lineStyle(1, 0xcccccc);\n      if (isRightAligned) {\n        this.legendMinText.x = offset - padding;\n        this.pLegend.drawRoundedRect(\n          -(legendRectWidth + minTextWidth + maxTextWidth + 3 * padding + 0.5),\n          0,\n          legendRectWidth + minTextWidth + maxTextWidth + 3 * padding,\n          18 + (isHighlighting * padding) / 2,\n          3\n        );\n      } else {\n        this.legendMaxText.x = offset + legendRectWidth + 2 * padding;\n        this.pLegend.drawRoundedRect(\n          0.5,\n          0,\n          legendRectWidth + minTextWidth + maxTextWidth + 3 * padding,\n          18 + (isHighlighting * padding) / 2,\n          3\n        );\n      }\n      this.pLegend.endFill();\n      this.pLegend.lineStyle(0);\n\n      for (let i = 0; i < 5; i++) {\n        const opacity = this.opacityScale(minValue + (i / 4) * maxValue);\n\n        this.pLegend.beginFill(this.markColor, opacity);\n        this.pLegend.drawRect(\n          i * 9 + offset,\n          padding / 2 + !isHighlighting * 3,\n          6,\n          6\n        );\n        this.pLegend.endFill();\n\n        if (isHighlighting) {\n          this.pLegend.beginFill(this.markColorHighlight, opacity);\n          this.pLegend.drawRect(i * 9 + offset, padding / 2 + 9, 6, 6);\n          this.pLegend.endFill();\n        }\n      }\n\n      if (isRightAligned) {\n        this.legendMinText.x = offset - padding;\n        this.legendMaxText.x = -padding / 2;\n      } else {\n        this.legendMinText.x = padding / 2;\n        this.legendMaxText.x = offset + legendRectWidth + 2 * padding;\n      }\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis();\n      this.renderIndicatorLegend();\n      this.renderIndicatorPoints();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(trackX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(trackY))\n      );\n\n      const xAbsLo = this._xScale.invert(trackX - 1);\n      const xAbsHi = this._xScale.invert(trackX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      if (foundItem) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(foundItem).toFixed(2);\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    renderIndicatorCategoryAxisAsSvg() {\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.pAxis.position.x}, ${this.pAxis.position.y})`\n      );\n\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n\n      const createRect = (x, y, w, h, f, o) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', x);\n        r.setAttribute('y', y);\n        r.setAttribute('width', w);\n        r.setAttribute('height', h);\n        r.setAttribute('fill', f);\n        r.setAttribute('fill-opacity', o);\n        r.setAttribute('stroke-width', 0);\n\n        return r;\n      };\n\n      const createText = (pixiText) => {\n        const t = document.createElement('text');\n\n        t.setAttribute('x', pixiText.x);\n        t.setAttribute('y', pixiText.y + pixiText.height / (4 / 1));\n        t.setAttribute('fill', pixiText._style._fill);\n        t.setAttribute(\n          'text-anchor',\n          pixiText._style._align === 'right' ? 'end' : 'start'\n        );\n        t.setAttribute('style', `font: ${pixiText._font};`);\n\n        t.textContent = pixiText.text;\n\n        return t;\n      };\n\n      const createLine = ({\n        stroke = '#000000',\n        strokeWidth = 1,\n        strokeDasharray = null,\n      } = {}) => (x1, y1, x2, y2) => {\n        const l = document.createElement('line');\n\n        l.setAttribute('x1', x1);\n        l.setAttribute('y1', y1);\n        l.setAttribute('x2', x2);\n        l.setAttribute('y2', y2);\n        l.setAttribute('stroke', stroke);\n        l.setAttribute('stroke-width', strokeWidth);\n\n        if (strokeDasharray)\n          l.setAttribute('stroke-dasharray', strokeDasharray);\n\n        return l;\n      };\n\n      const createDashedLine = createLine({ strokeDasharray: '5' });\n\n      const isHighlighting = this.options.focusStyle === 'highlighting';\n      const backgroundOpacity = 0.66;\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n\n        // Background color\n        const backgroundColor = isHighlighting\n          ? '#ffffff'\n          : `#${this.groupToColor.get(i)[1].toString(16)}`;\n\n        if (this.axisAlign === 'right') {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x - labelPixiText.width,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        } else {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        }\n\n        gAxis.appendChild(createText(labelPixiText));\n\n        gAxis.appendChild(createLine()(0, yStart, xTickOffset, yStart));\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          gAxis.appendChild(createDashedLine(0, yStart, xTickEnd, yStart));\n        }\n\n        yStart = yEnd;\n      });\n\n      gAxis.appendChild(createLine()(0, 0, 0, yEnd));\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        gAxis.appendChild(createDashedLine(0, yEnd, xTickEnd, yEnd));\n      }\n\n      return gAxis;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stratified-bed-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n      const color = isHighlighting\n        ? this.options.markColorDehighlight || '#999999'\n        : this.options.markColor || 'black';\n      const colorHighlight = this.options.markColorHighlight || 'red';\n\n      points.forEach(({ cX, y, widthHalf, opacity, highlight, height }, i) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', cX - widthHalf);\n        r.setAttribute('y', y);\n        r.setAttribute('width', widthHalf * 2);\n        r.setAttribute('height', height);\n        r.setAttribute('fill', highlight ? colorHighlight : color);\n        r.setAttribute('fill-opacity', opacity);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      base.appendChild(this.renderIndicatorCategoryAxisAsSvg());\n\n      return [base, track];\n    }\n  }\n\n  return new StratifiedBedTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStratifiedBedTrack.config = {\n  type: 'stratified-bed',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStratifiedBedTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n\n      return [circleDraws, circleFocusDraws];\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo || !this.options.toolTip) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'exported-snp-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles()\n        .filter((tile) => tile.plusStrandRows)\n        .forEach((tile) => {\n          // call drawTile with storePolyStr = true so that\n          // we record path strings to use in the SVG\n          const [circles, focusedCircles] = this.renderRows(\n            tile,\n            tile.plusStrandRows,\n            tile.plusStrandRows.length,\n            0,\n            this.dimensions[1],\n            'blue'\n          );\n\n          circles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColor || 'black');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacity || 0.33);\n            c.setAttribute('r', this.options.markSize);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n\n          focusedCircles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColorFocus || 'red');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacityFocus || 0.66);\n            c.setAttribute('r', this.options.markSize + 1);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n        });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n} from './constants';\nimport { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n      tile.histogram2dNumPred = new Uint8Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      const categoryBinHash = new Map();\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const category = this.getCategory(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          const binHash = categoryBinHash.get(category) || {};\n\n          // Make sure we count multiple enhancer predictions of the same biosample and bin only once (i.e., summing up)\n          if (!binHash[bin]) {\n            binHash[bin] = binHash[bin] || score > 0;\n            tile.histogram2dNumPred[histIdx] += binHash[bin];\n            categoryBinHash.set(category, binHash);\n          }\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const rowCumSum = [];\n      const rowNumPred = [];\n      let totalPred = 0;\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        const numPred =\n          fetchedTile.histogram2dNumPred[i * this.numBins + binXPos];\n        rowNumPred.push(numPred);\n        totalPred += numPred;\n        rowCumSum.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = rowCumSum.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value =\n          fetchedTile.histogram2dNumPred[group * this.numBins + binXPos];\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value} of ${totalPred} samples</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stacked-bar-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      segments.forEach(({ xStart, xEnd, yStart, yEnd, colorIdx }) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', xEnd);\n        r.setAttribute('y', yEnd);\n        r.setAttribute('width', Math.abs(xEnd - xStart));\n        r.setAttribute('height', Math.abs(yEnd - yStart));\n        r.setAttribute('fill', this.colorMap[colorIdx]);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Advanced Stacked Bars Track',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import createPubSub from 'pub-sub-es';\n\nfunction createTssTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  class TssTrack extends HGC.tracks.BedLikeTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      const { publish, subscribe, unsubscribe } = createPubSub();\n      this.publish = publish;\n      this.subscribe = subscribe;\n      this.unsubscribe = unsubscribe;\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = 1;\n      const radius = 2;\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = {\n              xStartScreen: xStartPos,\n              xEndScreen: xEndPos,\n              xStartAbs: txStart,\n              xEndAbs: txEnd,\n              data: td,\n            };\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        circleDraws.forEach((circleDraw) => {\n          this.publish('annotationDrawn', circleDraw);\n        });\n      }\n    }\n\n    rerender() {\n      // Monkey patch because TiledPixiTrack doesn't always fire correctly\n      this.draw();\n      this.publish('tilesDrawn', { uuid: this.uuid });\n    }\n\n    updateExistingGraphics() {\n      super.updateExistingGraphics();\n      this.publish('tilesDrawn', { uuid: this.uuid });\n    }\n\n    getMouseOverHtml() {\n      return '';\n    }\n  }\n\n  return new TssTrack(...args);\n}\n\ncreateTssTrack.config = {\n  type: 'tss',\n  datatype: ['bedlike'],\n};\n\nexport default createTssTrack;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAnnotationOverlayMetaTrack from './annotation-overlay-meta-track';\nimport createRidgePlotTrack from './ridge-plot-track';\nimport createStratifiedBedTrack from './stratified-bed-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\nimport createTssTrack from './tss-track';\n\nimport './index.css';\n\nregister({\n  track: createRidgePlotTrack,\n  config: createRidgePlotTrack.config,\n});\n\nregister({\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  track: createStratifiedBedTrack,\n  config: createStratifiedBedTrack.config,\n});\n\nregister({\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nregister({\n  track: createTssTrack,\n  config: createTssTrack.config,\n});\n\nregister({\n  track: createAnnotationOverlayMetaTrack,\n  config: createAnnotationOverlayMetaTrack.config,\n  isMetaTrack: true,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}