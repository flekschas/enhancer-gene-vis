{"version":3,"sources":["AppInitializing.js","AppError.js","constants.js","utils.js","use-previous.js","EnhancerGenePlot.js","Logo.js","use-debounce.js","SearchField.js","Welcome.js","use-query-string.js","Viewer.js","with-either.js","App.js","serviceWorker.js","annotation-overlay-meta-track.js","ridge-plot-track.js","stratified-bed-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","tss-track.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","backgroundColor","AppInitializing","classes","className","Backdrop","open","CircularProgress","EPS","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","GENE_SEARCH_URL","VARIANT_SEARCH_URL","DEFAULT_STRATIFICATION","categoryField","axisShowGroupSeparator","axisNoGroupColor","groups","label","categories","DEFAULT_VIEW_CONFIG_ENHANCER","editable","trackSourceServers","views","uid","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","visible","chromInfoPath","tracks","top","type","height","contents","options","stroke","fontSize","fontIsLeftAligned","showMousePosition","mousePositionColor","tilesetUid","server","fromViewUid","projectionFillColor","projectionStrokeColor","projectionFillOpacity","projectionStrokeOpacity","strokeWidth","plusStrandColor","minusStrandColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","showGlobalMousePosition","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","focusRegion","name","toolTip","field","value","numDecimals","other","binSize","axisAlign","labelPosition","arcStyle","indicatorStyle","labelColor","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","legendAlign","markColorHighlight","markColorDehighlight","markMinWidth","markHeight","rowHeight","overlays","includes","extent","minWidth","fill","fillOpacity","outline","outlineOpacity","outlineWidth","outlinePos","metaTracks","overlaysTrack","annotationTracks","layout","w","h","x","y","initialXDomain","initialYDomain","DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY","zoomFixed","labelShowResolution","labelShowAssembly","markArea","markResolution","valueScaling","colorRange","rowPadding","rowNormalization","rowSelections","rowIdToCategory","fn","args","rowCategories","reduce","row","group","index","category","axisLabelColor","background","axisLabelBackground","forEach","sample","showRowLabels","rowLabelSize","contains","a","b","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","length","rgba","Float32Array","i","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","dashSize","diff","direction","sign","width","abs","stepSize","numSteps","moveTo","lineTo","getQueryStringValue","key","decoder","identity","queryString","parse","window","location","search","setQueryStringValue","encoder","values","newQsValue","stringify","strict","url","origin","pathname","history","pushState","path","toAbsPosition","position","chromInfo","absPosition","indexOf","split","chrom","pos","chrPositions","toFixed","number","decimals","forced","string","substring","scaleBand","domain","fixedBandwidth","bandwidth","range","rangeSize","paddingInner","paddingInnerZeroBased","sum","update","scale","v","idx","slice","newDomain","newRange","newFixedBandwidth","newPaddingInner","newPaddingInnerZeroBased","usePrevious","ref","useRef","useEffect","current","plot","flexGrow","plotSvg","useTooltipStyles","map","arrow","tooltip","boxShadow","padding","borderRadius","uuid","fetchTile","tileId","fetch","response","json","samples","size","j","getTileWidth","tilesetInfo","max_width","max_zoom","filterByPosition","tile","filter","entry","dodge","data","radius","yScale","radius2","circles","d","sort","head","tail","intersects","next","Infinity","plotEnhancerGeneConnections","node","geneCellEncoding","prevGeneCellEncoding","genePadding","openTooltip","closeTooltip","tooltipClasses","variant","svg","select","paddingTop","paddingBottom","circleRadius","circlePadding","geneLabelPadding","beeswarmPadding","distanceBarWidth","distPaddingRange","Object","attr","maxCatgorySize","categoryAggregation","cat","numEnhancers","categorySizeScale","scaleLog","clamp","percentScale","scaleLinear","circleYScalePre","circleYScalePost","circleYScale","geneContainerWidth","maxGenes","floor","genesUpstream","genesUpstreamByDist","reverse","genesDownstream","genesDownstreamByDist","minMax","gene","min","relDistance","minRelDistance","maxRelDistance","paddingScale","genesUpstreamPadding","round","genesUpstreamScale","genesDownstreamPadding","genesDownstreamScale","minVisibleAbsDist","minDist","absDistance","maxVisibleAbsDist","maxDist","distanceHeightScale","plotBeeswarm","selection","isRightAligned","selectAll","join","getArrayNumCols","genes","maxSize","samplesByCategory","plotArray","numCols","instanceCache","onMouseEnter","onMouseLeave","tooltipTitleGetter","cellSize","indexToX","indexToY","on","event","bBox","target","getBoundingClientRect","title","placement","sampleCategory","arrayTooltipTitleGetter","Fragment","geneArrayInstances","upstream","downstream","geneArrayInstanceMouseEnterHandler","dHovering","opacity","geneArrayInstanceMouseLeaveHandler","plotBox","valueScale","valueGetter","cellWidth","fillColor","textColor","showText","showZero","showTooltip","bg","text","boxTooltipTitleGetter","enhancerG","enhancerGCellG","genesUpstreamG","geneLabelX","geneLabelY","genesUpstreamGCellG","item","remove","genesDownstreamG","genesDownstreamGCellG","distRange","distStep","tickValues","Array","call","axisRight","tickSize","tickFormat","s","this","parentNode","nextSibling","g","EnhancerGenePlot","relPosition","fullPosition","styles","svgRef","useState","plotEl","setPlotEl","setTile","setTilesetInfo","setWidth","prevWidth","active","tileWidth","tileXPos","then","_tile","plotElRef","useCallback","isInit","useMemo","maxScore","minAbsDistance","maxAbsDistance","entries","distComparator","TinyQueue","geneName","fields","relGenePos","distance","isDownstream","push","importance","genesDownstreamByDistArr","pop","genesUpstreamByDistArr","prevGene","results","useLayoutEffect","measure","requestAnimationFrame","currWidth","addEventListener","removeEventListener","Grid","container","style","id","defaultProps","logo","alignItems","lineHeight","fontWeight","logoAbc","letterSpacing","paddingRight","logoEnhancer","Logo","props","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","inputRoot","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","transition","focused","input","textFieldRoot","transform","fetchJsonFromUrl","query","result","GeneIcon","SvgIcon","viewBox","GeneOption","option","VariantOption","Option","SearchField","setOpen","setOptions","inputValue","searchQuery","setSearchQuery","debouncedSearchQuery","loading","autocompleteClasses","customSearch","searchUrl","whenResults","isArray","Promise","all","flat","multiple","autocompleteOptions","Autocomplete","larger","onChange","newValue","onInputChange","newInputValue","fullWidth","onOpen","onClose","getOptionSelected","_value","getOptionLabel","renderInput","params","TextField","InputProps","endAdornment","renderOption","renderTags","getTagProps","Chip","icon","note","palette","grey","marginTop","showTutorial","marginRight","startExploring","marginLeft","Welcome","tutorial","setTutorial","Typography","align","Button","onClick","infoCloseHandler","disableElevation","component","noWrap","href","rel","useQueryString","initialValue","undefined","setValue","onSetValue","black","gray","pink","root","display","right","bottom","left","h1","margin","modal","justifyContent","paper","shadows","maxWidth","maxHeight","overflow","spacing","iconRadio","iconRadioActive","iconRadioLegend","appBar","common","white","flexShrink","drawerGrid","drawerPaper","settings","settingsTitle","settingsContent","textInput","toolbar","mixins","content","flexDirection","grow","fullWidthHeight","higlass","higlassEnhancerContainer","flexWrap","minHeight","higlassEnhancer","higlassDnaAccessibility","higlassTitleBar","higlassTitleBarText","higlassTitleBarContainer","higlassTitleBarTitle","higlassTitleBarIcon","higlassTitleBarIconActive","higlassTitleBarHelpPopeover","higlassInfoBarTitle","panZoomTip","animation","userSelect","panZoomTipActive","higlassEnhancerInfoBar","borderTop","borderBottom","higlassEnhancerGenePlot","higlassEnhancerGenePlotPlaceholder","fontStyle","enhancerGeneTooltip","pointerEvents","higlassDnaAccessibilityInfoBar","higlassDnaAccessibilityInfoBarRegion","higlassSeparator","toolbarExtra","paddingLeft","chrPosUrlEncoder","chrPos","replace","chrPosUrlDecoder","updateViewConfigXDomain","newXDomainStart","newXDomainEnd","force","viewConfig","xDomain","focusGeneRegion","getFocusGeneRegion","focusVariantRegion","getFocusVariantRegion","Number","isNaN","updateViewConfigFocusVariant","trackIdxs","trackIdx","updateViewConfigVariantYScale","extractCoreFromHiGlassSvg","fifthLn","nthIndexOf","lastLn","lastIndexOf","core","locationSearch","match","toLowerCase","chr","txStart","txEnd","score","Viewer","infoOpen","setInfoOpen","focusGene","setFocusGene","focusVariant","setFocusVariant","hideUnfocused","setHideUnfocused","matrixColoring","setMatrixColoring","variantYScale","setVariantYScale","dnaAccessLabels","setDnaAccessLabels","absToChr","xDomainStart","setXDomainStart","xDomainEnd","setXDomainEnd","showEnhancerDetails","setShowEnhancerDetails","showDnaAccessDetails","setShowDnaAccessDetails","setGenePadding","setGeneCellEncoding","focusGeneOption","setFocusGeneOption","focusVariantOption","setFocusVariantOption","prevFocusGeneOption","prevFocusVariantOption","higlassEnhancerApi","higlassEnhancerMouseDown","higlassDnaAccessApi","enhancerGeneSvgRef","higlassEnhancerHelpAnchorEl","setHiglassEnhancerHelpAnchorEl","higlassDnaAccessHelpAnchorEl","setHiglassDnaAccessHelpAnchorEl","show","setEnhancerGeneTooltip","higlassEnhancerMouseOver","setHiglassEnhancerMouseOver","higlassEnhancerFocus","setHiglassEnhancerFocus","higlassEnhancerContainerRef","focusGeneVariantOptions","_focusGeneVariant","focusGeneStartPosition","focusGeneEndPosition","focusVariantPosition","focusVariantRelPosition","focusVariantFullPosition","xDomainStartAbs","xDomainEndAbs","xDomainStartAbsDb","xDomainEndAbsDb","viewConfigEnhancer","pipe","start","end","n","focusStyle","updateViewConfigFocusStyle","coloring","opacityEncoding","deepClone","viewConfigEnhancerHeight","track","viewConfigDnaAccessibility","labels","midPos","getDnaAccessibilityXDomain","dnaAccessibilityRegionSize","numericalXDomainStart","isString","chrToAbs","numericalXDomainEnd","higlassEnhancerBlockClasses","clearFocusGene","clearFocusVariant","focusVariantChangeHandler","changeVariantYScale","changeMatrixColoring","changeDnaAccessLabels","changeGeneCellEncoding","higlassClickHandler","payload","console","log","higlassLocationChangeHandlerDb","debounce","absPos","r","windowMouseDownClearHandler","e","isParentOf","higlassEnhancerMouseDownHandler","higlassEnhancerInitHandler","higlassInstance","api","getComponent","element","higlassDnaAccessibilityInitHandler","higlassEnhancerHelpOpen","Boolean","higlassEnhancerHelpId","higlassDnaAccessHelpOpen","higlassDnaAccessHelpId","openEnhancerGeneTooltip","closeEnhancerGeneTooltip","higlassEnhancerFocusHandler","higlassEnhancerBlurHandler","higlassEnhancerContainerMouseEnterHandler","higlassEnhancerContainerMouseLeaveHandler","mergeSvgs","enhancerSvg","dnaAccessSvg","enhancerGeneSvg","enhancerSvgCore","enhancerWidth","enhancerHeight","dnaAccessSvgCore","dnaAccessWidth","dnaAccessHeight","firstSvgClosingBracket","lastSvgOpeningBracket","extractCoreFromStringifiedSvg","enhancerGeneSvgCore","enhancerGeneHeight","actualEnhancerHeight","actualDnaAccessHeight","mergedSvg","higlassEnhancerDetailsIconClass","higlassDnaAccessDetailsIconClass","CssBaseline","AppBar","Toolbar","FormControl","newValues","newFocusElements","warn","Drawer","anchor","ButtonBase","Divider","Box","m","InputLabel","htmlFor","OutlinedInput","newViewConfig","zoomTo","FormControlLabel","control","Switch","checked","FormLabel","RadioGroup","aria-label","IconButton","exportAsSvg","XMLSerializer","serializeToString","filename","stringOrBlob","blob","Blob","navigator","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","justify","wrap","aria-describedby","currentTarget","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","sizeMode","globalMousePosition","onMouseDown","onFocus","onBlur","tabIndex","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","Tooltip","Modal","aria-labelledby","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","withEither","ifEitherFn","EitherComponent","Component","createMuiTheme","primary","main","secondary","App","setChromInfo","ChromosomeInfo","_chromInfo","totalLength","catch","AppViewer","AppError","ThemeProvider","hostname","createAnnotationOverlayMetaTrack","HGC","Error","pubSub","services","AnnotationOverlayMetaTrack","context","definition","getTrackObject","animate","onNewTilesLoaded","annotationTrackIds","Set","add","annotationDrawnHandlerBound","annotationDrawnHandler","bind","tilesDrawnEndHandlerBound","tilesDrawnEndHandler","drawnAnnotations","Map","tracksDrawingTiles","pubSubs","subscribe","xStartAbs","xEndAbs","set","unsubscribe","has","updateOverlays","from","draw","clear","config","availableOptions","defaultOptions","FLOAT_BYTES","BYTES_PER_ELEMENT","VS","FS","COLORMAP_GRAYS","getMax","fetchedTiles","maxValue","tileData","maxNonZero","getNumRows","coarseShape","getRowMaxs","maxVector","maxValueByRow","scaleGraphics","xScale","drawnAtScale","tileK","posOffset","getNumPointsPerRow","numRows","positions","createRidgePlotTrack","libraries","format","d3Format","d3Scale","tileProxy","RidgePlotTrack","updateOptions","coarsifyTileValues","bins_per_dimension","zoomLevel","tilePos","binsPerTileIn","binsPerTile","resolutions","chosenResolution","tileHeight","tileX","tileY","xTilePos","yTilePos","minX","min_pos","minY","reverseYAxis","max_pos","selectRowsAggregationMode","selectRowsAggregationFn","maxNan","minNan","sumNan","meanNan","markAreaColor","utils","colorToHex","markColorRgbNorm","colorToRgba","markColorTex","markColorTexRes","markNumColors","oldMarkResolution","TILE_SIZE","oldRowHeight","oldRowPadding","oldRowNormalization","oldRowSelections","updateTiles","updateScales","oldShowRowLabels","updateRowLabels","drawLabel","rowLabelAlign","pAxis","children","removeChildAt","rowLabels","rowLabel","destroy","row_infos","rowIndex","removeRowLabels","indicator","Sprite","WHITE","tint","Text","dimensions","yStart","xLabelOffset","getRowHeight","rowStepHeight","rowStepYCenter","addChild","newOptions","updateExistingGraphics","getTilePosAndDimensions","shape","binSizePx","binSizeBp","binSizeBpHalf","binXPos","valuesByRow","meanValue","dense","subarray","rowIdx","actualTrackHeight","getTrackHeight","globalMax","colorIndexScale","rowMaxs","rowValueScales","rowColorIndexScales","valueScaleByRow","colorIndexScaleByRow","rowScale","tiles","maxRows","positionsByRow","colorIndicesByRow","offsetSignsByRow","_xScale","size2d","size1d","unshift","flatMap","numPointsPerRow","verticesPerLine","verticesPerPoint","indices","Uint32Array","k","p1a","p1b","p1c","p1d","p2a","p2b","p2c","p2d","indexOffset","visibleTrackHeight","tilesToData","colorIndices","offsetSigns","toLineIndices","uniforms","UniformGroup","uLineColor","uNaNColor","uAreaColorTex","uAreaColorTexRes","uWidth","uMiter","shader","Shader","geometry","Geometry","numVerticesPoint","addAttribute","TYPES","FLOAT","addIndex","mesh","Mesh","newGraphics","Graphics","pMain","lineGraphics","hasFetchedTiles","renderLines","newPosition","newXScale","newYScale","refreshTiles","trackX","trackY","calculateZoomLevel","calculateTileWidth","tile_size","invert","posInTileX","rowSelection","tileToLocalId","fetchedTile","selectRowsAggregationMethod","rowI","rowInfo","getVisibleData","svgns","base","setAttribute","output","stride","createLine","line","posPerRow","posToPoints","arr","numColors","defs","createElementNS","linearGradient","stop","insertBefore","firstChild","l","y0","firstComma","firstX","firstY","lastComma","lastX","lastY","HorizontalLine1DPixiTrack","datatype","orientation","pointToPosition","pt","cX","widthHalf","pointToIndex","pointToOpacity","pointToHighlight","highlight","getItemDistance","getMaxDistance","maxDistItem","scaleScalableGraphics","getRegionId","createStratifiedBedTrack","MAX_CLICK_DELAY","configs","opacityLogScale","StratifiedBedTrack","pLegend","pMasked","legendMin","legendMax","interactive","interactiveChildren","alpha","mousedownTime","performance","now","mousedown","mouseup","clickHandler","intervals","regionId","isLeftToRight","intervalTree","createIntervalTree","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","categoryToY","yToCategory","groupSizes","groupSize","groupLabelsPixiText","labelSize","markColorHighlightRgbNorm","markColorDehighlightRgbNorm","getImportance","opacityScale","opacityLinearScale","getRegion","getGene","minImportance","updateStratificationOption","heightScale","categoryHeightScale","valueScaleInverted","isHighlighting","get","__focus","__item","filterFn","addFn","filteredItems","reducerVar","accumulator","itemToIndicatorCategory","i1","isItemInFocus","dataToPoint","itemToIndicatorReducer","points","getPoints","Uint16Array","opacities","highlights","uColor","uColorHighlight","uHighlighting","indicatorPointGraphics","yEnd","xTickOffset","xTickEnd","numAxisLabels","lineStyle","labelPixiText","beginFill","drawRect","endFill","legendMinText","legendMaxText","minValue","minTextWidth","getBounds","maxTextWidth","offset","drawRoundedRect","renderIndicatorCategoryAxis","renderIndicatorLegend","renderIndicatorPoints","updateIndicators","relX","relY","foundItem","xAbsLo","xAbsHi","queryInterval","interval","getElementAtPosition","colorHex","toString","bgHex","offsetX","offsetY","global","publish","gAxis","createRect","f","o","strokeDasharray","x1","y1","x2","y2","createDashedLine","pixiText","t","_style","_fill","_align","_font","textContent","createText","colorHighlight","renderIndicatorCategoryAxisAsSvg","thumbnail","DOMParser","parseFromString","documentElement","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","getIs2d","get1dItemWidth","get2dItemWidth","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","maxWidthItem","createScalableArcs1dTrack","ScalableArcs1dTrack","is2d","getItemWidth","getStart","getEnd","numBins","pointSize","widthHistogramLeft","widthHistogramRight","bin","histPos","widthHistogramMax","updateTileWidthHistogram","markColorFocusRgbNorm","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","mapFn","pointToFocused","vertexShader","fragmentShader","drawTriangles","uPointSize","uColorFocused","State","DRAW_MODES","TRIANGLES","POINTS","drawAxis","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","storePolyStr","startsWith","drawCircle","drawEllipse","trackWidth","trackHeight","cx","cy","polyStr","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","polys","visibleAndFetchedTiles","drawTile","createSnpTrack","d3Array","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","rectGraphics","finalDotYPos","rows","initialize","circleDraws","circleFocusDraws","td","geneInfo","chrOffset","yMiddle","step","drawnRects","circleDraw","drawPoly","buttonMode","hoveringSnp","relTilePos","dist","itemY","MAX_RADIUS","otherStr","substr","plusStrandRows","renderRows","focusedCircles","c","axis","axisPositionVertical","gDrawnAxis","exportAxisLeftSVG","exportAxisRightSVG","BedLikeTrack","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","histogram1d","histogram2d","histogram2dNumPred","Uint8Array","categoryBinHash","maxBinId","binStart","binEnd","histIdx","binHash","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","rowCumSum","rowNumPred","totalPred","numPred","relYPos","findIndex","createTssTrack","TssTrack","createPubSub","xStartScreen","xEndScreen","register","isMetaTrack","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"oZAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,OAAQF,EAAME,OAAOC,OAAS,EAC9BC,MAAO,OACPC,gBAAiB,YAgBNC,EAZS,WACtB,IAAMC,EAAUT,IAEhB,OACE,yBAAKU,UAAU,WACb,kBAACC,EAAA,EAAD,CAAUD,UAAWD,EAAQN,SAAUS,MAAM,GAC3C,kBAACC,EAAA,EAAD,CAAkBP,MAAM,eCVjBE,G,OANS,kBACtB,yBAAKE,UAAU,qBACb,0D,4VCLSI,GAAM,KAkBNC,GAAoB,CAE/B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GAAyB,CAEpC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GAA0B,CAErC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GACX,8DAEWC,GACX,6DAEWC,GAAyB,CACpCC,cAAe,GACfC,wBAAwB,EACxBC,kBAAkB,EAClBC,OAAQ,CACN,CACEC,MAAO,yBACPC,WAAY,CACV,wBACA,qBACA,2DACA,0DACA,4DACA,gBACA,sBACA,0DACA,sBACA,+BACA,2DACA,gCACA,qBACA,+EACA,4DACA,wBACA,uCACA,iFACA,0DACA,qBACA,OACA,iCACA,iFACA,gBACA,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACED,MAAO,UACPC,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACED,MAAO,UACPC,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACED,MAAO,6BACPC,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACED,MAAO,cACPC,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACED,MAAO,aACPC,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,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AAmB,GACnBd,mBAAmB,EACnBe,yBAAyB,EACzBd,mBAAoB,UAGxB,CACElB,IAAK,WACLU,KAAM,mBAGNU,OAAQ,2BACRD,WAAY,yBACZR,OAAQ,GACRE,QAAS,CACPoB,uBAAwB,QACxBC,UAAW,QACXC,eAAgB,UAChBC,SAAU,EACVC,YAAa,IACbC,iBAAkB,IAClBC,YAAa,EACbC,YAAa,CACX,WACA,YAEFC,KAAM,WACNxB,mBAAmB,EACnBe,yBAAyB,EACzBd,mBAAoB,QACpBwB,QAAS,CACPD,KAAM,CACJE,MAAO,GAETC,MAAO,CACLD,MAAO,EACPE,YAAa,GAEfC,MAAO,CACL,CACEpD,MAAO,cACPiD,MAAO,EACPE,YAAa,OAMvB,CACE7C,IAAK,oBACLU,KAAM,aAGNU,OAAQ,2BACRD,WAAY,yBAEZR,OAAQ,KACRE,QAAS,CACP4B,KAAM,oBACNQ,cAAe,cACfsC,qBAAqB,EACrBC,mBAAmB,EACnBC,UAAU,EACVvD,UAAW,UACXwD,eAAgB,IAChBC,aAAc,cACdC,WAAY,CAAC,UAAW,WACxB5B,UAAW,GACX6B,YAAa,EACbC,kBAAkB,EAClBC,cAAe,CACb,IACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,GACA,EACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,IACA,GACA,GACA,GACA,GACA,EACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,IACA,GACA,GACA,IACA,GACA,GACA,GACA,IACA,GACA,GACA,IACA,EACA,IACA,IACA,GACA,EACA,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","file":"static/js/main.aa72ab4c.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#bbb',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst AppInitializing = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"full-wh\">\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","export const EPS = 1e-6;\n\nexport const SVG_SKELETON = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"_WIDTH_px\" height=\"_HEIGHT_px\">\n    <g id=\"enhancer-plot\">\n    _ENHANCER_\n    </g>\n    <g id=\"enhancer-gene-plot\" transform=\"translate(0, _ENHANCER_GENE_Y_)\">\n    _ENHANCER_GENE_\n    </g>\n    <g id=\"dna-accessibility-plot\" transform=\"translate(_DNA_ACCESS_X_, 0)\">\n    _DNA_ACCESS_\n    </g>\n</svg>`;\n\nexport const DEFAULT_COLOR_MAP = [\n  // '#c17da5', // pink\n  '#c76526', // red\n  '#6fb2e4', // light blue\n  '#eee462', // yellow\n  '#469b76', // green\n  '#3170ad', // dark blue\n  '#dca237', // orange\n  '#000000', // black\n  '#999999', // gray\n];\n\nexport const DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a', // pink\n  '#a65420', // red\n  '#4a7798', // light blue\n  '#999026', // yellow\n  '#3a8162', // green\n  '#295d90', // dark blue\n  '#b7872e', // orange\n  '#000000', // black\n  '#666666', // gray\n];\n\nexport const DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0', // pink\n  '#f6e5db', // red\n  '#e7f2fb', // light blue\n  '#f2eda9', // yellow\n  '#e0eee8', // green\n  '#dde7f1', // dark blue\n  '#f5e4c4', // orange\n  '#d5d5d5', // black\n  '#ffffff', // gray\n];\n\nexport const GENE_SEARCH_URL =\n  'https://higlass.io/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA';\n\nexport const VARIANT_SEARCH_URL =\n  'https://resgen.io/api/v1/suggest/?d=VF5-RDXWTxidGMJU7FeaxA';\n\nexport const DEFAULT_STRATIFICATION = {\n  categoryField: 10,\n  axisShowGroupSeparator: true,\n  axisNoGroupColor: false,\n  groups: [\n    {\n      label: 'Mononuclear Phagocytes',\n      categories: [\n        'THP1_LPS_4hr-Engreitz',\n        'THP_pmaLPS_ATAC_6h',\n        'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n        'THP1-Engreitz',\n        'THP_pmaLPS_ATAC_96h',\n        'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n        'THP_pmaLPS_ATAC_72h',\n        'THP-1_monocyte-VanBortle2017',\n        'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n        'CD14-positive_monocyte-ENCODE',\n        'THP_pmaLPS_ATAC_2h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n        'U937_LPS_4hr-Engreitz',\n        'CD14-positive_monocyte-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n        'THP_pmaLPS_ATAC_0h',\n        'HAP1',\n        'THP-1_macrophage-VanBortle2017',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n        'U937-Engreitz',\n        'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n        'THP_pmaLPS_ATAC_24h',\n        'THP_pmaLPS_ATAC_1h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n        'THP_pmaLPS_ATAC_120h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n        'THP_pmaLPS_ATAC_48h',\n        'CD14-positive_monocytes-Roadmap',\n        'THP_pmaLPS_ATAC_12h', // monoctye\n      ],\n    },\n    {\n      label: 'B Cells',\n      categories: [\n        'Karpas-422-ENCODE', // b-cell cell line\n        'BJAB-Engreitz',\n        'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n        'B_cell-ENCODE',\n        'OCI-LY7-ENCODE',\n        'GM12878-Roadmap',\n        'MM.1S-ENCODE',\n        'CD19-positive_B_cell-Roadmap',\n        'CD8-positive_alpha-beta_T_cell-ENCODE',\n      ],\n    },\n    {\n      label: 'T Cells',\n      categories: [\n        'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n        'Jurkat-Engreitz',\n        'CD3-positive_T_cell-Roadmap',\n        'CD4-positive_helper_T_cell-ENCODE',\n        'CD8-positive_alpha-beta_T_cell-Corces2016',\n        'thymus_fetal-Roadmap',\n        'CD4-positive_helper_T_cell-Corces2016',\n        'T-cell-ENCODE',\n      ],\n    },\n    {\n      label: 'Other haematopoietic cells',\n      categories: [\n        'spleen-ENCODE',\n        'K562-Roadmap',\n        'CD56-positive_natural_killer_cells-Roadmap',\n        'erythroblast-Corces2016',\n        'CD34-positive_mobilized-Roadmap',\n        'megakaryocyte-erythroid_progenitor-Corces2016',\n        'natural_killer_cell-Corces2016',\n        'IMR90-Roadmap',\n      ],\n    },\n    {\n      label: 'Fibroblasts',\n      categories: [\n        'foreskin_fibroblast-Roadmap',\n        'fibroblast_of_dermis-Roadmap',\n        'fibroblast_of_arm-ENCODE',\n        'astrocyte-ENCODE',\n        'fibroblast_of_lung-Roadmap',\n      ],\n    },\n    {\n      label: 'Epithelial',\n      categories: [\n        'small_intestine_fetal-Roadmap',\n        'epithelial_cell_of_prostate-ENCODE',\n        'HCT116-ENCODE',\n        'MCF-7-ENCODE',\n        'adrenal_gland_fetal-ENCODE',\n        'H7',\n        'keratinocyte-Roadmap',\n        'MCF10A-Ji2017',\n        'pancreas-Roadmap',\n        'mammary_epithelial_cell-Roadmap',\n        'stomach-Roadmap',\n        'LoVo',\n        'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n        'PC-9-ENCODE',\n        'H1-hESC-Roadmap',\n        'thyroid_gland-ENCODE',\n        'HT29',\n        'MDA-MB-231',\n        'iPS_DF_19.11_Cell_Line-Roadmap',\n        'large_intestine_fetal-Roadmap',\n        'Panc1-ENCODE',\n        'adrenal_gland-ENCODE',\n        'MCF10A_treated_with_TAM24hr-Ji2017',\n        'trophoblast_cell-ENCODE',\n        'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n        'uterus-ENCODE',\n        'body_of_pancreas-ENCODE',\n        'stomach_fetal-Roadmap',\n        'H9-Roadmap',\n        'transverse_colon-ENCODE',\n        'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n        'breast_epithelium-ENCODE',\n        'induced_pluripotent_stem_cell-ENCODE',\n        'LNCAP',\n        'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n        'ovary-Roadmap',\n        'sigmoid_colon-ENCODE',\n        'skeletal_muscle_myoblast-Roadmap',\n        'bipolar_neuron_from_iPSC-ENCODE',\n        'coronary_artery_smooth_muscle_cell-Miller2016',\n        'SK-N-SH-ENCODE',\n        'muscle_of_trunk_fetal-Roadmap',\n      ],\n    },\n    {\n      label: 'Other',\n      categories: [\n        'adipose_tissue-ENCODE',\n        'HeLa-S3-Roadmap',\n        'hepatocyte-ENCODE',\n        'heart_ventricle-ENCODE',\n        'spinal_cord_fetal-ENCODE',\n        'coronary_artery-ENCODE',\n        'HepG2-Roadmap',\n        'muscle_of_leg_fetal-Roadmap',\n        'gastrocnemius_medialis-ENCODE',\n        'brite_adipose-Loft2014',\n        'placenta-Roadmap',\n        'liver-ENCODE',\n        'A673-ENCODE',\n        'white_adipose-Loft2014',\n        'cardiac_muscle_cell-ENCODE',\n        'osteoblast-ENCODE',\n        'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n        'endothelial_cell_of_umbilical_vein-Roadmap',\n        'NCCIT',\n        'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n        'psoas_muscle-Roadmap',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n      ],\n    },\n  ],\n};\n\nexport const DEFAULT_X_DOMAIN_START = 1761366260;\nexport const DEFAULT_X_DOMAIN_END = 1761603836;\n\nexport const DEFAULT_VIEW_CONFIG_ENHANCER = {\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'context',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'combined',\n            uid: 'chroms-viewport',\n            height: 12,\n            contents: [\n              {\n                type: 'horizontal-chromosome-labels',\n                options: {\n                  // tickPositions: 'ends',\n                  color: '#999999',\n                  stroke: 'white',\n                  fontSize: 10,\n                  fontIsLeftAligned: true,\n                  showMousePosition: false,\n                  mousePositionColor: '#000000',\n                },\n                tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n                height: 12,\n                server: 'https://resgen.io/api/v1',\n                uid: 'chroms',\n              },\n              {\n                uid: 'viewport-details-chroms',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 12,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'genes-tss-viewport',\n            height: 48,\n            contents: [\n              {\n                type: 'horizontal-gene-annotations',\n                uid: 'genes',\n                height: 48,\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 10,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 0.5,\n                  showMousePosition: true,\n                  showGlobalMousePosition: true,\n                  mousePositionColor: 'black',\n                },\n              },\n              {\n                type: 'tss',\n                uid: 'tss',\n                height: 48,\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'RefSeqCurated170308bedCollapsedGeneBoundsTSS500bp',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VMZDLKrtQDmJMSjg7Ds4yA',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                uid: 'viewport-details-genes',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 48,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'point-annotation',\n            uid: 'ibd-snps',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 32,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            type: 'stacked-bar',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 72,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: DEFAULT_STRATIFICATION,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n          {\n            type: 'stratified-bed',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 430,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              legendAlign: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorHighlight: '#bf0071',\n              markColorDehighlight: '#bbbbbb',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: DEFAULT_STRATIFICATION,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms-viewport',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes-tss-viewport'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 0,\n            outlineWidth: 0,\n          },\n        },\n        {\n          uid: 'tss-overlays',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [],\n            minWidth: 1,\n            fill: 'black',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: 'black',\n            outlineOpacity: 0.1,\n            outlineWidth: 1,\n            outlinePos: ['left'],\n          },\n        },\n      ],\n      metaTracks: [\n        {\n          uid: 'tss-overlays-meta',\n          type: 'annotation-overlay',\n          overlaysTrack: 'tss-overlays',\n          options: {\n            annotationTracks: ['tss'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n      initialYDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n    },\n  ],\n};\n\nexport const DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY = {\n  zoomFixed: false,\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'details',\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            uid: 'chroms',\n            type: 'horizontal-chromosome-labels',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n            height: 17,\n            options: {\n              // tickPositions: 'ends',\n              color: '#999999',\n              stroke: 'white',\n              fontSize: 10,\n              fontIsLeftAligned: true,\n              showMousePosition: false,\n              mousePositionColor: '#000000',\n            },\n          },\n          {\n            uid: 'genes',\n            type: 'horizontal-gene-annotations',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n            height: 48,\n            options: {\n              fontSize: 9,\n              plusStrandColor: 'black',\n              minusStrandColor: 'black',\n              geneAnnotationHeight: 10,\n              geneLabelPosition: 'outside',\n              geneStrandSpacing: 0.5,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n          {\n            uid: 'ibd-snps',\n            type: 'point-annotation',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 32,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            uid: 'dna-accessibility',\n            type: 'ridge-plot',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'test',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'Uz1_tEABQf-uzktblvBKSQ',\n            // height: 403,\n            height: 131 * (24 - 6) + 6,\n            options: {\n              name: 'DNA Accessibility',\n              labelPosition: 'outerBottom',\n              labelShowResolution: false,\n              labelShowAssembly: false,\n              markArea: true,\n              markColor: '#444444',\n              markResolution: 256,\n              valueScaling: 'exponential',\n              colorRange: ['#ffffff', '#000000'],\n              rowHeight: 24,\n              rowPadding: -6,\n              rowNormalization: true,\n              rowSelections: [\n                120,\n                36,\n                54,\n                20,\n                80,\n                35,\n                101,\n                49,\n                44,\n                23,\n                30,\n                66,\n                5,\n                26,\n                15,\n                105,\n                57,\n                56,\n                74,\n                84,\n                79,\n                93,\n                106,\n                107,\n                34,\n                28,\n                25,\n                55,\n                121,\n                94,\n                58,\n                69,\n                67,\n                63,\n                126,\n                71,\n                72,\n                47,\n                11,\n                46,\n                39,\n                113,\n                29,\n                60,\n                45,\n                76,\n                21,\n                103,\n                129,\n                13,\n                128,\n                90,\n                104,\n                32,\n                109,\n                27,\n                9,\n                130,\n                95,\n                86,\n                53,\n                73,\n                50,\n                48,\n                78,\n                14,\n                92,\n                124,\n                31,\n                114,\n                64,\n                88,\n                12,\n                10,\n                38,\n                68,\n                3,\n                111,\n                70,\n                22,\n                61,\n                98,\n                6,\n                123,\n                118,\n                43,\n                37,\n                65,\n                81,\n                62,\n                33,\n                1,\n                24,\n                122,\n                83,\n                75,\n                112,\n                40,\n                97,\n                16,\n                117,\n                87,\n                19,\n                125,\n                7,\n                102,\n                116,\n                77,\n                8,\n                17,\n                82,\n                115,\n                89,\n                119,\n                18,\n                4,\n                108,\n                59,\n                127,\n                91,\n                0,\n                100,\n                85,\n                110,\n                99,\n                2,\n                96,\n                51,\n                41,\n                52,\n                42,\n              ],\n              rowIdToCategory: {\n                fn: 'replace',\n                args: ['.accessibility', ''],\n              },\n              rowCategories: DEFAULT_STRATIFICATION.groups.reduce(\n                (row, group, index) => {\n                  const category = {\n                    label: group.label,\n                    color: group.axisLabelColor,\n                    background: group.axisLabelBackground,\n                    index,\n                  };\n                  group.categories.forEach((sample) => {\n                    row[sample] = category;\n                  });\n                  return row;\n                },\n                {}\n              ),\n              showRowLabels: true,\n              rowLabelSize: 10,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: ['chroms', 'genes', 'ibd-snps', 'dna-accessibility'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n      initialYDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n    },\n  ],\n};\n","import { identity } from '@flekschas/utils';\nimport queryString from 'query-string';\n\nexport const contains = (a, b) => a[0] <= b[0] && a[1] >= b[1];\n\nexport const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nexport const dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nexport const download = (filename, stringOrBlob) => {\n  const blob =\n    typeof stringOrBlob === 'string'\n      ? new Blob([stringOrBlob], { type: 'application/octet-stream' })\n      : stringOrBlob;\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    const elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n    URL.revokeObjectURL(elem.href);\n  }\n};\n\nexport const getQueryStringValue = (key, decoder = identity) =>\n  decoder(queryString.parse(window.location.search)[key]);\n\nexport const setQueryStringValue = (key, value, encoder = identity) => {\n  const values = queryString.parse(window.location.search);\n  const newQsValue = queryString.stringify(\n    {\n      ...values,\n      [key]: encoder(value),\n    },\n    { strict: false }\n  );\n  const url = `${window.location.origin}${window.location.pathname}?${newQsValue}`;\n  window.history.pushState({ path: url }, '', url);\n};\n\nexport const toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n\nexport const toFixed = (number, decimals, forced) => {\n  let string = number.toFixed(decimals);\n  if (!forced) {\n    while (string[string.length - 1] === '0') {\n      string = string.substring(0, string.length - 1);\n    }\n    if (string[string.length - 1] === '.') {\n      string = string.substring(0, string.length - 1);\n    }\n  }\n  return string;\n};\n\nexport const scaleBand = () => {\n  let domain = [];\n  let fixedBandwidth = null;\n  let bandwidth = 1;\n  let range = [0, 1];\n  let rangeSize = range[1] - range[0];\n  let paddingInner = [];\n  // If `true` the padding will begin before the first bar!\n  let paddingInnerZeroBased = false;\n\n  const sum = (a, b) => a + b;\n\n  const update = () => {\n    rangeSize = range[1] - range[0];\n    bandwidth = (rangeSize - paddingInner.reduce(sum, 0)) / domain.length;\n  };\n\n  const scale = (v) => {\n    const idx = domain.indexOf(v);\n\n    if (idx === -1) return undefined;\n\n    return (\n      idx * (fixedBandwidth || bandwidth) +\n      paddingInner.slice(0, idx + paddingInnerZeroBased).reduce(sum, 0)\n    );\n  };\n\n  scale.domain = (newDomain) => {\n    domain = [...newDomain];\n    update();\n\n    return scale;\n  };\n\n  scale.range = (newRange) => {\n    range = [...newRange];\n    update();\n\n    return scale;\n  };\n\n  scale.bandwidth = () => fixedBandwidth || bandwidth;\n\n  scale.fixedBandwidth = (newFixedBandwidth) => {\n    fixedBandwidth = newFixedBandwidth;\n  };\n\n  scale.paddingInner = (newPaddingInner) => {\n    paddingInner = newPaddingInner;\n    update();\n\n    return scale;\n  };\n\n  scale.paddingInnerZeroBased = (newPaddingInnerZeroBased) => {\n    paddingInnerZeroBased = newPaddingInnerZeroBased;\n    update();\n\n    return scale;\n  };\n\n  return scale;\n};\n\nexport const stringifySvg = (svg) =>\n  new window.XMLSerializer().serializeToString(svg);\n","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import { identity } from '@flekschas/utils';\nimport { axisRight, scaleLinear, scaleLog, select } from 'd3';\nimport PropTypes from 'prop-types';\nimport React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport TinyQueue from 'tinyqueue';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_STRATIFICATION,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n} from './constants';\nimport { scaleBand } from './utils';\nimport usePrevious from './use-previous';\n\nimport './GeneEnhancerPlot.css';\n\nconst useStyles = makeStyles((theme) => ({\n  plot: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  plotSvg: {\n    width: '100%',\n    height: '100%',\n  },\n}));\n\nconst useTooltipStyles = DEFAULT_COLOR_MAP_LIGHT.map((color, i) =>\n  makeStyles((theme) => ({\n    arrow: {\n      color,\n    },\n    tooltip: {\n      color: DEFAULT_COLOR_MAP_DARK[i],\n      backgroundColor: color,\n      boxShadow: '0 0 3px 0 rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(0, 0, 0, 0.05)',\n      '& .value': {\n        color: 'white',\n        background: DEFAULT_COLOR_MAP_DARK[i],\n        padding: '0 0.25em',\n        borderRadius: '0.25rem',\n      },\n    },\n  }))\n);\n\nconst {\n  server,\n  tilesetUid: uuid,\n} = DEFAULT_VIEW_CONFIG_ENHANCER.views[0].tracks.top[3];\n\nconst fetchTile = async (tileId) => {\n  const response = await fetch(`${server}/tiles/?d=${tileId}`);\n  return response.json();\n};\n\nconst categories = {};\nconst samples = {};\n\nDEFAULT_STRATIFICATION.groups.forEach((group, i) => {\n  categories[group.label] = {\n    name: group.label,\n    size: group.categories.length,\n    index: i,\n  };\n\n  group.categories.forEach((category, j) => {\n    samples[category] = {\n      category: categories[group.label],\n      index: j,\n    };\n  });\n});\n\nconst getTileWidth = (tilesetInfo) =>\n  tilesetInfo.max_width / 2 ** tilesetInfo.max_zoom;\n\nconst filterByPosition = (tile, position) =>\n  tile.filter((entry) => position >= entry.xStart && position <= entry.xEnd);\n\n// From https://observablehq.com/@d3/beeswarm\nconst dodge = (data, radius, yScale) => {\n  const radius2 = radius ** 2;\n  const circles = data\n    .map((d) => ({ y: yScale(d.value), data: d }))\n    .sort((a, b) => a.y - b.y);\n  const epsilon = 1e-3;\n  let head = null;\n  let tail = null;\n\n  // Returns true if circle ⟨x,y⟩ intersects with any circle in the queue.\n  function intersects(x, y) {\n    let a = head;\n    while (a) {\n      if (radius2 - epsilon > (a.x - x) ** 2 + (a.y - y) ** 2) {\n        return true;\n      }\n      a = a.next;\n    }\n    return false;\n  }\n\n  // Place each circle sequentially.\n  for (const b of circles) {\n    // Remove circles from the queue that can’t intersect the new circle b.\n    while (head && head.y < b.y - radius2) head = head.next;\n\n    // Choose the minimum non-intersecting tangent.\n    if (intersects((b.x = 0), b.y)) {\n      let a = head;\n      b.x = Infinity;\n      do {\n        const x = a.x + Math.sqrt(radius2 - (a.y - b.y) ** 2);\n        if (x < b.x && !intersects(x, b.y)) b.x = x;\n        a = a.next;\n      } while (a);\n    }\n\n    // Add b to the queue.\n    b.next = null;\n    // eslint-disable-next-line no-multi-assign\n    if (head === null) head = tail = b;\n    // eslint-disable-next-line no-multi-assign\n    else tail = tail.next = b;\n  }\n\n  return circles;\n};\n\nconst plotEnhancerGeneConnections = (\n  node,\n  width,\n  data,\n  {\n    geneCellEncoding = 'distribution',\n    prevGeneCellEncoding,\n    genePadding = false,\n    openTooltip = identity,\n    closeTooltip = identity,\n    tooltipClasses = [],\n    position = '',\n    variant = null,\n  } = {}\n) => {\n  if (!width || !data) return;\n\n  const svg = select(node);\n\n  const paddingTop = 60;\n  const paddingBottom = 60;\n  const circleRadius = 1;\n  const circlePadding = 0.5;\n  const rowHeight = 36;\n  const geneLabelPadding = 3;\n  const beeswarmPadding = 1;\n  const distanceBarWidth = 6;\n  const distPaddingRange = [0, 20];\n  const height =\n    Object.values(categories).length * rowHeight + paddingTop + paddingBottom;\n\n  svg.attr('viewbox', `0 0 ${width} ${height}`).attr('height', height);\n\n  const maxCatgorySize = Object.values(data.categoryAggregation).reduce(\n    (max, cat) => Math.max(max, cat.numEnhancers),\n    0\n  );\n  const categorySizeScale = scaleLog()\n    .domain([1, maxCatgorySize])\n    .range([2, rowHeight])\n    .clamp(true);\n\n  const percentScale = scaleLinear()\n    .domain([0, 1])\n    .range([0, rowHeight])\n    .clamp(true);\n\n  const circleYScalePre = scaleLinear()\n    .domain([0, 1])\n    .range([1, 10])\n    .clamp(true);\n\n  const circleYScalePost = scaleLog()\n    .domain([1, 10])\n    .range([\n      rowHeight - circleRadius - beeswarmPadding,\n      circleRadius + beeswarmPadding,\n    ]);\n\n  const circleYScale = (v) => circleYScalePost(circleYScalePre(v));\n\n  // ---------------------------------------------------------------------------\n  // Gene setup\n  const geneContainerWidth = width / 2 - rowHeight;\n  const maxGenes = Math.floor(geneContainerWidth / rowHeight);\n\n  const genesUpstream = data.genesUpstreamByDist.slice(0, maxGenes).reverse();\n  const genesDownstream = data.genesDownstreamByDist.slice(0, maxGenes);\n\n  const [minRelDistance, maxRelDistance] = [\n    ...genesUpstream,\n    ...genesDownstream,\n  ].reduce(\n    (minMax, gene) => [\n      Math.min(minMax[0], gene.relDistance),\n      Math.max(minMax[1], gene.relDistance),\n    ],\n    [Infinity, 0]\n  );\n\n  const paddingScale = scaleLinear()\n    .domain([minRelDistance, maxRelDistance])\n    .range(distPaddingRange);\n\n  const genesUpstreamPadding = genePadding\n    ? genesUpstream.map((d) => Math.round(paddingScale(d.relDistance)))\n    : [];\n  const genesUpstreamScale = scaleBand()\n    .domain(genesUpstream.map((d) => d.name))\n    .range([0, width / 2 - rowHeight / 2])\n    .paddingInner(genesUpstreamPadding);\n\n  const genesDownstreamPadding = genePadding\n    ? genesDownstream.map((d) => Math.round(paddingScale(d.relDistance)))\n    : [];\n  const genesDownstreamScale = scaleBand()\n    .domain(genesDownstream.map((d) => d.name))\n    .range([0, width / 2 - rowHeight / 2])\n    .paddingInner(genesDownstreamPadding)\n    .paddingInnerZeroBased(true);\n\n  const bandwidth = Math.min(\n    genesUpstreamScale.bandwidth(),\n    genesDownstreamScale.bandwidth()\n  );\n\n  genesUpstreamScale.fixedBandwidth(bandwidth);\n  genesDownstreamScale.fixedBandwidth(bandwidth);\n\n  const minVisibleAbsDist = Math.min(\n    genesUpstream.reduce(\n      (minDist, gene) => Math.min(minDist, gene.absDistance),\n      Infinity\n    ),\n    genesDownstream.reduce(\n      (minDist, gene) => Math.min(minDist, gene.absDistance),\n      Infinity\n    )\n  );\n\n  const maxVisibleAbsDist = Math.max(\n    genesUpstream.reduce(\n      (maxDist, gene) => Math.max(maxDist, gene.absDistance),\n      0\n    ),\n    genesDownstream.reduce(\n      (maxDist, gene) => Math.max(maxDist, gene.absDistance),\n      0\n    )\n  );\n\n  const distanceHeightScale = scaleLinear()\n    .domain([minVisibleAbsDist, maxVisibleAbsDist])\n    .range([2, paddingBottom]);\n\n  const plotBeeswarm = (selection, { isRightAligned = false } = {}) => {\n    selection\n      .attr(\n        'fill',\n        (d, i) => DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n      )\n      .selectAll('circle')\n      .data((d) => dodge(d, circleRadius * 2 + circlePadding, circleYScale))\n      .join('circle')\n      .attr('cx', (d) =>\n        isRightAligned\n          ? genesUpstreamScale.bandwidth() - (d.x + 2 * beeswarmPadding)\n          : d.x + circleRadius + beeswarmPadding\n      )\n      .attr('cy', (d) => d.y)\n      .attr('r', circleRadius);\n  };\n\n  const getArrayNumCols = (genes) => {\n    const maxSize = Object.values(genes[0].samplesByCategory).reduce(\n      (max, cat) => Math.max(max, cat.size),\n      0\n    );\n    return Math.ceil(Math.sqrt((maxSize * bandwidth) / rowHeight));\n  };\n\n  const plotArray = (\n    selection,\n    numCols,\n    {\n      instanceCache = {},\n      onMouseEnter = identity,\n      onMouseLeave = identity,\n      tooltipTitleGetter = null,\n    } = {}\n  ) => {\n    const cellSize = bandwidth / numCols;\n\n    const indexToX = (index) => (index % numCols) * cellSize;\n    const indexToY = (index) => Math.floor(index / numCols) * cellSize;\n\n    instanceCache.current = selection\n      .attr(\n        'fill',\n        (d, i) => DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n      )\n      .selectAll('rect')\n      .data(\n        (d) => d,\n        (d) => `${d.gene}|${d.sample}`\n      )\n      .join('rect')\n      .attr('x', (d) => indexToX(samples[d.sample].index))\n      .attr('y', (d) => indexToY(samples[d.sample].index))\n      .attr('width', cellSize)\n      .attr('height', cellSize)\n      .on('mouseenter', (event, d) => {\n        const bBox = event.target.getBoundingClientRect();\n        const title =\n          (tooltipTitleGetter && tooltipTitleGetter(d)) || d.value.toFixed(3);\n        openTooltip(bBox.x + bBox.width / 2, bBox.y, title, {\n          arrow: true,\n          placement: 'top',\n          classes:\n            tooltipClasses[\n              categories[d.sampleCategory].index % tooltipClasses.length\n            ],\n        });\n        onMouseEnter(d);\n      })\n      .on('mouseleave', (d) => {\n        closeTooltip();\n        onMouseLeave(d);\n      });\n  };\n\n  const arrayTooltipTitleGetter = (d) => (\n    <React.Fragment>\n      The enhancer overlapping <strong>{position}</strong>\n      {variant ? ` (${variant})` : ''} is predicted to regulate{' '}\n      <strong>{d.gene}</strong> in sample <strong>{d.sample}</strong> with a\n      score of <strong className=\"value\">{d.value.toFixed(3)}</strong>.\n    </React.Fragment>\n  );\n\n  const geneArrayInstances = {\n    upstream: { current: null },\n    downstream: { current: null },\n  };\n\n  const geneArrayInstanceMouseEnterHandler = (dHovering) => {\n    const opacity = (d) => (d.sample === dHovering.sample ? 1 : 0.2);\n    geneArrayInstances.upstream.current.attr('opacity', opacity);\n    geneArrayInstances.downstream.current.attr('opacity', opacity);\n  };\n\n  const geneArrayInstanceMouseLeaveHandler = () => {\n    geneArrayInstances.upstream.current.attr('opacity', 1);\n    geneArrayInstances.downstream.current.attr('opacity', 1);\n  };\n\n  const plotBox = (\n    selection,\n    valueScale,\n    valueGetter,\n    {\n      cellWidth = rowHeight,\n      fillColor = DEFAULT_COLOR_MAP_LIGHT,\n      textColor = DEFAULT_COLOR_MAP_DARK,\n      showText = true,\n      showZero = true,\n      showTooltip = false,\n      tooltipTitleGetter = null,\n    } = {}\n  ) => {\n    const bg = selection\n      .selectAll('.bg')\n      .data((d) => [d])\n      .join('rect')\n      .attr('class', 'bg')\n      .attr('fill', (d) => fillColor[d.row % fillColor.length])\n      .attr('x', (d) => (cellWidth - valueScale(valueGetter(d))) / 2)\n      .attr('y', (d) => (rowHeight - valueScale(valueGetter(d))) / 2)\n      .attr('width', (d) => valueScale(valueGetter(d)))\n      .attr('height', (d) => valueScale(valueGetter(d)))\n      .attr('opacity', (d) => +(valueGetter(d) > 0));\n\n    if (showTooltip) {\n      bg.on('mouseenter', (event, d) => {\n        const bBox = event.target.getBoundingClientRect();\n        const title =\n          (tooltipTitleGetter && tooltipTitleGetter(d)) || valueGetter(d);\n        openTooltip(bBox.x + bBox.width / 2, bBox.y, title, {\n          arrow: true,\n          placement: 'top',\n          classes: tooltipClasses[d.row % tooltipClasses.length],\n        });\n      }).on('mouseleave', () => {\n        closeTooltip();\n      });\n    } else {\n      bg.on('mouseenter', null).on('mouseleave', null);\n    }\n\n    if (showText) {\n      selection\n        .selectAll('.box-text')\n        .data((d) => [d])\n        .join('text')\n        .attr('class', 'box-text')\n        .attr('fill', (d) => textColor[d.row % textColor.length])\n        .attr('style', 'font-size: 12px; font-weight: bold;')\n        .attr('dominant-baseline', 'middle')\n        .attr('text-anchor', 'middle')\n        .attr('x', cellWidth / 2)\n        .attr('y', rowHeight / 2)\n        .attr('opacity', (d) => +(valueGetter(d) > 0 || showZero))\n        .text((d) => valueGetter(d));\n    }\n  };\n\n  const boxTooltipTitleGetter = (d) => (\n    <React.Fragment>\n      <strong className=\"value\">{d.length}</strong> out of {d.size}{' '}\n      <em>{Object.values(categories)[d.row].name}</em> samples have predicted\n      enhancer activity.\n    </React.Fragment>\n  );\n\n  // ---------------------------------------------------------------------------\n  // Category summary\n  const enhancerG = svg\n    .select('#enhancers')\n    .attr('transform', `translate(${width / 2 - rowHeight / 2}, 0)`);\n\n  // Draw background\n  const enhancerGCellG = enhancerG\n    .selectAll('.enhancer-gene-aggregate')\n    .data(\n      Object.values(data.categoryAggregation).map((d, i) => {\n        // Little hacky but necessary unfortunately\n        d.row = i;\n        return d;\n      }),\n      (d) => d.category.name\n    )\n    .join('g')\n    .attr('class', 'enhancer-gene-aggregate')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  plotBox(enhancerGCellG, categorySizeScale, (d) => d.numEnhancers);\n\n  // Draw border\n  svg\n    .select('#enhancers')\n    .selectAll('.enhancer-box-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'enhancer-box-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', rowHeight)\n    .attr('height', rowHeight);\n\n  // ---------------------------------------------------------------------------\n  // Draw upstream genes\n\n  const genesUpstreamG = svg\n    .select('#genes-upstream')\n    .selectAll('.gene-upstream')\n    .data(genesUpstream, (d) => d.name)\n    .join('g')\n    .attr('class', 'gene-upstream')\n    .attr('transform', (d) => `translate(${genesUpstreamScale(d.name)}, 0)`);\n\n  // Draw labels\n  const geneLabelX = genesUpstreamScale.bandwidth() / 2;\n  const geneLabelY = paddingTop - geneLabelPadding;\n  genesUpstreamG\n    // the join is needed to avoid appending more and more text elements on\n    // subsequent calls of this function, which would happen if we used\n    // `append()` instead.\n    .selectAll('.gene-upstream-label')\n    .data((d) => [d])\n    .join('text')\n    .attr('class', 'gene-label gene-upstream-label')\n    .attr('style', 'font-size: 9px;')\n    .attr('transform', `translate(${geneLabelX},${geneLabelY}) rotate(-90)`)\n    .attr('fill', 'black')\n    .attr('dominant-baseline', 'middle')\n    .text((d) => d.name);\n\n  // Draw cell\n  const genesUpstreamGCellG = genesUpstreamG\n    .selectAll('.gene-upstream-cell')\n    .data(\n      (d) =>\n        Object.values(d.samplesByCategory).map((item, i) => {\n          // Little hacky but necessary unfortunately\n          item.row = i;\n          return item;\n        }),\n      (d) => d.name\n    )\n    .join('g')\n    .attr('class', 'gene-upstream-cell')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  if (geneCellEncoding !== prevGeneCellEncoding) {\n    genesUpstreamGCellG.selectAll('*').remove();\n  }\n\n  switch (geneCellEncoding) {\n    case 'distribution':\n      plotBeeswarm(genesUpstreamGCellG, { isRightAligned: true });\n      break;\n\n    case 'array':\n      plotArray(genesUpstreamGCellG, getArrayNumCols(genesUpstream), {\n        tooltipTitleGetter: arrayTooltipTitleGetter,\n        instanceCache: geneArrayInstances.upstream,\n        onMouseEnter: geneArrayInstanceMouseEnterHandler,\n        onMouseLeave: geneArrayInstanceMouseLeaveHandler,\n      });\n      break;\n\n    case 'number':\n    case 'percent':\n    default: {\n      const valueScale =\n        geneCellEncoding === 'percent' ? percentScale : categorySizeScale;\n\n      const valueGetter =\n        geneCellEncoding === 'percent'\n          ? (d) => d.length / d.size\n          : (d) => d.length;\n\n      plotBox(genesUpstreamGCellG, valueScale, valueGetter, {\n        showText: false,\n        cellWidth: genesUpstreamScale.bandwidth(),\n        fillColor: DEFAULT_COLOR_MAP,\n        showTooltip: true,\n        tooltipTitleGetter: boxTooltipTitleGetter,\n      });\n\n      break;\n    }\n  }\n\n  // Draw border\n  genesUpstreamG\n    .selectAll('.gene-upstream-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'gene-upstream-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', genesUpstreamScale.bandwidth())\n    .attr('height', rowHeight);\n\n  // Draw distance bars\n  genesUpstreamG\n    // Same reason we're using a join here as for the text labels above\n    .selectAll('.gene-upstream-distance-bar')\n    .data((d) => [d])\n    .join('rect')\n    .attr('class', 'gene-upstream-distance-bar')\n    .attr('fill', '#bbbbbb')\n    .attr('x', genesUpstreamScale.bandwidth() / 2 - distanceBarWidth / 2)\n    .attr('y', Object.values(categories).length * rowHeight + paddingTop)\n    .attr('width', distanceBarWidth)\n    .attr('height', (d) => distanceHeightScale(d.absDistance));\n\n  // ---------------------------------------------------------------------------\n  // Draw downstream genes\n  svg\n    .select('#genes-downstream')\n    .attr('transform', `translate(${width / 2 + rowHeight / 2}, 0)`);\n\n  const genesDownstreamG = svg\n    .select('#genes-downstream')\n    .selectAll('.gene-downstream')\n    .data(genesDownstream, (d) => d.name)\n    .join('g')\n    .attr('class', 'gene-downstream')\n    .attr('transform', (d) => `translate(${genesDownstreamScale(d.name)}, 0)`);\n\n  // Draw labels\n  genesDownstreamG\n    .selectAll('.gene-downstream-label')\n    .data((d) => [d])\n    .join('text')\n    .attr('class', 'gene-label gene-downstream-label')\n    .attr('style', 'font-size: 9px;')\n    .attr('transform', `translate(${geneLabelX},${geneLabelY}) rotate(-90)`)\n    .attr('fill', 'black')\n    .attr('dominant-baseline', 'middle')\n    .text((d) => d.name);\n\n  // Draw cell\n  const genesDownstreamGCellG = genesDownstreamG\n    .selectAll('.gene-downstream-cell')\n    .data(\n      (d) =>\n        Object.values(d.samplesByCategory).map((item, i) => {\n          // Little hacky but necessary unfortunately\n          item.row = i;\n          return item;\n        }),\n      (d) => d.name\n    )\n    .join('g')\n    .attr('class', 'gene-downstream-cell')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  if (geneCellEncoding !== prevGeneCellEncoding) {\n    genesDownstreamGCellG.selectAll('*').remove();\n  }\n\n  switch (geneCellEncoding) {\n    case 'distribution':\n      plotBeeswarm(genesDownstreamGCellG);\n      break;\n\n    case 'array':\n      plotArray(genesDownstreamGCellG, getArrayNumCols(genesDownstream), {\n        tooltipTitleGetter: arrayTooltipTitleGetter,\n        instanceCache: geneArrayInstances.downstream,\n        onMouseEnter: geneArrayInstanceMouseEnterHandler,\n        onMouseLeave: geneArrayInstanceMouseLeaveHandler,\n      });\n      break;\n\n    case 'number':\n    case 'percent':\n    default: {\n      const valueScale =\n        geneCellEncoding === 'percent' ? percentScale : categorySizeScale;\n\n      const valueGetter =\n        geneCellEncoding === 'percent'\n          ? (d) => d.length / d.size\n          : (d) => d.length;\n\n      plotBox(genesDownstreamGCellG, valueScale, valueGetter, {\n        showText: false,\n        cellWidth: genesDownstreamScale.bandwidth(),\n        fillColor: DEFAULT_COLOR_MAP,\n        showTooltip: true,\n        tooltipTitleGetter: boxTooltipTitleGetter,\n      });\n\n      break;\n    }\n  }\n\n  // Draw border\n  genesDownstreamG\n    .selectAll('.gene-downstream-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'gene-downstream-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', genesDownstreamScale.bandwidth())\n    .attr('height', rowHeight);\n\n  // Draw distance bars\n  genesDownstreamG\n    // Same reason we're using a join here as for the text labels above\n    .selectAll('.gene-downstream-distance-bar')\n    .data((d) => [d])\n    .join('rect')\n    .attr('class', 'gene-downstream-distance-bar')\n    .attr('fill', '#bbbbbb')\n    .attr('x', genesDownstreamScale.bandwidth() / 2 - distanceBarWidth / 2)\n    .attr('y', Object.values(categories).length * rowHeight + paddingTop)\n    .attr('width', distanceBarWidth)\n    .attr('height', (d) => distanceHeightScale(d.absDistance));\n\n  // ---------------------------------------------------------------------------\n  // Draw gene distance axis\n\n  const distRange = Math.ceil((maxVisibleAbsDist - minVisibleAbsDist) / 1e5);\n  const distStep = Math.ceil(distRange / 4);\n  const tickValues =\n    distRange <= 1\n      ? [minVisibleAbsDist, maxVisibleAbsDist]\n      : Array(4)\n          .fill()\n          .map(\n            (v, i) =>\n              Math.ceil(minVisibleAbsDist / 1e5) * 1e5 + i * (distStep * 1e5)\n          );\n\n  svg\n    .select('#gene-distance-axis')\n    .attr(\n      'transform',\n      `translate(0, ${\n        Object.values(categories).length * rowHeight + paddingTop\n      })`\n    )\n    .call(\n      axisRight(distanceHeightScale)\n        .tickSize(width)\n        .tickFormat(function geneDistanceAxisTickFormat(d) {\n          const s = (d / 1e5).toFixed(0);\n          return this.parentNode.nextSibling\n            ? s\n            : `${s} kbps distance to enhancer`;\n        })\n        .tickValues(tickValues)\n    )\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .selectAll('.tick line')\n        .attr('stroke', '#bbbbbb')\n        .attr('stroke-width', 0.5)\n        .attr('stroke-dasharray', '4,4')\n    )\n    .call((g) =>\n      g\n        .selectAll('.tick text')\n        .attr('fill', '#bbbbbb')\n        .attr('x', width / 2)\n        .attr('dy', 1)\n        .attr('text-anchor', 'middle')\n        .attr('dominant-baseline', 'hanging')\n    );\n};\n\nconst EnhancerGenePlot = ({\n  geneCellEncoding,\n  position,\n  relPosition,\n  fullPosition,\n  genePadding,\n  openTooltip,\n  closeTooltip,\n  styles,\n  svgRef,\n  variant,\n} = {}) => {\n  const [plotEl, setPlotEl] = useState(null);\n  const [tile, setTile] = useState(null);\n  const [tilesetInfo, setTilesetInfo] = useState(null);\n  const [width, setWidth] = useState(null);\n  const prevWidth = usePrevious(width);\n  const prevGeneCellEncoding = usePrevious(geneCellEncoding);\n\n  useEffect(() => {\n    let active = true;\n\n    if (position === null || tilesetInfo === null) return undefined;\n\n    const tileWidth = getTileWidth(tilesetInfo);\n    const tileXPos = Math.floor(position / tileWidth);\n    const tileId = `${uuid}.${tilesetInfo.max_zoom}.${tileXPos}`;\n\n    fetchTile(tileId).then((_tile) => {\n      if (active) setTile(filterByPosition(_tile[tileId], position));\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [position, tilesetInfo]);\n\n  const plotElRef = useCallback(\n    (node) => {\n      setPlotEl(node);\n      svgRef.current = node;\n    },\n    [svgRef]\n  );\n\n  // Derived State\n  const isInit = useMemo(() => !!tilesetInfo, [tilesetInfo]);\n\n  const data = useMemo(\n    () => {\n      if (!tile) return undefined;\n\n      let maxScore = 0;\n      let minAbsDistance = Infinity;\n      let maxAbsDistance = 0;\n      const genes = {};\n      const categoryAggregation = {};\n\n      Object.entries(categories).forEach(([name, category]) => {\n        categoryAggregation[name] = {\n          category,\n          numEnhancers: 0,\n        };\n      });\n\n      const distComparator = (a, b) => a.absDistance - b.absDistance;\n      const genesUpstreamByDist = new TinyQueue([], distComparator);\n      const genesDownstreamByDist = new TinyQueue([], distComparator);\n\n      tile.forEach((entry) => {\n        const geneName = entry.fields[6];\n\n        if (!genes[geneName]) {\n          const relGenePos = +entry.fields[4];\n          const distance = relGenePos - relPosition;\n          const isDownstream = distance > 0;\n          const absDistance = Math.abs(distance);\n          genes[geneName] = {\n            name: geneName,\n            position: relGenePos,\n            absDistance,\n            isDownstream,\n            samplesByCategory: {},\n          };\n\n          Object.values(categories).forEach(({ name, size }) => {\n            genes[geneName].samplesByCategory[name] = [];\n            genes[geneName].samplesByCategory[name].size = size;\n          });\n\n          minAbsDistance = Math.min(minAbsDistance, absDistance);\n          maxAbsDistance = Math.max(maxAbsDistance, absDistance);\n\n          if (isDownstream) genesDownstreamByDist.push(genes[geneName]);\n          else genesUpstreamByDist.push(genes[geneName]);\n        }\n\n        const sample = entry.fields[10];\n        genes[geneName].samplesByCategory[samples[sample].category.name].push({\n          gene: geneName,\n          sample,\n          sampleCategory: samples[sample].category.name,\n          value: entry.importance,\n        });\n        maxScore = Math.max(maxScore, entry.importance);\n        categoryAggregation[samples[sample].category.name].numEnhancers++;\n      });\n\n      const genesDownstreamByDistArr = [];\n      while (genesDownstreamByDist.length)\n        genesDownstreamByDistArr.push(genesDownstreamByDist.pop());\n\n      const genesUpstreamByDistArr = [];\n      while (genesUpstreamByDist.length)\n        genesUpstreamByDistArr.push(genesUpstreamByDist.pop());\n\n      genesDownstreamByDistArr.forEach((gene, i) => {\n        const prevGene = genesDownstreamByDistArr[i - 1];\n        gene.relDistance =\n          gene.position - ((prevGene && prevGene.position) || relPosition);\n      });\n\n      genesUpstreamByDistArr.forEach((gene, i) => {\n        const prevGene = genesDownstreamByDistArr[i - 1];\n        gene.relDistance =\n          ((prevGene && prevGene.position) || relPosition) - gene.position;\n      });\n\n      return {\n        minAbsDistance,\n        maxAbsDistance,\n        maxScore,\n        genes,\n        genesDownstreamByDist: genesDownstreamByDistArr,\n        genesUpstreamByDist: genesUpstreamByDistArr,\n        categoryAggregation,\n      };\n    },\n    // `relPosition` is excluded on purpose because `tile` is already updated\n    // when `relPosition` updates\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tile]\n  );\n\n  // Initialization\n  useEffect(\n    () => {\n      (async () => {\n        const response = await fetch(`${server}/tileset_info/?d=${uuid}`);\n        const results = await response.json();\n\n        if (results[uuid]) setTilesetInfo(results[uuid]);\n      })();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  // Rendering\n  const classes = useStyles();\n\n  useLayoutEffect(\n    () => {\n      if (!plotEl) return undefined;\n\n      const measure = () =>\n        window.requestAnimationFrame(() => {\n          const currWidth = plotEl.getBoundingClientRect().width;\n          if (currWidth !== prevWidth) setWidth(currWidth);\n        });\n\n      measure();\n\n      window.addEventListener('resize', measure);\n      window.addEventListener('orientationchange', measure);\n\n      return () => {\n        window.removeEventListener('resize', measure);\n        window.removeEventListener('orientationchange', measure);\n      };\n    },\n    // `prevWidth` is ommitted on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [plotEl]\n  );\n\n  const tooltipClasses = [];\n  for (let i = 0; i < useTooltipStyles.length; i++) {\n    tooltipClasses.push(useTooltipStyles[i]());\n  }\n\n  useEffect(\n    () => {\n      plotEnhancerGeneConnections(plotEl, width, data, {\n        geneCellEncoding,\n        prevGeneCellEncoding,\n        genePadding,\n        openTooltip,\n        closeTooltip,\n        classes,\n        tooltipClasses,\n        position: fullPosition,\n        variant,\n      });\n    },\n    // `prevGeneCellEncoding` is ommitted on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      plotEl,\n      width,\n      data,\n      geneCellEncoding,\n      genePadding,\n      openTooltip,\n      closeTooltip,\n    ]\n  );\n\n  return (\n    <Grid container style={styles}>\n      {isInit ? (\n        <Grid item className={classes.plot}>\n          <svg ref={plotElRef} className={classes.plotSvg}>\n            <g id=\"enhancers\"></g>\n            <g id=\"gene-distance-axis\"></g>\n            <g id=\"genes-upstream\"></g>\n            <g id=\"genes-downstream\"></g>\n          </svg>\n        </Grid>\n      ) : (\n        <CircularProgress />\n      )}\n    </Grid>\n  );\n};\n\nEnhancerGenePlot.defaultProps = {\n  geneCellEncoding: 'distribution',\n  position: null,\n  relPosition: null,\n  fullPosition: null,\n  variant: null,\n  genePadding: false,\n  openTooltip: identity,\n  closeTooltip: identity,\n  styles: {},\n  svgRef: {},\n};\n\nEnhancerGenePlot.propTypes = {\n  geneCellEncoding: PropTypes.oneOf([\n    'number',\n    'percent',\n    'distribution',\n    'array',\n  ]),\n  position: PropTypes.number,\n  relPosition: PropTypes.number,\n  fullPosition: PropTypes.string,\n  variant: PropTypes.string,\n  genePadding: PropTypes.bool,\n  openTooltip: PropTypes.func,\n  closeTooltip: PropTypes.func,\n  styles: PropTypes.object,\n  svgRef: PropTypes.object,\n};\n\nexport default EnhancerGenePlot;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: '100%',\n    padding: '0.1em',\n    alignItems: 'center',\n    fontSize: '1em',\n    lineHeight: '1em',\n    fontWeight: 'bold',\n  },\n  logoAbc: {\n    fontSize: '2.75em',\n    letterSpacing: '-0.1rem',\n    paddingRight: '0.1em',\n  },\n  logoEnhancer: {\n    alignItems: 'flex-start',\n  },\n}));\n\nconst Logo = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.logo} style={props.styles}>\n      <Grid item className={classes.logoAbc}>\n        ABC\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" className={classes.logoEnhancer}>\n          <Grid item>Enhancer-Gene</Grid>\n          <Grid item>Connections</Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nLogo.defaultProps = {\n  styles: {},\n};\n\nLogo.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Logo;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { identity } from '@flekschas/utils';\n\nimport useDebounce from './use-debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    background: 'white !important',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    '&::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 0)',\n      transition: 'boxShadow 0.2s ease',\n    },\n    '&:hover::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n    },\n  },\n  focused: {\n    boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n  },\n  input: {\n    height: 35,\n    padding: '6px 0 6px',\n  },\n  textFieldRoot: {\n    '& .MuiFormLabel-root': {\n      color: 'black',\n      fontWeight: 'bold',\n      transform: 'translate(12px, 21px) scale(1.25)',\n    },\n    '& .MuiInputLabel-shrink': {\n      fontWeight: 'normal',\n    },\n  },\n}));\n\nconst fetchJsonFromUrl = async (url, query) => {\n  if (typeof url === 'string') {\n    const response = await fetch(`${url}&ac=${query || ''}`);\n    return response.json();\n  }\n  const response = await fetch(`${url.url}&ac=${query || ''}`);\n  const results = await response.json();\n  return results.map((result) => {\n    result.type = url.type;\n    return result;\n  });\n};\n\nfunction GeneIcon(props) {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <path d=\"M5.03 14.378A7.33 7.33 0 003.423 16h2.42a7.762 7.762 0 011.281-.774 13.241 13.241 0 01-1.863-1.016c-.078.054-.156.11-.233.168zM5.766 0l.219.174a8.754 8.754 0 001.636.92l.024.008c.797.24 1.507.627 2.023.933.325.18.674.4 1.024.66 1.825 1.363 2.79 3.22 2.79 5.367 0 2.062-.962 3.89-2.782 5.286-.061.048-.125.094-.186.139a10.45 10.45 0 00-1.895-.955 8.17 8.17 0 001.69-1.162h-3.92a6.191 6.191 0 01-1.199-1.15h6.093a4.054 4.054 0 00.603-1.747H3.839c.072.656.307 1.239.636 1.747h.011c.282.438.628.822.991 1.15H5.47l.74.584c.831.588 1.573.893 1.636.92a9.358 9.358 0 012.847 1.504A7.38 7.38 0 0112.3 16H9.879l-.759-.5a7.876 7.876 0 00-1.256-.594 11.833 11.833 0 01-2.07-1.04l.017-.009c-1.567-.999-3.571-2.851-3.571-5.794 0-2.149.964-4.005 2.79-5.367.076-.058.154-.113.231-.167.495.32 1.143.698 1.863 1.015a7.677 7.677 0 00-1.296.786c-.043.032-.083.066-.125.098h3.318c.535.336.999.727 1.364 1.149H4.598a4.215 4.215 0 00-.721 1.748h7.97l-.038-.195a3.527 3.527 0 00-.306-.904 4.417 4.417 0 00-.378-.65l-.01-.007a5.793 5.793 0 00-1.081-1.13l-.14-.109a7.236 7.236 0 00-.722-.48l-.031-.02a7.942 7.942 0 00-1.276-.607 10.278 10.278 0 01-1.257-.57C5.728 2.218 4.31 1.364 3.281 0h2.486zm6.267 0a7.808 7.808 0 01-1.743 1.707A10.443 10.443 0 008.396.752 8.592 8.592 0 009.592 0h2.442z\" />\n    </SvgIcon>\n  );\n}\n\nfunction GeneOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <GeneIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction VariantOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <FlashOnIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction Option(props) {\n  if (props.option.type === 'gene') return <GeneOption option={props.option} />;\n  if (props.option.type === 'variant')\n    return <VariantOption option={props.option} />;\n  return <div>{props.option.geneName}</div>;\n}\n\nexport default function SearchField(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(props.inputValue);\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const loading = open && options.length === 0;\n  const classes = useStyles();\n  const autocompleteClasses = { ...classes };\n  delete autocompleteClasses.textFieldRoot;\n\n  const { customSearch, searchUrl } = props;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!open) return undefined;\n\n    setOptions([]);\n\n    const whenResults = Array.isArray(searchUrl)\n      ? searchUrl.map((url) => fetchJsonFromUrl(url, debouncedSearchQuery))\n      : [fetchJsonFromUrl(searchUrl, debouncedSearchQuery)];\n\n    if (customSearch) whenResults.push(customSearch(debouncedSearchQuery));\n\n    Promise.all(whenResults).then((results) => {\n      if (active) setOptions(results.flat().filter(identity));\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [searchUrl, customSearch, open, debouncedSearchQuery]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const value =\n    props.multiple && !Array.isArray(props.value) ? [props.value] : props.value;\n\n  let autocompleteOptions = value && options.length === 0 ? value : options;\n  autocompleteOptions = Array.isArray(autocompleteOptions)\n    ? autocompleteOptions\n    : [autocompleteOptions];\n\n  return (\n    <Autocomplete\n      classes={props.larger ? autocompleteClasses : {}}\n      multiple={props.multiple}\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      value={value}\n      onInputChange={(event, newInputValue) => {\n        if (event) setSearchQuery(newInputValue);\n      }}\n      fullWidth={props.fullWidth}\n      style={{ width: props.fullWidth ? 'auto' : props.width }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, _value) =>\n        option.geneName === _value.geneName\n      }\n      getOptionLabel={(option) => (option ? option.geneName : '')}\n      options={autocompleteOptions}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          className={props.larger ? classes.textFieldRoot : ''}\n          id={props.id}\n          label={props.label}\n          variant={props.variant}\n          size={props.size}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n      renderOption={(option) => <Option option={option} />}\n      renderTags={(v, getTagProps) =>\n        v.map((option, index) => (\n          <Chip\n            icon={option.type === 'gene' ? <GeneIcon /> : <FlashOnIcon />}\n            key={option.geneName}\n            label={option.geneName}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n    />\n  );\n}\n\nSearchField.defaultProps = {\n  fullWidth: true,\n  id: '',\n  label: '',\n  multiple: false,\n  onChange: identity,\n  size: 'small',\n  value: null,\n  variant: 'outlined',\n  width: '10rem',\n};\n\nSearchField.propTypes = {\n  customSearch: PropTypes.func,\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  searchUrl: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          url: PropTypes.string,\n          type: PropTypes.string,\n        }),\n        PropTypes.string,\n      ])\n    ),\n    PropTypes.string,\n  ]).isRequired,\n  size: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  variant: PropTypes.string,\n  width: PropTypes.string,\n};\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Logo from './Logo';\n\nconst useStyles = makeStyles((theme) => ({\n  note: {\n    color: theme.palette.grey['400'],\n    marginTop: '1em',\n  },\n  showTutorial: {\n    minWidth: '10.5rem',\n    marginRight: '0.5rem',\n  },\n  startExploring: {\n    minWidth: '10.5rem',\n    marginLeft: '0.5rem',\n    color: 'white',\n    background: '#cc0078 linear-gradient(45deg, #cc0078 30%, #cc0066 90%)',\n    boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .3)',\n    '&:hover': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n      background: '#d90080 linear-gradient(45deg, #d90080 30%, #d9006c 90%)',\n    },\n    '&:focus': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n    },\n  },\n}));\n\nconst Welcome = (props) => {\n  const [tutorial, setTutorial] = useState(false);\n\n  const classes = useStyles();\n\n  if (tutorial)\n    return (\n      <React.Fragment>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <Typography align=\"center\">\n          <Button\n            className={classes.startExploring}\n            onClick={props.infoCloseHandler}\n            variant=\"contained\"\n            disableElevation\n          >\n            Start Exploring!\n          </Button>\n        </Typography>\n        <Typography align=\"center\" className={classes.note}>\n          <em>\n            You can reopen this tutorial by clicking on \"ABC Enhancer-Gene\n            Connections\" in the upper left corner!\n          </em>\n        </Typography>\n      </React.Fragment>\n    );\n\n  return (\n    <React.Fragment>\n      <Typography\n        id=\"info-title\"\n        align=\"center\"\n        variant=\"h5\"\n        component=\"h2\"\n        noWrap\n      >\n        <Logo\n          styles={{\n            width: 'auto',\n          }}\n        />\n      </Typography>\n      <p id=\"info-description\">\n        This web application visualizes genome-wide enhancer-gene interactions\n        that were predicted with the <em>Activity-By-Contact</em> (ABC) model.\n        You can interactively browse the entire human genome and filter\n        enhancers by gene and containing variant.\n      </p>\n      <p>\n        For information regarding the ABC model please refer to our initial\n        publication:{' '}\n        <a\n          href=\"https://www.nature.com/articles/s41588-019-0538-0\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Fulco et al., Activity-by-contact model of enhancer–promoter\n          regulation from thousands of CRISPR perturbations,{' '}\n          <em>Nature Genetics</em> (2019)\n        </a>\n        .\n      </p>\n      <Typography align=\"center\">\n        <Button\n          className={classes.showTutorial}\n          onClick={() => setTutorial(true)}\n          variant=\"contained\"\n          disableElevation\n        >\n          Show Tutorial\n        </Button>\n        <Button\n          className={classes.startExploring}\n          onClick={props.infoCloseHandler}\n          variant=\"contained\"\n          disableElevation\n        >\n          Start Exploring!\n        </Button>\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nWelcome.propTypes = {\n  infoCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default Welcome;\n","import { useState, useCallback } from 'react';\nimport { getQueryStringValue, setQueryStringValue } from './utils';\n\nfunction useQueryString(key, initialValue, { encoder, decoder } = {}) {\n  const [value, setValue] = useState(\n    getQueryStringValue(key, decoder) === undefined\n      ? initialValue\n      : getQueryStringValue(key, decoder)\n  );\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n\nexport default useQueryString;\n","import PropTypes from 'prop-types';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { HiGlassComponent } from 'higlass';\nimport {\n  debounce,\n  deepClone,\n  isParentOf,\n  isString,\n  nthIndexOf,\n  pipe,\n} from '@flekschas/utils';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fade from '@material-ui/core/Fade';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Modal from '@material-ui/core/Modal';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Popover from '@material-ui/core/Popover';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HelpIcon from '@material-ui/icons/Help';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport EnhancerGenePlot from './EnhancerGenePlot';\nimport Logo from './Logo';\nimport SearchField from './SearchField';\nimport Welcome from './Welcome';\n\nimport useDebounce from './use-debounce';\nimport useQueryString from './use-query-string';\nimport usePrevious from './use-previous';\nimport { download, stringifySvg, toAbsPosition, toFixed } from './utils';\nimport {\n  DEFAULT_X_DOMAIN_START,\n  DEFAULT_X_DOMAIN_END,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n  DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY,\n  GENE_SEARCH_URL,\n  VARIANT_SEARCH_URL,\n  SVG_SKELETON,\n} from './constants';\n\nimport 'higlass/dist/hglib.css';\nimport './Viewer.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  black: {\n    color: 'black',\n  },\n  gray: {\n    color: theme.palette.grey['400'],\n  },\n  pink: {\n    color: '#cc0078',\n  },\n  root: {\n    position: 'absolute',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  h1: {\n    height: '100%',\n    margin: '0',\n    padding: '0',\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    fontWeight: 'bold',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '4rem',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '0.25rem',\n    boxShadow: theme.shadows[4],\n    maxWidth: '60rem',\n    maxHeight: 'calc(100vh - 8rem)',\n    overflow: 'auto',\n    padding: theme.spacing(2, 4),\n    outline: 0,\n    '&>h2': {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: theme.spacing(2, 0, 3),\n    },\n    '&>p': {\n      fontSize: '1.125em',\n    },\n  },\n  iconRadio: {\n    padding: theme.spacing(0.5, 0),\n    marginLeft: -theme.spacing(1) / 2,\n    '& .MuiFormControlLabel-label': {\n      lineHeight: 1.2,\n    },\n  },\n  iconRadioActive: {\n    color: 'black',\n  },\n  iconRadioLegend: {\n    margin: theme.spacing(2, 0, 0.25, 0),\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    boxShadow: `0 1px 0 0 ${theme.palette.grey['300']}`,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerGrid: {\n    height: '100%',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  settings: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  settingsTitle: {\n    margin: theme.spacing(1, 1, -1, 1),\n    '& h6': {\n      fontWeight: 'bold',\n    },\n  },\n  settingsContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden auto',\n  },\n  textInput: {\n    minWidth: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fullWidthHeight: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  higlass: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  higlassEnhancerContainer: {\n    flexWrap: 'nowrap',\n    minHeight: '100%',\n  },\n  higlassEnhancer: {\n    flexGrow: 1,\n    margin: '-8px 0 -8px -8px',\n  },\n  higlassDnaAccessibility: {\n    width: '20rem',\n    margin: '-8px -8px -8px 0',\n  },\n  higlassTitleBar: {\n    position: 'relative',\n    padding: '2px',\n    fontSize: '0.8rem',\n    background: theme.palette.grey['100'],\n  },\n  higlassTitleBarText: {\n    fontSize: '0.8rem',\n  },\n  higlassTitleBarContainer: {\n    width: 'auto',\n  },\n  higlassTitleBarTitle: {\n    padding: '0 2px',\n    fontWeight: 'bold',\n  },\n  higlassTitleBarIcon: {\n    color: theme.palette.grey['400'],\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  higlassTitleBarIconActive: {\n    color: 'black',\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  higlassTitleBarHelpPopeover: {\n    maxWidth: '20rem',\n    padding: '0.5rem',\n    fontSize: '0.8rem',\n    '&+p': {\n      paddingTop: 0,\n    },\n  },\n  higlassInfoBarTitle: {\n    display: 'block',\n    fontSize: '0.8rem',\n    fontWeight: 'bold',\n    '&::after': {\n      content: ':',\n    },\n  },\n  panZoomTip: {\n    fontSize: '0.8rem',\n    color: theme.palette.grey['600'],\n    opacity: 1,\n    animation: '0.75s ease 2s 1 running forwards fadeout',\n    '-webkit-touch-callout': 'none',\n    '-webkit-user-select': 'none',\n    '-khtml-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    '&.show': {\n      opacity: 1,\n      animation: '',\n    },\n  },\n  panZoomTipActive: {\n    fontWeight: 'bold',\n    fontSize: '0.8rem',\n    color: '#cc0078',\n    opacity: 1,\n    animation: '0.75s ease 2s 1 running forwards fadeout',\n    '-webkit-touch-callout': 'none',\n    '-webkit-user-select': 'none',\n    '-khtml-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    '&.show': {\n      opacity: 1,\n      animation: '',\n    },\n  },\n  higlassEnhancerInfoBar: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    minHeight: 'min-content',\n    padding: '0 4px',\n    color: theme.palette.grey['600'],\n    borderTop: `1px solid ${theme.palette.grey['300']}`,\n    '&:first-child': {\n      borderTop: 0,\n    },\n    '& >*:first-child': {\n      paddingTop: 2,\n    },\n    '& >*:last-child': {\n      paddingBottom: 2,\n      borderBottom: `1px dotted ${theme.palette.grey['300']}`,\n    },\n  },\n  higlassEnhancerGenePlot: {\n    minHeight: '6rem',\n  },\n  higlassEnhancerGenePlotPlaceholder: {\n    minHeight: '6rem',\n    fontStyle: 'italic',\n    color: theme.palette.grey['600'],\n    background: theme.palette.grey['100'],\n  },\n  enhancerGeneTooltip: {\n    position: 'fixed',\n    zIndex: 10,\n    width: 1,\n    height: 1,\n    background: 'black',\n    fontWeight: 'normal',\n    pointerEvents: 'none',\n    '& strong': {\n      fontWeight: 'bold',\n    },\n  },\n  higlassDnaAccessibilityInfoBar: {\n    color: theme.palette.grey['600'],\n    padding: '2px 4px',\n    borderBottom: `1px dotted ${theme.palette.grey['300']}`,\n  },\n  higlassDnaAccessibilityInfoBarRegion: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  higlassSeparator: {\n    zIndex: 1,\n    margin: `-${theme.spacing(1)}px 0`,\n    width: 1,\n    background: theme.palette.grey['300'],\n  },\n  toolbarExtra: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    alignItems: 'flex-end',\n  },\n}));\n\nconst chrPosUrlEncoder = (chrPos) =>\n  chrPos ? chrPos.replace(':', '.') : chrPos;\n\nconst chrPosUrlDecoder = (chrPos) =>\n  chrPos ? chrPos.replace('.', ':') : chrPos;\n\nconst getFocusGeneRegion = (viewConfig) => {\n  return viewConfig.views[0].overlays[1] &&\n    viewConfig.views[0].overlays[1].options.extent &&\n    viewConfig.views[0].overlays[1].options.extent.length\n    ? [...viewConfig.views[0].overlays[1].options.extent[0]]\n    : null;\n};\n\nconst getFocusVariantRegion = (viewConfig) =>\n  viewConfig.views[0].tracks.top[2].options.focusRegion\n    ? [...viewConfig.views[0].tracks.top[2].options.focusRegion]\n    : null;\n\nconst updateViewConfigXDomain = (newXDomainStart, newXDomainEnd, force) => (\n  viewConfig\n) => {\n  const xDomain = [...viewConfig.views[0].initialXDomain];\n  const focusGeneRegion = getFocusGeneRegion(viewConfig);\n  const focusVariantRegion = getFocusVariantRegion(viewConfig);\n\n  if (!Number.isNaN(+newXDomainStart)) {\n    xDomain[0] = newXDomainStart;\n  }\n  if (!Number.isNaN(+newXDomainEnd)) {\n    xDomain[1] = newXDomainEnd;\n  }\n\n  if (focusGeneRegion && !force) {\n    xDomain[0] = focusGeneRegion[0] - 100000;\n    xDomain[1] = focusGeneRegion[1] + 100000;\n  }\n\n  if (focusVariantRegion && !force) {\n    xDomain[0] = Math.min(xDomain[0], focusVariantRegion[0] - 100000);\n    xDomain[1] = Math.max(xDomain[1], focusVariantRegion[1] + 100000);\n  }\n\n  viewConfig.views[0].initialXDomain = xDomain;\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusGene = (gene, start, end) => (viewConfig) => {\n  const n = viewConfig.views[0].tracks.top.length;\n\n  if (gene) {\n    viewConfig.views[0].tracks.top[n - 1].options.focusGene = gene;\n    viewConfig.views[0].overlays[1].options.extent = [[start, end]];\n  } else {\n    delete viewConfig.views[0].tracks.top[n - 1].options.focusGene;\n    delete viewConfig.views[0].overlays[1].options.extent;\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusVariant = (position, trackIdxs = []) => (\n  viewConfig\n) => {\n  if (Number.isNaN(+position) || position === null) {\n    trackIdxs.forEach((trackIdx) => {\n      delete viewConfig.views[0].tracks.top[trackIdx].options.focusRegion;\n    });\n    viewConfig.views[0].overlays[0].options.extent = [];\n  } else {\n    const focusRegion = [position - 0.5, position + 0.5];\n    trackIdxs.forEach((trackIdx) => {\n      viewConfig.views[0].tracks.top[\n        trackIdx\n      ].options.focusRegion = focusRegion;\n    });\n\n    viewConfig.views[0].overlays[0].options.extent = [focusRegion];\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusStyle = (hideUnfocused) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.focusStyle = hideUnfocused\n    ? 'filtering'\n    : 'highlighting';\n  viewConfig.views[0].tracks.top[4].options.stratification.axisNoGroupColor = !hideUnfocused;\n\n  return viewConfig;\n};\n\nconst updateViewConfigVariantYScale = (yScale) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[2].options.valueColumn =\n    yScale === 'pValue' ? 7 : 8;\n\n  return viewConfig;\n};\n\nconst updateViewConfigMatrixColoring = (coloring) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.opacityEncoding = coloring;\n  return viewConfig;\n};\n\nconst updateViewConfigDnaAccessLabels = (labels) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[3].options.showRowLabels =\n    !labels || labels === 'hidden' ? false : labels;\n  return viewConfig;\n};\n\nconst extractCoreFromHiGlassSvg = (svg) => {\n  const fifthLn = nthIndexOf(svg, '\\n', 4);\n  const lastLn = svg.lastIndexOf('\\n');\n  const width = +svg.substring(\n    svg.indexOf('width=\"') + 7,\n    svg.indexOf('px', svg.indexOf('width=\"') + 7)\n  );\n  const height = +svg.substring(\n    svg.indexOf('height=\"') + 8,\n    svg.indexOf('px', svg.indexOf('height=\"') + 8)\n  );\n  return {\n    core: svg.substring(fifthLn + 1, lastLn),\n    width,\n    height,\n  };\n};\n\nconst extractCoreFromStringifiedSvg = (svg) => {\n  const firstSvgClosingBracket = svg.indexOf('>');\n  const lastSvgOpeningBracket = svg.lastIndexOf('</svg>');\n  const [width, height] = svg\n    .substring(\n      svg.indexOf('viewbox=\"') + 9,\n      svg.indexOf('\"', svg.indexOf('viewbox=\"') + 9)\n    )\n    .split(' ')\n    .slice(2);\n  return {\n    core: svg.substring(firstSvgClosingBracket + 1, lastSvgOpeningBracket),\n    width: +width,\n    height: +height,\n  };\n};\n\nconst locationSearch = async (query) => {\n  if (!query) return undefined;\n\n  const match = query.match(/^chr(\\d+):(\\d)+$/);\n  if (\n    match &&\n    ((+match[1] > 0 && +match[1] < 23) ||\n      +match[1].toLowerCase() === 'x' ||\n      +match[1].toLowerCase() === 'y')\n  ) {\n    return [\n      {\n        chr: `chr${match[1]}`,\n        txStart: +match[2],\n        txEnd: +match[2] + 1,\n        score: 0,\n        geneName: query,\n        type: 'nucleotide',\n      },\n    ];\n  }\n\n  return undefined;\n};\n\nconst Viewer = (props) => {\n  const [infoOpen, setInfoOpen] = useQueryString('i', true, {\n    decoder: (v) => (v === undefined ? undefined : v === 'true'),\n  });\n  const [focusGene, setFocusGene] = useQueryString('g', '');\n  const [focusVariant, setFocusVariant] = useQueryString('v', 'rs1250566');\n  const [hideUnfocused, setHideUnfocused] = useQueryString(\n    'hide-unfocused',\n    false,\n    {\n      decoder: (v) => (v === undefined ? undefined : v === 'true'),\n    }\n  );\n  const [matrixColoring, setMatrixColoring] = useQueryString('mc', 'solid');\n  const [variantYScale, setVariantYScale] = useQueryString('vs', 'pValue');\n  const [dnaAccessLabels, setDnaAccessLabels] = useQueryString(\n    'al',\n    'indicator'\n  );\n  const [xDomainStart, setXDomainStart] = useQueryString(\n    's',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_START).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [xDomainEnd, setXDomainEnd] = useQueryString(\n    'e',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_END).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [showEnhancerDetails, setShowEnhancerDetails] = useQueryString(\n    'ed',\n    true,\n    {\n      decoder: (v) => (v === undefined ? undefined : v === 'true'),\n    }\n  );\n  const [showDnaAccessDetails, setShowDnaAccessDetails] = useQueryString(\n    'ad',\n    true,\n    {\n      decoder: (v) => (v === undefined ? undefined : v === 'true'),\n    }\n  );\n  const [genePadding, setGenePadding] = useQueryString('gp', true, {\n    decoder: (v) => (v === undefined ? undefined : v === 'true'),\n  });\n  const [geneCellEncoding, setGeneCellEncoding] = useQueryString(\n    'gce',\n    'distribution'\n  );\n\n  const [focusGeneOption, setFocusGeneOption] = useState(null);\n  const [focusVariantOption, setFocusVariantOption] = useState(null);\n  const prevFocusGeneOption = usePrevious(focusGeneOption);\n  const prevFocusVariantOption = usePrevious(focusVariantOption);\n  const higlassEnhancerApi = useRef(null);\n  const higlassEnhancerMouseDown = useRef(false);\n  const higlassDnaAccessApi = useRef(null);\n  const enhancerGeneSvgRef = useRef(null);\n  const [\n    higlassEnhancerHelpAnchorEl,\n    setHiglassEnhancerHelpAnchorEl,\n  ] = useState(null);\n  const [\n    higlassDnaAccessHelpAnchorEl,\n    setHiglassDnaAccessHelpAnchorEl,\n  ] = useState(null);\n  const [enhancerGeneTooltip, setEnhancerGeneTooltip] = useState({\n    show: false,\n    title: '',\n    x: 0,\n    y: 0,\n    arrow: true,\n    placement: 'bottom',\n    classes: {},\n  });\n  const [higlassEnhancerMouseOver, setHiglassEnhancerMouseOver] = useState(\n    false\n  );\n  const [higlassEnhancerFocus, setHiglassEnhancerFocus] = useState(false);\n  const higlassEnhancerContainerRef = useRef(null);\n\n  // Derived State\n  const focusGeneVariantOptions = useMemo(\n    () => {\n      const _focusGeneVariant = [];\n      // Add the focus element that has not changed first!\n      if (focusGeneOption && focusGeneOption === prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption === prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      // Now add the focused element that has changed!\n      if (focusGeneOption && focusGeneOption !== prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption !== prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      return _focusGeneVariant;\n    },\n    // `prevFocusGeneOption` and `prevFocusVariantOption` are ommitted\n    // on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [focusGeneOption, focusVariantOption]\n  );\n\n  const focusGeneStartPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusGeneEndPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txEnd}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusVariantPosition = useMemo(\n    () =>\n      focusVariantOption\n        ? toAbsPosition(\n            `${focusVariantOption.chr}:${focusVariantOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusVariantOption, props.chromInfo]\n  );\n\n  const focusVariantRelPosition = useMemo(\n    () => (focusVariantOption ? +focusVariantOption.txStart : null),\n    [focusVariantOption]\n  );\n\n  const focusVariantFullPosition = useMemo(\n    () =>\n      focusVariantOption\n        ? `${focusVariantOption.chr}:${focusVariantOption.txStart}`\n        : null,\n    [focusVariantOption]\n  );\n\n  const xDomainStartAbs = useMemo(\n    () => toAbsPosition(xDomainStart, props.chromInfo),\n    [xDomainStart, props.chromInfo]\n  );\n\n  const xDomainEndAbs = useMemo(\n    () => toAbsPosition(xDomainEnd, props.chromInfo),\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const xDomainStartAbsDb = useDebounce(xDomainStartAbs, 1000);\n  const xDomainEndAbsDb = useDebounce(xDomainEndAbs, 1000);\n\n  const viewConfigEnhancer = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusGene(\n          focusGeneOption ? focusGeneOption.geneName : null,\n          focusGeneStartPosition,\n          focusGeneEndPosition\n        ),\n        updateViewConfigFocusVariant(focusVariantPosition, [2, 4]),\n        updateViewConfigFocusStyle(hideUnfocused),\n        updateViewConfigMatrixColoring(matrixColoring),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigXDomain(xDomainStartAbs, xDomainEndAbs)\n      )(deepClone(DEFAULT_VIEW_CONFIG_ENHANCER)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusGeneOption,\n      focusGeneStartPosition,\n      focusGeneEndPosition,\n      focusVariantPosition,\n      hideUnfocused,\n      matrixColoring,\n      variantYScale,\n    ]\n  );\n\n  const viewConfigEnhancerHeight = useMemo(\n    () =>\n      viewConfigEnhancer.views[0].tracks.top.reduce(\n        (height, track) => height + track.height,\n        0\n      ),\n    [viewConfigEnhancer]\n  );\n\n  const getDnaAccessibilityXDomain = () => {\n    if (focusVariantPosition) {\n      return [focusVariantPosition - 2500, focusVariantPosition + 2500];\n    }\n\n    if (focusGeneStartPosition && focusGeneEndPosition) {\n      const midPos =\n        focusGeneStartPosition +\n        (focusGeneEndPosition - focusGeneStartPosition) / 2;\n      return [midPos - 2500, midPos + 2500];\n    }\n\n    return [xDomainStartAbs, xDomainEndAbs];\n  };\n\n  const viewConfigDnaAccessibility = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusVariant(focusVariantPosition, [2]),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigDnaAccessLabels(dnaAccessLabels),\n        updateViewConfigXDomain(\n          ...getDnaAccessibilityXDomain(\n            focusVariantPosition,\n            focusGeneStartPosition,\n            focusGeneEndPosition,\n            xDomainStartAbsDb,\n            xDomainEndAbsDb\n          ),\n          true\n        )\n      )(deepClone(DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusVariantPosition,\n      focusGeneStartPosition,\n      focusGeneEndPosition,\n      xDomainStartAbsDb,\n      xDomainEndAbsDb,\n      variantYScale,\n      dnaAccessLabels,\n      props.chromInfo,\n    ]\n  );\n\n  const dnaAccessibilityRegionSize = useMemo(\n    () =>\n      focusVariantPosition\n        ? 5\n        : Math.round((xDomainEndAbs - xDomainStartAbs) / 1000),\n    [focusVariantPosition, xDomainStartAbs, xDomainEndAbs]\n  );\n\n  const numericalXDomainStart = useMemo(\n    () =>\n      isString(xDomainStart) && xDomainStart.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainStart.split(':')[0],\n            +xDomainStart.split(':')[1],\n          ])\n        : +xDomainStart,\n    [xDomainStart, props.chromInfo]\n  );\n\n  const numericalXDomainEnd = useMemo(\n    () =>\n      isString(xDomainEnd) && xDomainEnd.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainEnd.split(':')[0],\n            +xDomainEnd.split(':')[1],\n          ])\n        : +xDomainEnd,\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const higlassEnhancerBlockClasses = useMemo(\n    () => (higlassEnhancerFocus ? 'higlass-block focus' : 'higlass-block'),\n    [higlassEnhancerFocus]\n  );\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n  };\n\n  const focusGeneChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusGene(newValue.geneName);\n      setFocusGeneOption(newValue);\n    } else {\n      clearFocusGene();\n    }\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    setFocusVariantOption(null);\n  };\n\n  const focusVariantChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusVariant(newValue.geneName);\n      setFocusVariantOption(newValue);\n    } else {\n      clearFocusVariant();\n    }\n  };\n\n  const focusGeneVariantChangeHandler = (newValues) => {\n    if (newValues.length) {\n      const newFocusElements = {};\n      // We only allow exactly two selections\n      newValues.slice(newValues.length - 2).forEach((newValue) => {\n        switch (newValue.type) {\n          case 'gene':\n            newFocusElements.gene = newValue;\n            if (focusGene !== newValue.geneName) {\n              setFocusGene(newValue.geneName);\n              setFocusGeneOption(newValue);\n            }\n            break;\n\n          case 'variant':\n            newFocusElements.variant = newValue;\n            if (focusVariant !== newValue.geneName) {\n              setFocusVariant(newValue.geneName);\n              setFocusVariantOption(newValue);\n            }\n            break;\n\n          default:\n            // eslint-disable-next-line no-console\n            console.warn('Unknown focus element', newValue);\n            break;\n        }\n      });\n      // Unset focus elements\n      if (focusGene && !newFocusElements.gene) clearFocusGene();\n      if (focusVariant && !newFocusElements.variant) clearFocusVariant();\n    } else {\n      clearFocusGene();\n      clearFocusVariant();\n    }\n  };\n\n  const hideUnfocusedChangeHandler = (event) => {\n    setHideUnfocused(event.target.checked);\n  };\n\n  const genePaddingChangeHandler = (event) => {\n    setGenePadding(event.target.checked);\n  };\n\n  const changeVariantYScale = (value) => () => {\n    setVariantYScale(value);\n  };\n\n  const changeMatrixColoring = (value) => () => {\n    setMatrixColoring(value);\n  };\n\n  const changeDnaAccessLabels = (value) => () => {\n    setDnaAccessLabels(value);\n  };\n\n  const changeGeneCellEncoding = (value) => () => {\n    setGeneCellEncoding(value);\n  };\n\n  const xDomainStartChangeHandler = (event) => {\n    setXDomainStart(event.target.value);\n  };\n\n  const xDomainEndChangeHandler = (event) => {\n    setXDomainEnd(event.target.value);\n  };\n\n  // HiGlass Functions\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      setFocusGeneOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        type: 'gene',\n      });\n    } else if (event.type === 'snp') {\n      setFocusVariant(event.payload.name);\n      setFocusVariantOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        score: event.payload.importance,\n        type: 'variant',\n      });\n    } else if (event.type === 'annotation') {\n      console.log('clicked on annotation', event.payload);\n    }\n  };\n\n  const higlassLocationChangeHandler = (event) => {\n    const [newXDomainStart, newXDomainEnd] = event.xDomain.map((absPos) =>\n      props.chromInfo.absToChr(absPos).slice(0, 2).join(':')\n    );\n    setXDomainStart(newXDomainStart);\n    setXDomainEnd(newXDomainEnd);\n  };\n  const higlassLocationChangeHandlerDb = debounce(\n    higlassLocationChangeHandler,\n    250\n  );\n\n  const higlassEnhancerZoomToXDomain = (event) => {\n    if (!higlassEnhancerApi.current) return;\n\n    const newViewConfig = deepClone(viewConfigEnhancer);\n\n    const xDomain = [...newViewConfig.views[0].initialXDomain];\n\n    if (!Number.isNaN(+numericalXDomainStart)) {\n      xDomain[0] = numericalXDomainStart;\n    }\n    if (!Number.isNaN(+numericalXDomainEnd)) {\n      xDomain[1] = numericalXDomainEnd;\n    }\n\n    higlassEnhancerApi.current.zoomTo(\n      'context',\n      xDomain[0],\n      xDomain[1],\n      xDomain[0],\n      xDomain[1],\n      2000\n    );\n  };\n\n  // Initializations\n  useEffect(\n    () => {\n      (async () => {\n        if (focusGene && !focusGeneOption) {\n          const r = await fetch(`${GENE_SEARCH_URL}&ac=${focusGene}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'gene';\n          focusGeneChangeHandler(results[0]);\n        }\n        if (focusVariant && !focusVariantOption) {\n          const r = await fetch(`${VARIANT_SEARCH_URL}&ac=${focusVariant}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'variant';\n          focusVariantChangeHandler(results[0]);\n        }\n      })();\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const windowMouseDownClearHandler = useCallback((e) => {\n    if (!isParentOf(e.target, higlassEnhancerContainerRef.current)) {\n      setHiglassEnhancerFocus(false);\n    }\n    higlassEnhancerMouseDown.current = false;\n  }, []);\n\n  useEffect(\n    () => {\n      window.addEventListener('mouseup', windowMouseDownClearHandler);\n      window.addEventListener('blur', windowMouseDownClearHandler);\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassEnhancerMouseDownHandler = useCallback(() => {\n    higlassEnhancerMouseDown.current = true;\n  }, []);\n\n  const higlassEnhancerInitHandler = useCallback(\n    (higlassInstance) => {\n      if (higlassInstance !== null) {\n        higlassEnhancerApi.current = higlassInstance.api;\n        higlassInstance.api.on('click', higlassClickHandler);\n        higlassInstance.api.on(\n          'location',\n          higlassLocationChangeHandlerDb,\n          'context'\n        );\n        higlassEnhancerApi.current\n          .getComponent()\n          .element.addEventListener(\n            'mousedown',\n            higlassEnhancerMouseDownHandler\n          );\n      }\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassDnaAccessibilityInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassDnaAccessApi.current = higlassInstance.api;\n    }\n  }, []);\n\n  const higlassEnhancerHelpClickHandler = (event) => {\n    setHiglassEnhancerHelpAnchorEl(event.currentTarget);\n  };\n\n  const higlassEnhancerHelpCloseHandler = () => {\n    setHiglassEnhancerHelpAnchorEl(null);\n  };\n\n  const higlassDnaAccessHelpClickHandler = (event) => {\n    setHiglassDnaAccessHelpAnchorEl(event.currentTarget);\n  };\n\n  const higlassDnaAccessHelpCloseHandler = () => {\n    setHiglassDnaAccessHelpAnchorEl(null);\n  };\n\n  const higlassEnhancerHelpOpen = Boolean(higlassEnhancerHelpAnchorEl);\n  const higlassEnhancerHelpId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const higlassDnaAccessHelpOpen = Boolean(higlassDnaAccessHelpAnchorEl);\n  const higlassDnaAccessHelpId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const infoOpenHandler = () => {\n    setInfoOpen(true);\n  };\n\n  const infoCloseHandler = () => {\n    setInfoOpen(false);\n  };\n\n  const higlassEnhancerDetailsClickHandler = () => {\n    setShowEnhancerDetails(!showEnhancerDetails);\n  };\n\n  const higlassDnaAccessDetailsClickHandler = () => {\n    setShowDnaAccessDetails(!showDnaAccessDetails);\n  };\n\n  const openEnhancerGeneTooltip = useCallback(\n    (\n      x,\n      y,\n      title,\n      { arrow = false, placement = 'bottom', classes = {} } = {}\n    ) => {\n      setEnhancerGeneTooltip({\n        show: true,\n        x,\n        y,\n        title,\n        arrow,\n        placement,\n        classes,\n      });\n    },\n    []\n  );\n\n  const closeEnhancerGeneTooltip = useCallback(() => {\n    setEnhancerGeneTooltip({\n      show: false,\n      title: '',\n      x: 0,\n      y: 0,\n      arrow: true,\n      placement: 'bottom',\n      classes: {},\n    });\n  }, []);\n\n  const higlassEnhancerFocusHandler = useCallback(() => {\n    setHiglassEnhancerFocus(true);\n  }, []);\n\n  const higlassEnhancerBlurHandler = useCallback(() => {\n    if (!higlassEnhancerMouseDown.current) {\n      setHiglassEnhancerFocus(false);\n    }\n  }, [higlassEnhancerMouseDown]);\n\n  const higlassEnhancerContainerMouseEnterHandler = useCallback(() => {\n    setHiglassEnhancerMouseOver(true);\n  }, []);\n\n  const higlassEnhancerContainerMouseLeaveHandler = useCallback(() => {\n    setHiglassEnhancerMouseOver(false);\n  }, []);\n\n  const mergeSvgs = (enhancerSvg, dnaAccessSvg, enhancerGeneSvg) => {\n    const {\n      core: enhancerSvgCore,\n      width: enhancerWidth,\n      height: enhancerHeight,\n    } = extractCoreFromHiGlassSvg(enhancerSvg);\n    const {\n      core: dnaAccessSvgCore,\n      width: dnaAccessWidth,\n      height: dnaAccessHeight,\n    } = extractCoreFromHiGlassSvg(dnaAccessSvg);\n    const {\n      core: enhancerGeneSvgCore,\n      height: enhancerGeneHeight,\n    } = extractCoreFromStringifiedSvg(enhancerGeneSvg);\n\n    const actualEnhancerHeight = viewConfigEnhancer.views[0].tracks.top.reduce(\n      (height, track) => height + track.height,\n      0\n    );\n    const actualDnaAccessHeight = viewConfigDnaAccessibility.views[0].tracks.top.reduce(\n      (height, track) => height + track.height,\n      0\n    );\n    const padding = 24;\n\n    let mergedSvg = SVG_SKELETON;\n    mergedSvg = mergedSvg.replace(\n      '_WIDTH_',\n      enhancerWidth + dnaAccessWidth + padding\n    );\n    mergedSvg = mergedSvg.replace(\n      '_HEIGHT_',\n      Math.max(\n        enhancerHeight + enhancerGeneHeight + padding,\n        dnaAccessHeight,\n        actualEnhancerHeight + enhancerGeneHeight + padding,\n        actualDnaAccessHeight\n      )\n    );\n    mergedSvg = mergedSvg.replace('_ENHANCER_', enhancerSvgCore);\n    mergedSvg = mergedSvg.replace(\n      '_ENHANCER_GENE_Y_',\n      enhancerHeight + padding\n    );\n    mergedSvg = mergedSvg.replace('_ENHANCER_GENE_', enhancerGeneSvgCore);\n    mergedSvg = mergedSvg.replace('_DNA_ACCESS_X_', enhancerWidth + padding);\n    mergedSvg = mergedSvg.replace('_DNA_ACCESS_', dnaAccessSvgCore);\n\n    return mergedSvg;\n  };\n\n  const higlassExportAsSvg = () => {\n    const mergedSvg = mergeSvgs(\n      higlassEnhancerApi.current.exportAsSvg(),\n      higlassDnaAccessApi.current.exportAsSvg(),\n      stringifySvg(enhancerGeneSvgRef.current)\n    );\n\n    download(\n      'abc-enhancers.svg',\n      new Blob([mergedSvg], { type: 'image/svg+xml' })\n    );\n  };\n\n  // Run on every render\n  const classes = useStyles();\n\n  const higlassEnhancerDetailsIconClass = showEnhancerDetails\n    ? classes.higlassTitleBarIconActive\n    : classes.higlassTitleBarIcon;\n\n  const higlassDnaAccessDetailsIconClass = showDnaAccessDetails\n    ? classes.higlassTitleBarIconActive\n    : classes.higlassTitleBarIcon;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar\n          classes={{\n            root: classes.toolbarExtra,\n          }}\n        >\n          <FormControl fullWidth>\n            <SearchField\n              label={\n                <Grid container direction=\"row\" alignItems=\"center\">\n                  <SearchIcon fontSize=\"small\" />\n                  <span style={{ marginLeft: 3 }}>Gene or Variant</span>\n                </Grid>\n              }\n              customSearch={locationSearch}\n              searchUrl={[\n                { url: GENE_SEARCH_URL, type: 'gene' },\n                { url: VARIANT_SEARCH_URL, type: 'variant' },\n              ]}\n              onChange={focusGeneVariantChangeHandler}\n              value={focusGeneVariantOptions}\n              variant=\"filled\"\n              larger\n              fullWidth\n              multiple\n            />\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <Grid container direction=\"column\" className={classes.drawerGrid}>\n          <Grid item>\n            <ButtonBase className={classes.toolbar} style={{ width: '100%' }}>\n              <h1 className={classes.h1} onClick={infoOpenHandler}>\n                <Logo />\n              </h1>\n            </ButtonBase>\n            <Divider />\n          </Grid>\n          <Grid container item className={classes.grow} direction=\"column\">\n            <Grid item>\n              <Box m={1}>\n                <Box m={0}>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel htmlFor=\"x-domain-start\">\n                      Region Start\n                    </InputLabel>\n                    <OutlinedInput\n                      id=\"x-domain-start\"\n                      label=\"Region Start\"\n                      onChange={xDomainStartChangeHandler}\n                      value={xDomainStart}\n                    />\n                  </FormControl>\n                </Box>\n                <Box m={0}>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel htmlFor=\"x-domain-end\">Region End</InputLabel>\n                    <OutlinedInput\n                      id=\"x-domain-end\"\n                      label=\"Region End\"\n                      onChange={xDomainEndChangeHandler}\n                      value={xDomainEnd}\n                    />\n                  </FormControl>\n                </Box>\n                <Box m={0}>\n                  <Button\n                    variant=\"contained\"\n                    margin=\"dense\"\n                    onClick={higlassEnhancerZoomToXDomain}\n                    fullWidth\n                    disableElevation\n                  >\n                    Go\n                  </Button>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid item className={classes.settings}>\n              <Box m={0} className={classes.settingsContent}>\n                <Box className={classes.settingsTitle}>\n                  <Typography variant=\"subtitle2\" component=\"h6\">\n                    Enhancer Regions:\n                  </Typography>\n                </Box>\n                <Box m={1}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={hideUnfocused}\n                        onChange={hideUnfocusedChangeHandler}\n                        name=\"hideUnfocused\"\n                      />\n                    }\n                    label=\"Hide unfocused\"\n                  />\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel\n                      component=\"legend\"\n                      className={classes.iconRadioLegend}\n                    >\n                      Variant y-scale\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"variantYScale\"\n                      name=\"variantYScale\"\n                      value={variantYScale}\n                    >\n                      <FormControlLabel\n                        label=\"p-value\"\n                        value=\"pValue\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeVariantYScale('pValue')}\n                          >\n                            {variantYScale === 'pValue' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Posterior probability\"\n                        value=\"posteriorProbability\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeVariantYScale(\n                              'posteriorProbability'\n                            )}\n                          >\n                            {variantYScale === 'posteriorProbability' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel\n                      component=\"legend\"\n                      className={classes.iconRadioLegend}\n                    >\n                      Matrix coloring\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"matrixColoring\"\n                      name=\"matrixColoring\"\n                      value={matrixColoring}\n                    >\n                      <FormControlLabel\n                        label=\"Solid\"\n                        value=\"solid\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeMatrixColoring('solid')}\n                          >\n                            {matrixColoring === 'solid' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Number of predictions\"\n                        value=\"frequency\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeMatrixColoring('frequency')}\n                          >\n                            {matrixColoring === 'frequency' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Highest prediction score\"\n                        value=\"highestImportance\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeMatrixColoring('highestImportance')}\n                          >\n                            {matrixColoring === 'highestImportance' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Prediction score of the closest TSS interaction\"\n                        value=\"closestImportance\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeMatrixColoring('closestImportance')}\n                          >\n                            {matrixColoring === 'closestImportance' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n                <Divider />\n                <Box className={classes.settingsTitle}>\n                  <Typography variant=\"subtitle2\" component=\"h6\">\n                    Enhancer-Gene Connections:\n                  </Typography>\n                </Box>\n                <Box m={1}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={genePadding}\n                        onChange={genePaddingChangeHandler}\n                        name=\"true\"\n                      />\n                    }\n                    label=\"Gene padding\"\n                  />\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel\n                      component=\"legend\"\n                      className={classes.iconRadioLegend}\n                    >\n                      Gene Cell Encoding\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"geneCellEncoding\"\n                      name=\"geneCellEncoding\"\n                      value={geneCellEncoding}\n                    >\n                      <FormControlLabel\n                        label=\"Number of predictions\"\n                        value=\"number\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeGeneCellEncoding('number')}\n                          >\n                            {geneCellEncoding === 'number' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Percentage of samples with predictions\"\n                        value=\"percent\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeGeneCellEncoding('percent')}\n                          >\n                            {geneCellEncoding === 'percent' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Distribution by prediction score\"\n                        value=\"distribution\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeGeneCellEncoding('distribution')}\n                          >\n                            {geneCellEncoding === 'distribution' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Sample array\"\n                        value=\"array\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeGeneCellEncoding('array')}\n                          >\n                            {geneCellEncoding === 'array' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n                <Divider />\n                <Box className={classes.settingsTitle}>\n                  <Typography variant=\"subtitle2\" component=\"h6\">\n                    DNA Accessibility:\n                  </Typography>\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel\n                      component=\"legend\"\n                      className={classes.iconRadioLegend}\n                    >\n                      Labels\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"dnaAccessLabels\"\n                      name=\"dnaAccessLabels\"\n                      value={dnaAccessLabels}\n                    >\n                      <FormControlLabel\n                        label=\"Indicator\"\n                        value=\"indicator\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeDnaAccessLabels('indicator')}\n                          >\n                            {dnaAccessLabels === 'indicator' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Text\"\n                        value=\"text\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeDnaAccessLabels('text')}\n                          >\n                            {dnaAccessLabels === 'text' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                      <FormControlLabel\n                        label=\"Hidden\"\n                        value=\"hidden\"\n                        className={classes.iconRadio}\n                        control={\n                          <IconButton\n                            size=\"small\"\n                            onClick={changeDnaAccessLabels('hidden')}\n                          >\n                            {dnaAccessLabels === 'hidden' ? (\n                              <RadioButtonCheckedIcon\n                                className={classes.iconRadioActive}\n                                fontSize=\"inherit\"\n                              />\n                            ) : (\n                              <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                            )}\n                          </IconButton>\n                        }\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Divider />\n              <Box m={1}>\n                <Button\n                  variant=\"contained\"\n                  margin=\"dense\"\n                  onClick={higlassExportAsSvg}\n                  fullWidth\n                  disableElevation\n                >\n                  Export as SVG\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div className={classes.higlass}>\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassEnhancer}\n          >\n            <Grid\n              item\n              className={classes.higlassTitleBar}\n              container\n              justify=\"space-between\"\n              alignItems=\"center\"\n              wrap=\"nowrap\"\n            >\n              <Grid\n                item\n                container\n                wrap=\"nowrap\"\n                alignItems=\"center\"\n                className={classes.higlassTitleBarContainer}\n              >\n                <Typography\n                  component=\"h3\"\n                  className={`${classes.higlassTitleBarText} ${classes.higlassTitleBarTitle}`}\n                  noWrap\n                >\n                  Enhancers\n                </Typography>\n                <IconButton\n                  aria-label=\"help\"\n                  aria-describedby={higlassEnhancerHelpId}\n                  className={classes.higlassTitleBarIcon}\n                  size=\"small\"\n                  onClick={higlassEnhancerHelpClickHandler}\n                >\n                  <HelpIcon fontSize=\"inherit\" />\n                </IconButton>\n                <Popover\n                  id={higlassEnhancerHelpId}\n                  open={higlassEnhancerHelpOpen}\n                  anchorEl={higlassEnhancerHelpAnchorEl}\n                  onClose={higlassEnhancerHelpCloseHandler}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                >\n                  <Typography className={classes.higlassTitleBarHelpPopeover}>\n                    This panel visualizes the predicted enhancers by sample type\n                    as a matrix-like track. Each rectangle representes an\n                    enhancer. Promoter regions are indicated by translucent\n                    light gray overlays.\n                  </Typography>\n                  <Typography className={classes.higlassTitleBarHelpPopeover}>\n                    {' '}\n                    You can filter enhancers via their target gene or by variant\n                    (the dot plot below the gene annotations). Click on a\n                    variant or gene to select it. Selections are shown in\n                    pink/red.\n                  </Typography>\n                </Popover>\n              </Grid>\n              <Grid item>\n                {higlassEnhancerFocus ? (\n                  <Typography\n                    // Just a hack to trigger a dom rerendering which in turn\n                    // triggers the fadeout animation\n                    component=\"div\"\n                    className={`${classes.panZoomTipActive} ${\n                      higlassEnhancerMouseOver ? 'show' : ''\n                    }`}\n                    noWrap\n                  >\n                    Click outside the plot to deactivate pan & zoom!\n                  </Typography>\n                ) : (\n                  <Typography\n                    // Just a hack to trigger a dom rerendering which in turn\n                    // triggers the fadeout animation\n                    component=\"span\"\n                    className={`${classes.panZoomTip} ${\n                      higlassEnhancerMouseOver ? 'show' : ''\n                    }`}\n                    noWrap\n                  >\n                    Click below to activate pan & zoom!\n                  </Typography>\n                )}\n              </Grid>\n              <Grid item>\n                <IconButton\n                  aria-label=\"details\"\n                  className={higlassEnhancerDetailsIconClass}\n                  size=\"small\"\n                  onClick={higlassEnhancerDetailsClickHandler}\n                >\n                  <InfoIcon fontSize=\"inherit\" />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              className={classes.grow}\n              style={{ position: 'relative' }}\n            >\n              <div\n                className={classes.fullWidthHeight}\n                style={{ overflow: 'auto' }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  className={classes.higlassEnhancerContainer}\n                >\n                  {showEnhancerDetails && (\n                    <Grid item className={classes.higlassEnhancerInfoBar}>\n                      <Typography\n                        component=\"h4\"\n                        className={classes.higlassInfoBarTitle}\n                        noWrap\n                      >\n                        Enhancer Regions\n                      </Typography>\n                      {focusGene && focusVariant && (\n                        <Typography\n                          className={classes.higlassTitleBarText}\n                          noWrap\n                        >\n                          <span className={classes.pink}>■</span> Enhancers\n                          containing <em>{focusVariant}</em> and predicted to\n                          regulate <em>{focusGene}</em>\n                        </Typography>\n                      )}\n                      {focusGene && !focusVariant && (\n                        <Typography\n                          className={classes.higlassTitleBarText}\n                          noWrap\n                        >\n                          <span className={classes.pink}>■</span> Enhancers\n                          predicted to regulate <em>{focusGene}</em>\n                        </Typography>\n                      )}\n                      {!focusGene && focusVariant && (\n                        <Typography\n                          className={classes.higlassTitleBarText}\n                          noWrap\n                        >\n                          <span className={classes.pink}>■</span> Enhancers\n                          containing <em>{focusVariant}</em>\n                        </Typography>\n                      )}\n                      {focusGene || focusVariant ? (\n                        <Typography\n                          className={classes.higlassTitleBarText}\n                          noWrap\n                        >\n                          <span className={classes.gray}>■</span> All other\n                          predicted enhancers\n                        </Typography>\n                      ) : (\n                        <Typography\n                          className={classes.higlassTitleBarText}\n                          noWrap\n                        >\n                          <span className={classes.black}>■</span> All predicted\n                          enhancers\n                        </Typography>\n                      )}\n                    </Grid>\n                  )}\n                  <Grid\n                    item\n                    className={classes.grow}\n                    onMouseEnter={higlassEnhancerContainerMouseEnterHandler}\n                    onMouseLeave={higlassEnhancerContainerMouseLeaveHandler}\n                    ref={higlassEnhancerContainerRef}\n                    style={{ height: `${viewConfigEnhancerHeight}px` }}\n                  >\n                    <HiGlassComponent\n                      ref={higlassEnhancerInitHandler}\n                      viewConfig={viewConfigEnhancer}\n                      options={{\n                        sizeMode: 'bounded',\n                        globalMousePosition: true,\n                      }}\n                    />\n                    <div\n                      className={higlassEnhancerBlockClasses}\n                      onMouseDown={higlassEnhancerMouseDownHandler}\n                      onFocus={higlassEnhancerFocusHandler}\n                      onBlur={higlassEnhancerBlurHandler}\n                      tabIndex=\"0\"\n                    />\n                  </Grid>\n                  <Grid item className={classes.higlassEnhancerInfoBar}>\n                    {showEnhancerDetails && (\n                      <Typography\n                        component=\"h4\"\n                        className={classes.higlassInfoBarTitle}\n                        noWrap\n                      >\n                        Enhancer-Gene Connections\n                      </Typography>\n                    )}\n                    {showEnhancerDetails && focusVariant && (\n                      <Typography className={classes.higlassTitleBarText}>\n                        Enhancer region overlapping <em>{focusVariant}</em> and\n                        its predicted connections to upstream (left) and\n                        downstream (right) genes.\n                      </Typography>\n                    )}\n                  </Grid>\n                  <Grid item className={classes.higlassEnhancerGenePlot}>\n                    {focusVariant ? (\n                      <EnhancerGenePlot\n                        geneCellEncoding={geneCellEncoding}\n                        position={focusVariantPosition}\n                        relPosition={focusVariantRelPosition}\n                        fullPosition={focusVariantFullPosition}\n                        variant={focusVariant}\n                        genePadding={genePadding}\n                        openTooltip={openEnhancerGeneTooltip}\n                        closeTooltip={closeEnhancerGeneTooltip}\n                        svgRef={enhancerGeneSvgRef}\n                      />\n                    ) : (\n                      <Grid\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className={classes.higlassEnhancerGenePlotPlaceholder}\n                      >\n                        <Typography>Select a variant to see details</Typography>\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n          <div className={classes.higlassSeparator} />\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassDnaAccessibility}\n          >\n            <Grid\n              item\n              className={classes.higlassTitleBar}\n              container\n              justify=\"space-between\"\n              alignItems=\"center\"\n              wrap=\"nowrap\"\n            >\n              <Grid item container alignItems=\"center\" wrap=\"nowrap\">\n                <Typography\n                  component=\"h3\"\n                  className={`${classes.higlassTitleBarText} ${classes.higlassTitleBarTitle}`}\n                  noWrap\n                >\n                  DNA Accessibility\n                </Typography>\n                <IconButton\n                  aria-label=\"help\"\n                  aria-describedby={higlassDnaAccessHelpId}\n                  className={classes.higlassTitleBarIcon}\n                  size=\"small\"\n                  onClick={higlassDnaAccessHelpClickHandler}\n                >\n                  <HelpIcon fontSize=\"inherit\" />\n                </IconButton>\n                <Popover\n                  id={higlassDnaAccessHelpId}\n                  open={higlassDnaAccessHelpOpen}\n                  anchorEl={higlassDnaAccessHelpAnchorEl}\n                  onClose={higlassDnaAccessHelpCloseHandler}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                >\n                  <Typography className={classes.higlassTitleBarHelpPopeover}>\n                    This panel visualizes the DNA accessibility of all 131\n                    samples. Each track is individually normalized. Mouse over a\n                    track to see the underlying value. To focus on a specific\n                    locus specify a focus variant.\n                  </Typography>\n                </Popover>\n              </Grid>\n              <Grid item>\n                <IconButton\n                  aria-label=\"info\"\n                  className={higlassDnaAccessDetailsIconClass}\n                  size=\"small\"\n                  onClick={higlassDnaAccessDetailsClickHandler}\n                >\n                  <InfoIcon fontSize=\"inherit\" />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item container direction=\"column\" className={classes.grow}>\n              {showDnaAccessDetails && (\n                <Grid item className={classes.higlassDnaAccessibilityInfoBar}>\n                  <Typography\n                    component=\"h4\"\n                    className={classes.higlassInfoBarTitle}\n                    noWrap\n                  >\n                    DNase- or ATAC-Seq Assays\n                  </Typography>\n                  <div className={classes.higlassDnaAccessibilityInfoBarRegion}>\n                    <span>├</span>\n                    <Typography\n                      align=\"center\"\n                      className={classes.higlassTitleBarText}\n                      noWrap\n                    >\n                      {toFixed(dnaAccessibilityRegionSize, 1)}{' '}\n                      <abbr title=\"kilo base pairs\">kbp</abbr>\n                    </Typography>\n                    <span>┤</span>\n                  </div>\n                </Grid>\n              )}\n              <Grid item className={classes.grow}>\n                <HiGlassComponent\n                  ref={higlassDnaAccessibilityInitHandler}\n                  viewConfig={viewConfigDnaAccessibility}\n                  options={{\n                    sizeMode: 'scroll',\n                    pixelPreciseMarginPadding: true,\n                    containerPaddingX: 0,\n                    containerPaddingY: 0,\n                    viewMarginTop: 0,\n                    viewMarginBottom: 0,\n                    viewMarginLeft: 0,\n                    viewMarginRight: 0,\n                    viewPaddingTop: 0,\n                    viewPaddingBottom: 0,\n                    viewPaddingLeft: 0,\n                    viewPaddingRight: 16,\n                    globalMousePosition: true,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n        <Tooltip\n          open={enhancerGeneTooltip.show}\n          title={enhancerGeneTooltip.title}\n          arrow={enhancerGeneTooltip.arrow}\n          placement={enhancerGeneTooltip.placement}\n          classes={enhancerGeneTooltip.classes}\n        >\n          <div\n            className={classes.enhancerGeneTooltip}\n            style={{\n              top: enhancerGeneTooltip.y,\n              left: enhancerGeneTooltip.x,\n            }}\n          />\n        </Tooltip>\n      </main>\n      <Modal\n        aria-labelledby=\"info-title\"\n        aria-describedby=\"info-description\"\n        className={classes.modal}\n        open={infoOpen}\n        onClose={infoCloseHandler}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 250,\n        }}\n      >\n        <Fade in={infoOpen}>\n          <div className={classes.paper}>\n            <Welcome infoCloseHandler={infoCloseHandler} />\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nViewer.propTypes = {\n  chromInfo: PropTypes.object.isRequired,\n};\n\nexport default Viewer;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport Viewer from './Viewer';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n    secondary: {\n      main: '#000',\n    },\n  },\n});\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const AppViewer = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(Viewer);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <AppViewer chromInfo={chromInfo} />\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createAnnotationOverlayMetaTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  // Services\n  const { pubSub } = HGC.services;\n\n  class AnnotationOverlayMetaTrack {\n    constructor(context, options) {\n      const { definition, getTrackObject, onNewTilesLoaded: animate } = context;\n\n      this.animate = animate;\n      this.options = options;\n\n      this.overlaysTrack = getTrackObject(definition.overlaysTrack);\n\n      if (!this.overlaysTrack) {\n        console.warn(\n          `Overlays track (uid: ${definition.overlaysTrack}) not found`\n        );\n        return;\n      }\n\n      this.annotationTrackIds = new Set();\n      this.annotationTracks = definition.options.annotationTracks\n        .map((uid) => {\n          const track = getTrackObject(uid);\n\n          if (!track) {\n            console.warn(`Child track (uid: ${uid}) not found`);\n          } else {\n            this.annotationTrackIds.add(track.uuid);\n          }\n\n          return track;\n        })\n        .filter((track) => track);\n\n      this.annotationDrawnHandlerBound = this.annotationDrawnHandler.bind(this);\n      this.tilesDrawnEndHandlerBound = this.tilesDrawnEndHandler.bind(this);\n\n      this.drawnAnnotations = new Map();\n      this.tracksDrawingTiles = new Set();\n\n      this.pubSubs = [];\n\n      // Augment annotation tracks\n      this.annotationTracks.forEach((track) => {\n        track.subscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n        track.subscribe('tilesDrawn', this.tilesDrawnEndHandlerBound);\n      });\n    }\n\n    /**\n     * Handles annotation drawn events\n     *\n     * @param  {String}  event.uid  UID of the view that triggered the event.\n     * @param  {Array}  event.viewPos  View position (i.e., [x, y, width, height])\n     *   of the drawn annotation on the screen.\n     * @param  {Array}  event.dataPos  Data position of the drawn annotation. For\n     *   example base pairs (Hi-C), or pixels (gigapixel images), or lng-lat\n     *   (geo json).\n     */\n    annotationDrawnHandler({ xStartAbs, xEndAbs, data }) {\n      this.drawnAnnotations.set(data.uid, [xStartAbs, xEndAbs]);\n    }\n\n    /**\n     * Remove this track.\n     */\n    remove() {\n      this.pubSubs.forEach(pubSub.unsubscribe);\n      this.pubSubs = undefined;\n      this.annotationTracks.forEach((track) => {\n        track.unsubscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n    }\n\n    tilesDrawnEndHandler({ uuid }) {\n      if (!this.annotationTrackIds.has(uuid)) return;\n\n      this.tracksDrawingTiles.add(uuid);\n\n      if (!(this.tracksDrawingTiles.size % this.annotationTracks.length)) {\n        this.updateOverlays();\n      }\n    }\n\n    updateOverlays() {\n      this.overlaysTrack.options.extent = Array.from(\n        this.drawnAnnotations.values()\n      );\n      this.overlaysTrack.draw();\n      this.tracksDrawingTiles.clear();\n    }\n  }\n\n  return new AnnotationOverlayMetaTrack(...args);\n}\n\ncreateAnnotationOverlayMetaTrack.config = {\n  type: 'annotation-overlay',\n  availableOptions: ['annotationTracks'],\n  defaultOptions: {\n    annotationTracks: [],\n  },\n};\n\nexport default createAnnotationOverlayMetaTrack;\n","import {\n  identity,\n  maxNan,\n  maxVector,\n  meanNan,\n  minNan,\n  sumNan,\n} from '@flekschas/utils';\nimport { line } from 'd3';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_COLOR_MAP_DARK,\n} from './constants';\n\nconst FLOAT_BYTES = Float32Array.BYTES_PER_ELEMENT;\n\nconst VS = `precision mediump float;\n\n  attribute vec2 aPrevPosition;\n  attribute vec2 aCurrPosition;\n  attribute vec2 aNextPosition;\n  attribute float aOffsetSign;\n  attribute float aColorIndex;\n\n  uniform sampler2D uAreaColorTex;\n  uniform float uAreaColorTexRes;\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n\n  uniform vec4 uLineColor;\n  uniform vec4 uNaNColor;\n  uniform float uWidth;\n  uniform int uMiter;\n\n  varying vec4 vColor;\n\n  void main(void)\n  {\n    mat3 model = projectionMatrix * translationMatrix;\n\n    if (aColorIndex <= -0.5) {\n      // Render line\n      vColor = vec4(uLineColor.rgb, 1.0);\n\n      vec4 prevGlPos = vec4((model * vec3(aPrevPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 currGlPos = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 nextGlPos = vec4((model * vec3(aNextPosition, 1.0)).xy, 0.0, 1.0);\n\n      // Calculate the direction\n      vec2 dir = vec2(0.0);\n\n      if (currGlPos == prevGlPos) {\n        // start point uses (next - current)\n        dir = normalize(nextGlPos.xy - currGlPos.xy);\n      }\n      else if (currGlPos == nextGlPos) {\n        // end point uses (current - previous)\n        dir = normalize(currGlPos.xy - prevGlPos.xy);\n      }\n      else {\n        // somewhere in middle, needs a join:\n        // get directions from (C - B) and (B - A)\n        vec2 dirA = normalize((currGlPos.xy - prevGlPos.xy));\n        if (uMiter == 1) {\n          vec2 dirB = normalize((nextGlPos.xy - currGlPos.xy));\n          // now compute the miter join normal and length\n          vec2 tangent = normalize(dirA + dirB);\n          vec2 perp = vec2(-dirA.y, dirA.x);\n          vec2 miter = vec2(-tangent.y, tangent.x);\n          dir = tangent;\n        } else {\n          dir = dirA;\n        }\n      }\n\n      float width = (projectionMatrix * vec3(uWidth, 0.0, 0.0)).x / 2.0;\n\n      vec2 normal = vec2(-dir.y, dir.x) * width;\n      // normal.x /= aspectRatio;\n      vec4 offset = vec4(normal * aOffsetSign, 0.0, 0.0);\n      gl_Position = currGlPos + offset;\n    } else {\n      // Render area\n      float colorRowIndex = aColorIndex / uAreaColorTexRes;\n\n      vec2 colorTexIndex = vec2(\n        (aColorIndex / uAreaColorTexRes) - colorRowIndex,\n        colorRowIndex / uAreaColorTexRes\n      );\n      vColor = texture2D(uAreaColorTex, colorTexIndex);\n\n      gl_Position = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n    }\n  }\n`;\n\nconst FS = `precision mediump float;\n\n  varying vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`;\n\nconst TILE_SIZE = 256;\n\nconst COLORMAP_GRAYS = Array(127)\n  .fill()\n  .map((x, i) => {\n    const gray = (1 - i / 127) * 0.5 + 0.5;\n    return [gray, gray, gray, 1];\n  });\n\nconst getMax = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxValue, tile) => Math.max(maxValue, tile.tileData.maxNonZero),\n    -Infinity\n  );\n\nconst getNumRows = (fetchedTiles) =>\n  Object.values(fetchedTiles)[0].tileData.coarseShape[0];\n\nconst getRowMaxs = (fetchedTiles) =>\n  maxVector(\n    Object.values(fetchedTiles).map((tile) => tile.tileData.maxValueByRow)\n  );\n\nconst scaleGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getNumPointsPerRow = (numRows, positions, markArea) =>\n  positions.length / numRows / 4 / (1 + markArea) - 2;\n\nconst createRidgePlotTrack = function createRidgePlotTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { format } = HGC.libraries.d3Format;\n  const { scaleLinear } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const createColorTexture = (colors) => {\n    const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n    const rgba = new Float32Array(colorTexRes ** 2 * 4);\n    colors.forEach((color, i) => {\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4] = color[0]; // r\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 1] = color[1]; // g\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 2] = color[2]; // b\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 3] = color[3]; // a\n    });\n\n    return [\n      PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes),\n      colorTexRes,\n    ];\n  };\n\n  class RidgePlotTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      this.coarsifyTileValues(tile);\n    }\n\n    destroyTile() {}\n\n    binsPerTile() {\n      return this.tilesetInfo.bins_per_dimension || TILE_SIZE;\n    }\n\n    /**\n     * From HeatmapTiledPixiTrack\n     */\n    getTilePosAndDimensions(zoomLevel, tilePos, binsPerTileIn) {\n      const binsPerTile = binsPerTileIn || this.binsPerTile();\n\n      if (this.tilesetInfo.resolutions) {\n        const sortedResolutions = this.tilesetInfo.resolutions\n          .map((x) => +x)\n          .sort((a, b) => b - a);\n\n        const chosenResolution = sortedResolutions[zoomLevel];\n\n        const tileWidth = chosenResolution * binsPerTile;\n        const tileHeight = tileWidth;\n\n        const tileX = chosenResolution * binsPerTile * tilePos[0];\n        const tileY = chosenResolution * binsPerTile * tilePos[1];\n\n        return {\n          tileX,\n          tileY,\n          tileWidth,\n          tileHeight,\n        };\n      }\n\n      const xTilePos = tilePos[0];\n      const yTilePos = tilePos[1];\n\n      const minX = this.tilesetInfo.min_pos[0];\n      const minY = this.options.reverseYAxis\n        ? -this.tilesetInfo.max_pos[1]\n        : this.tilesetInfo.min_pos[1];\n\n      const tileWidth = this.tilesetInfo.max_width / 2 ** zoomLevel;\n      const tileHeight = this.tilesetInfo.max_width / 2 ** zoomLevel;\n\n      const tileX = minX + xTilePos * tileWidth;\n      const tileY = minY + yTilePos * tileHeight;\n\n      return {\n        tileX,\n        tileY,\n        tileWidth,\n        tileHeight,\n      };\n    }\n\n    updateOptions() {\n      this.selectRowsAggregationMode =\n        this.options.selectRowsAggregationMode || 'mean';\n\n      switch (this.selectRowsAggregationMode) {\n        case 'max':\n          this.selectRowsAggregationFn = maxNan;\n          break;\n\n        case 'min':\n          this.selectRowsAggregationFn = minNan;\n          break;\n\n        case 'sum':\n          this.selectRowsAggregationFn = sumNan;\n          break;\n\n        case 'mean':\n        default:\n          this.selectRowsAggregationFn = meanNan;\n          break;\n      }\n\n      this.markArea = !!this.options.markArea;\n\n      this.markAreaColor = 'grays';\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      [this.markColorTex, this.markColorTexRes] = createColorTexture([\n        ...COLORMAP_GRAYS,\n      ]);\n\n      this.markNumColors = COLORMAP_GRAYS.length;\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      // Number of line segments\n      const oldMarkResolution = this.markResolution;\n      this.markResolution = Math.max(\n        1,\n        Math.min(TILE_SIZE, this.options.markResolution || TILE_SIZE / 4)\n      );\n      // Given 100 (rows) x 256 (tile size). At a resolution of 1 we need:\n      // 100 x (256 / 4) x 4 = 25,600 vertices\n\n      const oldRowHeight = this.rowHeight;\n      this.rowHeight = Number.isNaN(+this.options.rowHeight)\n        ? 'auto'\n        : +this.options.rowHeight;\n\n      const oldRowPadding = this.rowPadding;\n      this.rowPadding =\n        this.rowHeight === 'auto' ? 0 : this.options.rowPadding || 0;\n\n      const oldRowNormalization = this.rowNormalization;\n      this.rowNormalization = this.options.rowNormalization || false;\n\n      const oldRowSelections = this.rowSelections;\n      this.rowSelections =\n        this.options.rowSelections || this.rowSelections || [];\n\n      if (\n        oldMarkResolution !== this.markResolution ||\n        oldRowSelections !== this.rowSelections\n      ) {\n        this.updateTiles();\n      }\n\n      if (\n        oldRowHeight !== this.rowHeight ||\n        oldRowPadding !== this.rowPadding ||\n        oldRowNormalization !== this.rowNormalization\n      ) {\n        this.updateScales();\n      }\n\n      const oldShowRowLabels = this.showRowLabels;\n      this.showRowLabels = this.options.showRowLabels;\n\n      if (oldShowRowLabels !== this.showRowLabels) {\n        this.updateRowLabels(oldShowRowLabels);\n        this.drawLabel();\n      }\n\n      this.rowLabelAlign = this.options.rowLabelAlign || 'left';\n      this.rowLabelSize = this.options.rowLabelSize || 12;\n\n      this.rowCategories = this.options.rowCategories || {};\n      this.rowIdToCategory = (id) => id.substring(0, id.length - 14);\n      this.rowIdToCategory = this.options.rowIdToCategory\n        ? (id) =>\n            id[this.options.rowIdToCategory.fn](\n              ...this.options.rowIdToCategory.args\n            )\n        : identity;\n    }\n\n    removeRowLabels() {\n      while (this.pAxis.children.length) {\n        this.pAxis.removeChildAt(0);\n      }\n      if (this.rowLabels) {\n        this.rowLabels.forEach((rowLabel) => {\n          rowLabel.destroy();\n        });\n        this.rowLabels = undefined;\n      }\n    }\n\n    updateRowLabels(oldShowRowLabels) {\n      if (!this.tilesetInfo || !this.tilesetInfo.row_infos) return;\n\n      const labels = this.rowSelections.length\n        ? this.rowSelections.map((rowIndex) =>\n            this.tilesetInfo.row_infos[rowIndex] === undefined\n              ? '?'\n              : this.rowIdToCategory(this.tilesetInfo.row_infos[rowIndex].id)\n          )\n        : this.tilesetInfo.row_infos.map(({ id }) => this.rowIdToCategory(id));\n\n      this.removeRowLabels();\n\n      if (this.showRowLabels === 'indicator') {\n        this.rowLabels = labels.map((label) => {\n          const indicator = new PIXI.Sprite(PIXI.Texture.WHITE);\n          indicator.width = this.rowLabelSize / 2;\n          indicator.height = this.rowLabelSize;\n          indicator.tint = this.rowCategories[label]\n            ? HGC.utils.colorToHex(\n                this.rowCategories[label].axisLabelColor ||\n                  DEFAULT_COLOR_MAP[\n                    this.rowCategories[label].index % DEFAULT_COLOR_MAP.length\n                  ]\n              )\n            : 0x808080;\n          return indicator;\n        });\n      } else if (this.showRowLabels) {\n        this.rowLabels = labels.map(\n          (label) =>\n            new PIXI.Text(label, {\n              fontSize: this.rowLabelSize,\n              align: this.rowLabelAlign === 'right' ? 'right' : 'left',\n              fill: this.rowCategories[label]\n                ? HGC.utils.colorToHex(\n                    this.rowCategories[label].axisLabelColor ||\n                      DEFAULT_COLOR_MAP_DARK[\n                        this.rowCategories[label].index %\n                          DEFAULT_COLOR_MAP_DARK.length\n                      ]\n                  )\n                : 0x808080,\n            })\n        );\n      }\n    }\n\n    drawLabel() {\n      if (!this.showRowLabels) {\n        if (this.rowLabels) {\n          while (this.pAxis.children.length) {\n            this.pAxis.removeChildAt(0);\n          }\n        }\n        return;\n      }\n      if (this.showRowLabels && !this.rowLabels) this.updateRowLabels();\n      if (!this.rowLabels) return;\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const [, rowStepHeight] = this.getRowHeight();\n      const rowStepYCenter = rowStepHeight / 2;\n\n      this.rowLabels.forEach((label, i) => {\n        label.x = xLabelOffset;\n        label.y = yStart - this.rowPadding + rowStepYCenter;\n        label.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        label.anchor.y = 0.5;\n\n        yStart += rowStepHeight;\n\n        this.pAxis.addChild(label);\n      });\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    coarsifyTileValues(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const [numRows] = tile.tileData.shape;\n      const binSizePx = Math.floor(TILE_SIZE / this.markResolution);\n      const binSizeBp = tileWidth / this.markResolution;\n      const binSizeBpHalf = binSizeBp / 2;\n\n      // Determine bin boundaries\n      tile.tileData.binXPos = Array(this.markResolution).fill();\n      for (let i = 0; i <= this.markResolution; i++) {\n        tile.tileData.binXPos[i] = tileX + binSizeBp * i + binSizeBpHalf;\n      }\n\n      // 1. Coarsify the dense matrix according to `this.markResolution`\n      tile.tileData.valuesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      tile.tileData.maxValueByRow = Array(numRows).fill(-Infinity);\n\n      for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < TILE_SIZE; j += binSizePx) {\n          const meanValue = meanNan(\n            tile.tileData.dense.subarray(\n              i * TILE_SIZE + j,\n              i * TILE_SIZE + j + binSizePx\n            )\n          );\n          tile.tileData.valuesByRow[i].push(meanValue);\n          tile.tileData.maxValueByRow[i] =\n            meanValue > tile.tileData.maxValueByRow[i]\n              ? meanValue\n              : tile.tileData.maxValueByRow[i];\n        }\n      }\n\n      // 2. Sort rows\n      if (this.rowSelections.length) {\n        tile.tileData.valuesByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.valuesByRow[rowIdx])\n          .filter(identity);\n        tile.tileData.maxValueByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.maxValueByRow[rowIdx])\n          .filter(identity);\n      }\n\n      // 3. Set out shape\n      tile.tileData.coarseShape = [\n        tile.tileData.valuesByRow.length,\n        this.markResolution,\n      ];\n    }\n\n    updateTiles() {\n      Object.values(this.fetchedTiles).forEach(\n        this.coarsifyTileValues.bind(this)\n      );\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const numRows = getNumRows(fetchedTiles);\n\n      const [rowHeight] = this.getRowHeight();\n\n      const actualTrackHeight = this.getTrackHeight(numRows, rowHeight);\n\n      const globalMax = getMax(this.fetchedTiles);\n\n      this.valueScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([rowHeight, 0]);\n      this.colorIndexScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([0, this.markNumColors])\n        .clamp(true);\n\n      if (this.rowNormalization) {\n        const rowMaxs = getRowMaxs(this.fetchedTiles);\n        this.rowValueScales = {};\n        this.rowColorIndexScales = {};\n        for (let i = 0; i < numRows; i++) {\n          this.rowValueScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([rowHeight, 0]);\n          this.rowColorIndexScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([0, this.markNumColors])\n            .clamp(true);\n        }\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.rowValueScales[row](value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.rowColorIndexScales[row](value);\n      } else {\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.valueScale(value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.colorIndexScale(value);\n      }\n\n      this.rowScale = scaleLinear()\n        .domain([0, numRows])\n        .range([0, actualTrackHeight + this.rowPadding]);\n    }\n\n    tilesToData(tiles, { markArea, maxRows = Infinity, rowHeight } = {}) {\n      if (!tiles.length) return [];\n\n      const numRows = Math.min(maxRows, getNumRows(tiles));\n\n      const positionsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const colorIndicesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const offsetSignsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n\n      tiles.forEach((tile) => {\n        tile.tileData.valuesByRow.forEach((values, i) => {\n          if (i >= maxRows) return;\n          values.forEach((value, j) => {\n            const x = this._xScale(tile.tileData.binXPos[j]);\n            const yStart = this.rowScale(i);\n            const y = yStart + this.valueScaleByRow(value, i);\n            // We're duplicating the point as for every point on the line we\n            // need two x,y vertices to render triangles.\n            positionsByRow[i].push(x, y, x, y);\n            colorIndicesByRow[i].push(-1, -1); // -1 refers to the line color\n            offsetSignsByRow[i].push(1, -1);\n\n            if (markArea) {\n              positionsByRow[i].push(x, y, x, yStart + rowHeight);\n              colorIndicesByRow[i].push(this.colorIndexScaleByRow(value, i), 0);\n              offsetSignsByRow[i].push(0, 0);\n            }\n          });\n        });\n      });\n\n      const size2d = markArea ? 8 : 4;\n      const size1d = markArea ? 4 : 2;\n\n      // For each row, duplicate the first and last point\n      for (let i = 0; i < numRows; i++) {\n        // Add first point pair to the beginning of the array\n        positionsByRow[i].unshift(...positionsByRow[i].slice(0, size2d));\n\n        // The very first duplicated point positions do not matter as\n        // we offset the buffer reading. Subsequent dupliations need to be\n        // taken into account though.\n        if (i > 0) {\n          colorIndicesByRow[i].unshift(\n            ...colorIndicesByRow[i].slice(0, size1d)\n          );\n          offsetSignsByRow[i].unshift(...offsetSignsByRow[i].slice(0, size1d));\n        }\n\n        // Add last point pair to the end of the array\n        positionsByRow[i].push(...positionsByRow[i].slice(-size2d));\n        colorIndicesByRow[i].push(...colorIndicesByRow[i].slice(-size1d));\n        offsetSignsByRow[i].push(...offsetSignsByRow[i].slice(-size1d));\n      }\n\n      return [\n        new Float32Array(positionsByRow.flatMap(identity)),\n        new Float32Array(colorIndicesByRow.flatMap(identity)),\n        new Float32Array(offsetSignsByRow.flatMap(identity)),\n      ];\n    }\n\n    toLineIndices(numRows, numPointsPerRow, markArea) {\n      const verticesPerLine = markArea ? 12 : 6;\n      const verticesPerPoint = markArea ? 4 : 2;\n      const indices = new Uint32Array(\n        (numPointsPerRow - 1) * numRows * verticesPerLine\n      );\n      let k = 0;\n\n      if (markArea) {\n        // Draw a line and area\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p1c = p1a + 2;\n            const p1d = p1a + 3;\n            const p2a = p1a + 4;\n            const p2b = p1a + 5;\n            const p2c = p1a + 6;\n            const p2d = p1a + 7;\n\n            const indexOffset = k * verticesPerLine;\n            // Area\n            indices[indexOffset] = p1c;\n            indices[indexOffset + 1] = p1d;\n            indices[indexOffset + 2] = p2c;\n            indices[indexOffset + 3] = p2c;\n            indices[indexOffset + 4] = p1d;\n            indices[indexOffset + 5] = p2d;\n            // Line\n            indices[indexOffset + 6] = p1a;\n            indices[indexOffset + 7] = p1b;\n            indices[indexOffset + 8] = p2a;\n            indices[indexOffset + 9] = p2a;\n            indices[indexOffset + 10] = p1b;\n            indices[indexOffset + 11] = p2b;\n\n            k++;\n          }\n        }\n      } else {\n        // Just draw a line\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p2a = p1a + 2;\n            const p2b = p1a + 3;\n\n            const indexOffset = k * verticesPerLine;\n            indices[indexOffset] = p1a;\n            indices[indexOffset + 1] = p1b;\n            indices[indexOffset + 2] = p2a;\n            indices[indexOffset + 3] = p2a;\n            indices[indexOffset + 4] = p1b;\n            indices[indexOffset + 5] = p2b;\n\n            k++;\n          }\n        }\n      }\n\n      return indices;\n    }\n\n    getRowHeight(numRows) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? [\n            Math.floor(visibleTrackHeight / numRows),\n            Math.floor(visibleTrackHeight / numRows),\n          ]\n        : [this.rowHeight, this.rowHeight + this.rowPadding];\n    }\n\n    getTrackHeight(numRows, rowHeight) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? visibleTrackHeight\n        : rowHeight * numRows + this.rowPadding * (numRows - 1);\n    }\n\n    renderLines() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n\n      const [positions, colorIndices, offsetSigns] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const numPointsPerRow = getNumPointsPerRow(\n        numRows,\n        positions,\n        this.markArea\n      );\n\n      const indices = this.toLineIndices(\n        numRows,\n        numPointsPerRow,\n        this.markArea\n      );\n\n      const uniforms = new PIXI.UniformGroup({\n        uLineColor: [...this.markColorRgbNorm, 1.0],\n        uNaNColor: [1.0, 1.0, 1.0, 1.0],\n        uAreaColorTex: this.markColorTex,\n        uAreaColorTexRes: this.markColorTexRes,\n        uWidth: 0.25,\n        uMiter: 1,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      const numCoords = 2;\n      const numVerticesPoint = this.markArea ? 4 : 2;\n      geometry.addAttribute(\n        'aPrevPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        0 // offset/start\n      );\n      geometry.addAttribute(\n        'aCurrPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        // note that each point is duplicated, hence we need to skip over the first two\n        FLOAT_BYTES * numCoords * numVerticesPoint // offset/start\n      );\n      geometry.addAttribute(\n        'aNextPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * 2, // stride\n        // note that each point is duplicated, hence we need to skip over the first four\n        FLOAT_BYTES * numCoords * numVerticesPoint * 2 // offset/start\n      );\n      geometry.addAttribute('aOffsetSign', offsetSigns, 1);\n      geometry.addAttribute('aColorIndex', colorIndices, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.lineGraphics) {\n        this.pMain.removeChild(this.lineGraphics);\n        this.lineGraphics.destroy();\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.lineGraphics = newGraphics;\n\n      scaleGraphics(this.lineGraphics, this._xScale, this.drawnAtScale);\n\n      this.draw();\n      this.animate();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.renderLines();\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.lineGraphics) {\n        scaleGraphics(this.lineGraphics, newXScale, this.drawnAtScale);\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Return the data currently visible at position X and Y\n     *\n     * @param {Number} trackX: The x position relative to the track's start and end\n     * @param {Number} trakcY: The y position relative to the track's start and end\n     */\n    getVisibleData(trackX, trackY) {\n      if (!this.hasFetchedTiles()) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n\n      const numRows = getNumRows(this.fetchedTiles);\n      const [, rowStepHeight] = this.getRowHeight(numRows);\n\n      // the width of the tile in base pairs\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tilePos = this._xScale.invert(trackX) / tileWidth;\n\n      // the position of query within the tile\n      let posInTileX =\n        this.tilesetInfo.tile_size * (tilePos - Math.floor(tilePos));\n      // const posInTileYNormalized = trackY / this.dimensions[1];\n      // The first track doesn't apply padding so we have to shift padding\n      // to the mouse position once\n      const rowIndex = Math.floor(\n        Math.max(0, (trackY + this.rowPadding) / rowStepHeight)\n      );\n      const rowSelection = this.rowSelections[rowIndex];\n      const tileId = this.tileToLocalId([zoomLevel, Math.floor(tilePos)]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      let text = '';\n      let value = '<em>unknown</em>';\n\n      if (fetchedTile) {\n        if (!this.tilesetInfo.shape) {\n          posInTileX =\n            fetchedTile.tileData.dense.length * (tilePos - Math.floor(tilePos));\n        }\n\n        let index = null;\n        if (this.tilesetInfo.shape) {\n          // Accomodate data from vector sources\n          if (\n            Array.isArray(rowSelection) &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            // Need to aggregate, so `index` will actually be an array.\n            index = rowSelection.map(\n              (rowI) =>\n                this.tilesetInfo.shape[0] * rowI + Math.floor(posInTileX)\n            );\n          } else if (\n            rowSelection &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            index =\n              this.tilesetInfo.shape[0] * rowSelection + Math.floor(posInTileX);\n          } else {\n            // No need to aggregate, `index` will contain a single item.\n            index =\n              this.tilesetInfo.shape[0] * rowIndex + Math.floor(posInTileX);\n          }\n        } else {\n          index =\n            fetchedTile.tileData.dense.length * rowIndex +\n            Math.floor(posInTileX);\n        }\n\n        if (Array.isArray(index)) {\n          const values = index.map((i) => fetchedTile.tileData.dense[i]);\n          value = format('.3f')(this.selectRowsAggregationFn(values));\n          text = value;\n\n          text += '<br/>';\n          text += `${index.length}-item ${this.options.selectRowsAggregationMode}`;\n        } else {\n          value = format('.3f')(fetchedTile.tileData.dense[index]);\n          text = value;\n\n          if (Array.isArray(rowSelection)) {\n            value += '<br/>';\n            value += `${rowSelection.length}-item ${this.options.selectRowsAggregationMode}`;\n          }\n        }\n      }\n\n      // add information about the row\n      if (this.tilesetInfo.row_infos) {\n        let rowInfo = '';\n\n        if (rowSelection !== undefined) {\n          rowInfo = this.tilesetInfo.row_infos[rowSelection];\n        } else if (rowIndex) {\n          rowInfo = this.tilesetInfo.row_infos[rowIndex];\n        }\n\n        const label =\n          typeof rowInfo === 'object'\n            ? this.rowIdToCategory(rowInfo.id)\n            : rowInfo;\n\n        const color = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_DARK[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_DARK.length\n            ]\n          : '#666666';\n\n        const background = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_LIGHT[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_LIGHT.length\n            ]\n          : '#ffffff';\n\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${background}\"><strong style=\"color: ${color};\">${label}:</strong> ${value}</div>`;\n      }\n\n      return text;\n    }\n\n    /**\n     * Get some information to display when the mouse is over this\n     * track\n     *\n     * @param {Number} trackX: the x position of the mouse over the track\n     * @param {Number} trackY: the y position of the mouse over the track\n     *\n     * @return {string}: A HTML string containing the information to display\n     *\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      return this.getVisibleData(trackX, trackY);\n    }\n\n    exportSVG() {\n      const svgns = 'http://www.w3.org/2000/svg';\n\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'ridge-plot-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]}, ${this.position[1]})`\n      );\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n      const stride = this.markArea ? 8 : 4;\n\n      const [positions] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const createLine = line()\n        .x((d) => d[0])\n        .y((d) => d[1]);\n\n      const posPerRow = positions.length / numRows;\n\n      const posToPoints = (pos) => {\n        const arr = [];\n        const start = stride;\n        const end = pos.length - stride;\n\n        for (let i = start; i < end; i += stride) {\n          arr.push([pos[i], pos[i + 1]]);\n        }\n\n        return arr;\n      };\n\n      let fill = this.markArea\n        ? (this.options.colorRange && this.options.colorRange[0]) || '#ffffff'\n        : 'none';\n      if (this.markArea && this.options.colorRange) {\n        const numColors = this.options.colorRange.length;\n        const defs = document.createElementNS(svgns, 'defs');\n        const linearGradient = document.createElementNS(\n          svgns,\n          'linearGradient'\n        );\n        linearGradient.setAttribute('id', 'RidgePlotGradient');\n        linearGradient.setAttribute('x1', '0');\n        linearGradient.setAttribute('y1', '1');\n        linearGradient.setAttribute('x2', '0');\n        linearGradient.setAttribute('y2', '0');\n        this.options.colorRange.forEach((color, i) => {\n          const stop = document.createElementNS(svgns, 'stop');\n          stop.setAttribute(\n            'offset',\n            `${Math.round((i / (numColors - 1)) * 100)}%`\n          );\n          stop.setAttribute('stop-color', color);\n          linearGradient.appendChild(stop);\n        });\n        defs.appendChild(linearGradient);\n        base.insertBefore(defs, base.firstChild);\n        fill = 'url(#RidgePlotGradient)';\n      }\n\n      for (let i = 0; i < numRows; i++) {\n        const arr = posToPoints(\n          positions.subarray(i * posPerRow, (i + 1) * posPerRow)\n        );\n\n        const l = document.createElement('path');\n        let d = createLine(arr);\n\n        const y0 = this.rowScale(i) + this.valueScaleByRow(0, i);\n\n        // We extend the line a little to the left and right and anchor them at\n        // y = 0 to avoid weird glitches with the fill.\n        const firstComma = d.indexOf(',');\n        const firstX = +d.substring(1, firstComma);\n        const firstY = +d.substring(firstComma + 1, d.indexOf('L'));\n        d = `M${firstX - 1},${y0}L${firstX - 1},${firstY}L${d.substring(1)}`;\n        const lastComma = d.lastIndexOf(',');\n        const lastX = +d.substring(d.lastIndexOf('L') + 1, lastComma);\n        const lastY = +d.substring(lastComma + 1);\n        d += `L${lastX + 1},${lastY}L${lastX + 1},${y0}`;\n\n        l.setAttribute('d', d);\n        l.setAttribute('fill', fill);\n        l.setAttribute('stroke', this.options.markColor || 'black');\n        l.setAttribute('stroke-width', (this.options.markSize || 2) / 8);\n\n        output.appendChild(l);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new RidgePlotTrack(...args);\n};\n\ncreateRidgePlotTrack.config = {\n  type: 'ridge-plot',\n  datatype: ['multivec'],\n  orientation: '1d',\n  name: 'RidgePlot',\n};\n\nexport default createRidgePlotTrack;\n","import createIntervalTree from 'interval-tree-1d';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n  EPS,\n} from './constants';\nimport { contains, dashedXLineTo, toFixed } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aHighlight;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main(void)\n  {\n    vHighlight = aHighlight;\n    vOpacity = aOpacity;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n\n  uniform vec4 uColor;\n  uniform vec4 uColorHighlight;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main() {\n    float isNotFocused = 1.0 - vHighlight;\n\n    float r = uColor.r * isNotFocused + uColorHighlight.r * vHighlight;\n    float g = uColor.g * isNotFocused + uColorHighlight.g * vHighlight;\n    float b = uColor.b * isNotFocused + uColorHighlight.b * vHighlight;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [pt.opacity, pt.opacity, pt.opacity, pt.opacity];\n\nconst pointToHighlight = (pt) => [\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n];\n\nconst getItemDistance = (item) =>\n  Math.abs(\n    +item.fields[1] +\n      (+item.fields[2] - +item.fields[1]) / 2 -\n      (+item.fields[4] + (+item.fields[4] - +item.fields[5]) / 2)\n  );\n\nconst getMaxDistance = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxDist, tile) =>\n      Math.max(\n        maxDist,\n        tile.tileData.reduce(\n          (maxDistItem, item) => Math.max(maxDistItem, item.distance),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getRegionId = (item) =>\n  `${item.fields[0]}:${item.fields[1]}-${item.fields[2]}`;\n\nconst createStratifiedBedTrack = function createStratifiedBedTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { MAX_CLICK_DELAY } = HGC.configs;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class StratifiedBedTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.pLegend = new PIXI.Graphics();\n      this.pMasked.addChild(this.pLegend);\n\n      this.legendMin = Infinity;\n      this.legendMax = -Infinity;\n\n      // Needed for interaction tracking because interaction tracking on the\n      // mesh causes errors...\n      this.bg = new PIXI.Sprite(PIXI.Texture.WHITE);\n      [this.bg.width, this.bg.height] = this.dimensions;\n      this.bg.interactive = true;\n      this.bg.interactiveChildren = false;\n      this.bg.alpha = 0;\n\n      let mousedownTime = performance.now();\n      this.bg.mousedown = () => {\n        mousedownTime = performance.now();\n      };\n      this.bg.mouseup = (e) => {\n        if (performance.now() - mousedownTime < MAX_CLICK_DELAY)\n          this.clickHandler(e);\n      };\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.distance = getItemDistance(item) || -1;\n        item.cX = item.xStart + (item.xEnd - item.xStart) / 2;\n        item.regionId = getRegionId(item);\n        item.isLeftToRight = item.xStart < item.xEnd;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorHighlight = HGC.utils.colorToHex(\n        this.options.markColorHighlight || 'red'\n      );\n\n      this.markColorHighlightRgbNorm = this.options.markColorHighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorHighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markColorDehighlight = HGC.utils.colorToHex(\n        this.options.markColorDehighlight || '#999999'\n      );\n\n      this.markColorDehighlightRgbNorm = this.options.markColorDehighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorDehighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0.6, 0.6, 0.6];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.distance;\n\n      this.opacityEncoding = this.options.opacityEncoding || 'solid';\n\n      switch (this.opacityEncoding) {\n        case 'frequency':\n          this.opacityScale = () => 0.1;\n          break;\n\n        case 'highestImportance':\n        case 'closestImportance': {\n          const importanceDomain = this.options.importanceDomain || [1, 1000];\n          const opacityLinearScale = scaleLinear()\n            .domain(importanceDomain)\n            .range([1, 10]);\n          this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n          break;\n        }\n\n        case 'solid':\n        default:\n          this.opacityScale = () => 1;\n          break;\n      }\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.getRegion = this.options.focusRegion\n        ? (item) => [item.xStart, item.xEnd]\n        : undefined;\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.focusStyle = this.options.focusStyle\n        ? this.options.focusStyle.toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxDist = getMaxDistance(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item, isHighlighting) {\n      return {\n        cX: this._xScale(item.cX),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        highlight: isHighlighting && item.__focus,\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n        __item: item,\n      };\n    }\n\n    isItemInFocus() {\n      if (\n        this.getGene &&\n        this.focusGene &&\n        this.getRegion &&\n        this.focusRegion\n      ) {\n        return (item) => {\n          item.__focus =\n            this.getGene(item) === this.focusGene &&\n            contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      if (this.getGene && this.focusGene) {\n        return (item) => {\n          item.__focus = this.getGene(item) === this.focusGene;\n          return item.__focus;\n        };\n      }\n\n      if (this.getRegion && this.focusRegion) {\n        return (item) => {\n          item.__focus = contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      return (item) => {\n        item.__focus = false;\n        // If no focus was defined, we include all intervals\n        return true;\n      };\n    }\n\n    itemToIndicatorReducer(filterFn, addFn) {\n      if (this.focusStyle === 'highlighting') {\n        return (filteredItems, item) => {\n          filterFn(item);\n          addFn(filteredItems, item);\n          return filteredItems;\n        };\n      }\n\n      return (filteredItems, item) => {\n        if (filterFn(item)) addFn(filteredItems, item);\n        return filteredItems;\n      };\n    }\n\n    getPoints(isHighlighting) {\n      let reducerVar = [];\n      let addFn = (accumulator, item) =>\n        accumulator.push(this.itemToIndicatorCategory(item, isHighlighting));\n\n      if (this.opacityEncoding === 'highestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (accumulator[item.regionId]) {\n            const i1 = this.getImportance(accumulator[item.regionId].__item);\n            const i2 = this.getImportance(item);\n            if (i2 > i1) {\n              accumulator[item.regionId] = this.itemToIndicatorCategory(\n                item,\n                isHighlighting\n              );\n            }\n          } else {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      } else if (this.opacityEncoding === 'closestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (\n            !accumulator[item.regionId] ||\n            item.distance < accumulator[item.regionId].__item.distance\n          ) {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      }\n\n      const filterFn = this.isItemInFocus();\n      const dataToPoint = this.itemToIndicatorReducer(filterFn, addFn);\n\n      return Object.values(this.fetchedTiles).flatMap((tile) =>\n        Object.values(tile.tileData.reduce(dataToPoint, reducerVar))\n      );\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const highlights = new Float32Array(points.flatMap(pointToHighlight));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: isHighlighting\n          ? [...this.markColorDehighlightRgbNorm, this.markOpacity]\n          : [...this.markColorRgbNorm, this.markOpacity],\n        uColorHighlight: [...this.markColorHighlightRgbNorm, this.markOpacity],\n        uHighlighting: isHighlighting,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aHighlight', highlights, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(this.bg);\n      newGraphics.addChild(mesh);\n\n      [this.bg.width, this.bg.height] = this.dimensions;\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.indicatorPointGraphics.removeChild(this.bg);\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (this.options.focusStyle === 'highlighting') {\n          this.pAxis.beginFill(0xffffff, 0.66);\n        } else {\n          this.pAxis.beginFill(this.groupToColor.get(i)[1], 0.66);\n        }\n\n        this.pAxis.lineStyle(0);\n        if (this.axisAlign === 'right') {\n          this.pAxis.drawRect(\n            labelPixiText.x - labelPixiText.width,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        } else {\n          this.pAxis.drawRect(\n            labelPixiText.x,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        }\n        this.pAxis.endFill();\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    renderIndicatorLegend() {\n      this.pLegend.clear();\n\n      if (this.opacityEncoding.indexOf('Importance') === -1) {\n        if (this.legendMinText) {\n          this.pLegend.removeChild(this.legendMinText);\n          this.legendMinText.destroy();\n          this.legendMinText = undefined;\n        }\n        if (this.legendMaxText) {\n          this.pLegend.removeChild(this.legendMaxText);\n          this.legendMaxText.destroy();\n          this.legendMaxText = undefined;\n        }\n        return;\n      }\n\n      const padding = 6;\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n      const [, y] = this.categoryHeightScale.range();\n      const isRightAligned = this.options.legendAlign === 'right';\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      this.pLegend.position.x = isRightAligned ? left + width : left;\n      this.pLegend.position.y = top + y + padding;\n\n      const [minValue, maxValue] = this.options.importanceDomain || [1, 1000];\n\n      if (Math.abs(minValue - this.legendMin) > EPS) {\n        if (this.legendMinText) {\n          this.pLegend.removeChild(this.legendMinText);\n          this.legendMinText.destroy();\n        }\n        this.legendMinText = new PIXI.Text(toFixed(minValue, 3), {\n          fontSize: this.labelSize,\n          align: isRightAligned ? 'right' : 'left',\n          fill: 0x808080,\n        });\n        this.legendMinText.x = 0;\n        this.legendMinText.y = padding / 2;\n        this.legendMinText.anchor.x = isRightAligned ? 1 : 0;\n        this.pLegend.addChild(this.legendMinText);\n      }\n\n      if (Math.abs(maxValue - this.legendMax) > EPS) {\n        if (this.legendMaxText) {\n          this.pLegend.removeChild(this.legendMaxText);\n          this.legendMaxText.destroy();\n        }\n        this.legendMaxText = new PIXI.Text(toFixed(maxValue, 3), {\n          fontSize: this.labelSize,\n          align: isRightAligned ? 'right' : 'left',\n          fill: 0x808080,\n        });\n        this.legendMaxText.x = 0;\n        this.legendMaxText.y = padding / 2;\n        this.legendMaxText.anchor.x = isRightAligned ? 1 : 0;\n        this.pLegend.addChild(this.legendMaxText);\n      }\n\n      const legendRectWidth = 42;\n      const minTextWidth = this.legendMinText.getBounds().width;\n      const maxTextWidth = this.legendMaxText.getBounds().width;\n      const offset = isRightAligned\n        ? -(maxTextWidth + legendRectWidth + padding)\n        : minTextWidth + padding;\n\n      this.pLegend.beginFill(0xffffff);\n      this.pLegend.lineStyle(1, 0xcccccc);\n      if (isRightAligned) {\n        this.legendMinText.x = offset - padding;\n        this.pLegend.drawRoundedRect(\n          -(legendRectWidth + minTextWidth + maxTextWidth + 3 * padding + 0.5),\n          0,\n          legendRectWidth + minTextWidth + maxTextWidth + 3 * padding,\n          18 + (isHighlighting * padding) / 2,\n          3\n        );\n      } else {\n        this.legendMaxText.x = offset + legendRectWidth + 2 * padding;\n        this.pLegend.drawRoundedRect(\n          0.5,\n          0,\n          legendRectWidth + minTextWidth + maxTextWidth + 3 * padding,\n          18 + (isHighlighting * padding) / 2,\n          3\n        );\n      }\n      this.pLegend.endFill();\n      this.pLegend.lineStyle(0);\n\n      for (let i = 0; i < 5; i++) {\n        const opacity = this.opacityScale(minValue + (i / 4) * maxValue);\n\n        this.pLegend.beginFill(this.markColor, opacity);\n        this.pLegend.drawRect(\n          i * 9 + offset,\n          padding / 2 + !isHighlighting * 3,\n          6,\n          6\n        );\n        this.pLegend.endFill();\n\n        if (isHighlighting) {\n          this.pLegend.beginFill(this.markColorHighlight, opacity);\n          this.pLegend.drawRect(i * 9 + offset, padding / 2 + 9, 6, 6);\n          this.pLegend.endFill();\n        }\n      }\n\n      if (isRightAligned) {\n        this.legendMinText.x = offset - padding;\n        this.legendMaxText.x = -padding / 2;\n      } else {\n        this.legendMinText.x = padding / 2;\n        this.legendMaxText.x = offset + legendRectWidth + 2 * padding;\n      }\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis();\n      this.renderIndicatorLegend();\n      this.renderIndicatorPoints();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile) {\n      tile.graphics.clear();\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    getElementAtPosition(relX, relY) {\n      if (!this.tilesetInfo) return undefined;\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(relX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return undefined;\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(relY))\n      );\n\n      const xAbsLo = this._xScale.invert(relX - 1);\n      const xAbsHi = this._xScale.invert(relX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      return {\n        item: foundItem,\n        category,\n        tileId,\n      };\n    }\n\n    getMouseOverHtml(relX, relY) {\n      const element = this.getElementAtPosition(relX, relY);\n\n      if (!element) return '';\n\n      const { item, category } = element;\n\n      if (item) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(item).toFixed(2);\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    clickHandler(event) {\n      const [offsetX, offsetY] = this.position;\n      const relX = event.data.global.x - offsetX;\n      const relY = event.data.global.y - offsetY;\n\n      const element = this.getElementAtPosition(relX, relY);\n\n      if (element) {\n        this.pubSub.publish('app.click', {\n          type: 'annotation',\n          event,\n          payload: element,\n        });\n      }\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    renderIndicatorCategoryAxisAsSvg() {\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.pAxis.position.x}, ${this.pAxis.position.y})`\n      );\n\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n\n      const createRect = (x, y, w, h, f, o) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', x);\n        r.setAttribute('y', y);\n        r.setAttribute('width', w);\n        r.setAttribute('height', h);\n        r.setAttribute('fill', f);\n        r.setAttribute('fill-opacity', o);\n        r.setAttribute('stroke-width', 0);\n\n        return r;\n      };\n\n      const createText = (pixiText) => {\n        const t = document.createElement('text');\n\n        t.setAttribute('x', pixiText.x);\n        t.setAttribute('y', pixiText.y + pixiText.height / (4 / 1));\n        t.setAttribute('fill', pixiText._style._fill);\n        t.setAttribute(\n          'text-anchor',\n          pixiText._style._align === 'right' ? 'end' : 'start'\n        );\n        t.setAttribute('style', `font: ${pixiText._font};`);\n\n        t.textContent = pixiText.text;\n\n        return t;\n      };\n\n      const createLine = ({\n        stroke = '#000000',\n        strokeWidth = 1,\n        strokeDasharray = null,\n      } = {}) => (x1, y1, x2, y2) => {\n        const l = document.createElement('line');\n\n        l.setAttribute('x1', x1);\n        l.setAttribute('y1', y1);\n        l.setAttribute('x2', x2);\n        l.setAttribute('y2', y2);\n        l.setAttribute('stroke', stroke);\n        l.setAttribute('stroke-width', strokeWidth);\n\n        if (strokeDasharray)\n          l.setAttribute('stroke-dasharray', strokeDasharray);\n\n        return l;\n      };\n\n      const createDashedLine = createLine({ strokeDasharray: '5' });\n\n      const isHighlighting = this.options.focusStyle === 'highlighting';\n      const backgroundOpacity = 0.66;\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n\n        // Background color\n        const backgroundColor = isHighlighting\n          ? '#ffffff'\n          : `#${this.groupToColor.get(i)[1].toString(16)}`;\n\n        if (this.axisAlign === 'right') {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x - labelPixiText.width,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        } else {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        }\n\n        gAxis.appendChild(createText(labelPixiText));\n\n        gAxis.appendChild(createLine()(0, yStart, xTickOffset, yStart));\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          gAxis.appendChild(createDashedLine(0, yStart, xTickEnd, yStart));\n        }\n\n        yStart = yEnd;\n      });\n\n      gAxis.appendChild(createLine()(0, 0, 0, yEnd));\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        gAxis.appendChild(createDashedLine(0, yEnd, xTickEnd, yEnd));\n      }\n\n      return gAxis;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stratified-bed-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n      const color = isHighlighting\n        ? this.options.markColorDehighlight || '#999999'\n        : this.options.markColor || 'black';\n      const colorHighlight = this.options.markColorHighlight || 'red';\n\n      points.forEach(({ cX, y, widthHalf, opacity, highlight, height }, i) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', cX - widthHalf);\n        r.setAttribute('y', y);\n        r.setAttribute('width', widthHalf * 2);\n        r.setAttribute('height', height);\n        r.setAttribute('fill', highlight ? colorHighlight : color);\n        r.setAttribute('fill-opacity', opacity);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      base.appendChild(this.renderIndicatorCategoryAxisAsSvg());\n\n      return [base, track];\n    }\n  }\n\n  return new StratifiedBedTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStratifiedBedTrack.config = {\n  type: 'stratified-bed',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStratifiedBedTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n\n      return [circleDraws, circleFocusDraws];\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo || !this.options.toolTip) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'exported-snp-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles()\n        .filter((tile) => tile.plusStrandRows)\n        .forEach((tile) => {\n          // call drawTile with storePolyStr = true so that\n          // we record path strings to use in the SVG\n          const [circles, focusedCircles] = this.renderRows(\n            tile,\n            tile.plusStrandRows,\n            tile.plusStrandRows.length,\n            0,\n            this.dimensions[1],\n            'blue'\n          );\n\n          circles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColor || 'black');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacity || 0.33);\n            c.setAttribute('r', this.options.markSize);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n\n          focusedCircles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColorFocus || 'red');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacityFocus || 0.66);\n            c.setAttribute('r', this.options.markSize + 1);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n        });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n} from './constants';\nimport { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n      tile.histogram2dNumPred = new Uint8Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      const categoryBinHash = new Map();\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const category = this.getCategory(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          const binHash = categoryBinHash.get(category) || {};\n\n          // Make sure we count multiple enhancer predictions of the same biosample and bin only once (i.e., summing up)\n          if (!binHash[bin]) {\n            binHash[bin] = binHash[bin] || score > 0;\n            tile.histogram2dNumPred[histIdx] += binHash[bin];\n            categoryBinHash.set(category, binHash);\n          }\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const rowCumSum = [];\n      const rowNumPred = [];\n      let totalPred = 0;\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        const numPred =\n          fetchedTile.histogram2dNumPred[i * this.numBins + binXPos];\n        rowNumPred.push(numPred);\n        totalPred += numPred;\n        rowCumSum.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = rowCumSum.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value =\n          fetchedTile.histogram2dNumPred[group * this.numBins + binXPos];\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value} of ${totalPred} samples</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stacked-bar-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      segments.forEach(({ xStart, xEnd, yStart, yEnd, colorIdx }) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', xEnd);\n        r.setAttribute('y', yEnd);\n        r.setAttribute('width', Math.abs(xEnd - xStart));\n        r.setAttribute('height', Math.abs(yEnd - yStart));\n        r.setAttribute('fill', this.colorMap[colorIdx]);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Advanced Stacked Bars Track',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import createPubSub from 'pub-sub-es';\n\nfunction createTssTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  class TssTrack extends HGC.tracks.BedLikeTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      const { publish, subscribe, unsubscribe } = createPubSub();\n      this.publish = publish;\n      this.subscribe = subscribe;\n      this.unsubscribe = unsubscribe;\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = 1;\n      const radius = 2;\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = {\n              xStartScreen: xStartPos,\n              xEndScreen: xEndPos,\n              xStartAbs: txStart,\n              xEndAbs: txEnd,\n              data: td,\n            };\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        circleDraws.forEach((circleDraw) => {\n          this.publish('annotationDrawn', circleDraw);\n        });\n      }\n    }\n\n    rerender() {\n      // Monkey patch because TiledPixiTrack doesn't always fire correctly\n      this.draw();\n      this.publish('tilesDrawn', { uuid: this.uuid });\n    }\n\n    updateExistingGraphics() {\n      super.updateExistingGraphics();\n      this.publish('tilesDrawn', { uuid: this.uuid });\n    }\n\n    getMouseOverHtml() {\n      return '';\n    }\n  }\n\n  return new TssTrack(...args);\n}\n\ncreateTssTrack.config = {\n  type: 'tss',\n  datatype: ['bedlike'],\n};\n\nexport default createTssTrack;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAnnotationOverlayMetaTrack from './annotation-overlay-meta-track';\nimport createRidgePlotTrack from './ridge-plot-track';\nimport createStratifiedBedTrack from './stratified-bed-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\nimport createTssTrack from './tss-track';\n\nimport './index.css';\n\nregister({\n  track: createRidgePlotTrack,\n  config: createRidgePlotTrack.config,\n});\n\nregister({\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  track: createStratifiedBedTrack,\n  config: createStratifiedBedTrack.config,\n});\n\nregister({\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nregister({\n  track: createTssTrack,\n  config: createTssTrack.config,\n});\n\nregister({\n  track: createAnnotationOverlayMetaTrack,\n  config: createAnnotationOverlayMetaTrack.config,\n  isMetaTrack: true,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}