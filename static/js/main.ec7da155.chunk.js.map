{"version":3,"sources":["AppInitializing.js","AppError.js","ChromInfoProvider.js","use-debounce.js","CheckboxList.js","Logo.js","FileInput.js","utils.js","local-bed-data-server.js","use-previous.js","use-query-string.js","constants.js","state.js","VariantsSettings.js","Welcome.js","ModalProvider.js","AppSidebar.js","SearchField.js","AppTopbar.js","EnhancerRegionsInfo.js","EnhancerRegionsHelp.js","EnhancerRegionsSettings.js","TitleBar.js","view-config.js","EnhancerRegions.js","EnhancerGenesInfo.js","EnhancerGenesHelp.js","EnhancerGenesSettings.js","TooltipProvider.js","EnhancerGenesPlot.js","EnhancerGenes.js","DnaAccessibilityInfo.js","DnaAccessibilityHelp.js","DnaAccessibilitySettings.js","DnaAccessibility.js","AppMain.js","with-either.js","App.js","serviceWorker.js","annotation-overlay-meta-track.js","ridge-plot-track.js","stratified-bed-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","tss-track.js","local-bed-data-fetcher.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","backgroundColor","AppInitializing","classes","className","Backdrop","open","CircularProgress","ChromInfoContext","createContext","ChromInfoProvider","children","chromInfo","Provider","value","useChromInfo","context","React","useContext","undefined","Error","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","root","position","filterBar","top","content","right","left","bottom","background","checkbox","marginTop","marginBottom","checkboxLabel","fontSize","marginLeft","nestedCheckbox","visible","transition","transform","height","invisible","Option","memo","filterState","name","stateWithName","group","stateWithGroup","colorCheckbox","colorText","filter","useRecoilValue","useRecoilState","state","setState","groupState","setGroupState","nameLowerCase","useMemo","toLowerCase","changeHandler","useCallback","event","currState","checked","target","currGroupState","newGroupState","n","N","length","includes","FormControlLabel","key","control","Checkbox","style","icon","checkedIcon","onChange","label","Typography","noWrap","OptionGroup","NestedCheckboxList","optionWithName","optionGroupWithGroup","filterLabel","groupedOptions","optionToGroup","groupColors","groupColorsDark","globalFilter","setGlobalFilter","setFilter","filterDb","filterChangeHandler","filterBarBg","FormControl","variant","margin","fullWidth","InputLabel","htmlFor","Grid","container","direction","alignItems","OutlinedInput","id","FormGroup","map","i","Fragment","options","option","logo","padding","lineHeight","fontWeight","logoAbc","letterSpacing","paddingRight","logoEnhancer","Logo","props","styles","item","defaultProps","FileInput","forwardRef","ref","clearHandler","onClear","accept","Icon","InsertDriveFileIcon","otherProps","file","setFile","localChangeHandler","fileList","files","clearFile","ButtonGroup","Button","component","disableElevation","startIcon","type","hidden","disabled","onClick","contains","a","b","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","rgba","Float32Array","forEach","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","y","dashSize","diff","sign","width","abs","stepSize","numSteps","moveTo","lineTo","getQueryStringValue","decoder","identity","queryString","parse","window","location","search","setQueryStringValue","encoder","values","newQsValue","stringify","strict","url","origin","pathname","history","pushState","path","toAbsPosition","absPosition","indexOf","split","chrom","pos","chrPositions","toFixed","number","decimals","forced","string","substring","scaleBand","domain","fixedBandwidth","bandwidth","range","rangeSize","paddingInner","paddingInnerZeroBased","totalWidth","sum","getBandwidth","update","totalPaddingInner","reduce","scale","v","idx","slice","newDomain","newRange","newFixedBandwidth","newPaddingInner","newPaddingInnerZeroBased","booleanQueryStringDecoder","header","columnImportance","tree","IntervalTree","text","lines","fields","chromOffset","startAbs","endAbs","insert","chrOffset","importance","uid","createLocalBedDataServer","tilesetInfo","whenIndex","loadFile","subscriptionTile","globalPubSub","subscribe","fileId","z","x","requestId","then","index","tileWidth","max_width","start","end","results","publish","subscriptionTilesetInfo","destroy","unsubscribe","usePrevious","useRef","current","useRecoilQueryString","atom","setValue","onSetValue","newValue","EPS","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","GENE_SEARCH_URL","VARIANT_SEARCH_URL","DEFAULT_STRATIFICATION","categoryField","axisShowGroupSeparator","axisNoGroupColor","groups","categories","GROUPED_SAMPLE_OPTIONS","SAMPLE_TO_GROUP","sampleToGroup","SAMPLES","flatMap","DEFAULT_VARIANT_TRACK_DEF","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","labelPosition","labelColor","labelOpacity","showMousePosition","showGlobalMousePosition","mousePositionColor","toolTip","field","numDecimals","other","LOCAL_BED_TILESET_INFO_HG19","zoom_step","max_length","assembly","chrom_names","chrom_sizes","tile_size","max_zoom","min_pos","max_pos","version","coordSystem","DEFAULT_VIEW_CONFIG_ENHANCER","editable","trackSourceServers","views","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","chromInfoPath","tracks","contents","stroke","fontIsLeftAligned","tilesetUid","server","fromViewUid","projectionFillColor","projectionStrokeColor","projectionFillOpacity","projectionStrokeOpacity","strokeWidth","plusStrandColor","minusStrandColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","focusRegion","binSize","axisAlign","arcStyle","indicatorStyle","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","legendAlign","markColorHighlight","markColorDehighlight","markMinWidth","markHeight","rowHeight","overlays","extent","minWidth","fill","fillOpacity","outline","outlineOpacity","outlineWidth","outlinePos","metaTracks","overlaysTrack","annotationTracks","layout","w","h","initialXDomain","initialYDomain","DEFAULT_DNA_ACCESSIBILITY_ROW_SELECTION","DEFAULT_DNA_ACCESSIBILITY_ROW_CATEGORIES","row","category","axisLabelColor","axisLabelBackground","sample","DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY","zoomFixed","labelShowResolution","labelShowAssembly","markArea","markResolution","valueScaling","colorRange","rowPadding","rowNormalization","rowSelections","rowIdToCategory","fn","args","rowCategories","showRowLabels","rowLabelSize","getDefault","initialValue","chrPosUrlEncoder","chrPos","replace","chrPosUrlDecoder","sampleFilterState","default","sampleSelectionState","selector","get","sampleWithName","memoize","sampleGroupWithGroup","variantTracksState","deepClone","columnPvalue","columnPosteriorProbability","showVariantsSettingsState","showWelcomeState","dnaAccessLabelStyleState","dnaAccessLabelShowInfoState","focusGeneState","focusGeneOptionState","focusVariantState","focusVariantOptionState","variantYScaleState","enhancerRegionsHideUnfocusedState","enhancerRegionsColorEncodingState","enhancerRegionsShowInfoState","enhancerGenesShowInfoState","enhancerGenesPaddingState","enhancerGenesCellEncodingState","enhancerGenesSvgState","higlassEnhancerRegionsState","higlassDnaAccessState","xDomainStartWithAssembly","totalLength","absToChr","join","xDomainEndWithAssembly","xDomainStartAbsWithAssembly","xDomainStart","xDomainEndAbsWithAssembly","xDomainEnd","focusGeneStartWithAssembly","focusGeneOption","chr","txStart","focusGeneEndWithAssembly","txEnd","focusVariantPositionWithAssembly","focusVariantOption","focusVariantRelPositionState","focusVariantStrPositionState","useFocusGene","useFocusVariant","useDnaAccessShowInfos","useXDomainStartWithAssembly","useXDomainEndWithAssembly","useEnhancerRegionsShowInfos","useEnhancerGenesShowInfos","note","palette","grey","title","buttonNormal","buttonActive","boxShadow","trackList","useStylesTrackConfig","grow","flex","separator","marginRight","propInput","useStylesTooltipVisible","arrow","tooltip","useStylesTooltipHidden","display","TrackConfig","config","propertyChangeHandler","property","isRemote","Boolean","isLocal","whatever","classesTooltipVisible","classesTooltipHidden","Tooltip","placement","TextField","size","min","step","VariantsSettings","closeHandler","setFocusVariant","variantTracks","setVariantTracks","tmpVariantTracks","setTmpVariantTracks","changed","setChanged","variantTrackServers","currVariantTracks","changeTmpVariantTracks","newTrackConfig","currTmpVariantTracks","newTmpVariantTracks","saveHandler","newVariantTracks","servers","trackConfig","push","some","align","href","rel","variantTrackConfig","justifyContent","spacing","showTutorial","startExploring","Welcome","tutorial","setTutorial","ModalContext","paper","borderRadius","shadows","maxWidth","maxHeight","overflow","ModalProvider","Component","setComponent","customCloseHandler","setCustomCloseHandler","showModal","newComponent","newCustomCloseHandler","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","h1","flexShrink","drawerGrid","drawerPaper","settings","flexGrow","globalSettingsTitle","settingsContent","toolbar","mixins","titleBar","titleBarText","titleBarContainer","titleBarTitle","titleBarIcon","titleBarIconActive","globalSettingsFirstBox","extractCoreFromHiGlassSvg","svg","fifthLn","nthIndexOf","lastLn","lastIndexOf","core","AppSidebar","useShowModal","setXDomainStart","setXDomainEnd","showWelcome","setShowWelcome","showVariantsSettings","setShowVariantsSettings","higlassEnhancerRegions","higlassDnaAccess","enhancerGenesSvg","userChangedDomain","setUserChangedDomain","numericalXDomainStart","isString","chrToAbs","numericalXDomainEnd","xDomainStartChangeHandler","xDomainEndChangeHandler","curr","closeWelcome","openWelcome","closeVariantsSettings","openVariantsSettings","mergeSvgs","enhancerSvg","dnaAccessSvg","enhancerGeneSvg","enhancerSvgCore","enhancerWidth","enhancerHeight","dnaAccessSvgCore","dnaAccessWidth","dnaAccessHeight","firstSvgClosingBracket","lastSvgOpeningBracket","extractCoreFromStringifiedSvg","enhancerGeneSvgCore","enhancerGeneHeight","actualEnhancerHeight","track","actualDnaAccessHeight","mergedSvg","Drawer","anchor","ButtonBase","Divider","Box","m","xDomain","getViewConfig","Number","isNaN","zoomTo","CheckboxList","exportAsSvg","XMLSerializer","serializeToString","filename","stringOrBlob","blob","Blob","navigator","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","console","warn","inputRoot","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","focused","input","textFieldRoot","fetchJsonFromUrl","query","fetch","response","json","result","GeneIcon","SvgIcon","viewBox","d","GeneOption","geneName","VariantOption","SearchField","setOpen","setOptions","inputValue","searchQuery","setSearchQuery","debouncedSearchQuery","loading","autocompleteClasses","customSearch","searchUrl","active","whenResults","Array","isArray","Promise","all","flat","multiple","autocompleteOptions","Autocomplete","larger","onInputChange","newInputValue","onOpen","getOptionSelected","_value","getOptionLabel","renderInput","params","InputProps","endAdornment","renderOption","renderTags","getTagProps","Chip","appBar","common","black","white","toolbarExtra","paddingLeft","locationSearch","match","score","AppTopbar","focusGene","setFocusGene","focusVariant","setFocusGeneOption","setFocusVariantOption","prevFocusGeneOption","prevFocusVariantOption","focusGeneVariantOptions","_focusGeneVariant","clearFocusGene","clearFocusVariant","AppBar","Toolbar","newValues","newFocusElements","gene","gray","pink","EnhancerRegionsInfo","showInfo","iconRadioLegend","variantYScale","setVariantYScale","hideUnfocused","setHideUnfocused","colorEncoding","setColorEncoding","hideUnfocusedChangeHandler","changeVariantYScale","changeColorEncoding","Switch","FormLabel","RadioGroup","aria-label","iconRadio","IconButton","iconRadioActive","bar","iconActive","popeover","paddingTop","info","borderBottom","TitleBar","Info","Help","Settings","useShowInfo","popoverDirection","setShowInfo","helpAnchorEl","setHelpAnchorEl","settingsAnchorEl","setSettingsAnchorEl","infoToggleHandler","show","helpOpenHandler","currentTarget","helpCloseHandler","settingsOpenHandler","settingsCloseHandler","helpId","settingsId","anchorOriginVertical","transformOriginVertical","helpOpen","settingsOpen","iconInfoClass","iconHelpClass","iconSettingsClass","wrap","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","getFocusGeneRegion","viewConfig","getFocusVariantRegion","updateViewConfigVariantTracks","variantTrackConfigs","variantTrack","data","updateViewConfigFocusVariant","trackIdxs","trackIdx","childTrack","setFocusRegion","updateViewConfigVariantYScale","yScale","updateViewConfigXDomain","newXDomainStart","newXDomainEnd","force","_force","isFunction","focusGeneRegion","focusVariantRegion","fullWidthHeight","higlassContainer","minHeight","panZoomTip","textAlign","opacity","animation","userSelect","panZoomTipNormal","panZoomTipNormalHover","panZoomTipActive","panZoomTipActiveHover","EnhancerRegion","useSetRecoilState","setHiglass","focusVariantPosition","xDomainStartAbs","xDomainEndAbs","focusGeneStart","focusGeneEnd","higlassMouseOver","setHiglassMouseOver","higlassFocus","setHiglassFocus","higlassContainerRef","higlassEnhancerClickSelection","higlassMouseDown","higlassNumMouseOver","higlassNumFocus","higlassNumFocusMouseOut","shouldSkipUpdatingXDomain","pipe","focusStyle","updateViewConfigFocusStyle","coloring","opacityEncoding","viewConfigHeight","higlassBlockClasses","higlassClickHandler","payload","log","higlassLocationChangeHandlerDb","debounce","absPos","windowMouseDownClearHandler","e","isParentOf","addEventListener","higlassMouseDownHandler","higlassInitHandler","higlassInstance","api","on","getComponent","element","EnhancerRegionsHelp","EnhancerRegionsSettings","onMouseEnter","onMouseLeave","onMouseDown","onFocus","onBlur","tabIndex","sizeMode","globalMousePosition","placeholder","fontStyle","justify","EnhancerGenesSettings","cellEncoding","setCellEncoding","setPadding","changeCellEncoding","changePadding","TooltipContext","pointerEvents","TooltipProvider","localState","setLocalState","showTooltip","plot","plotSvg","useTooltipStyles","uuid","fetchTile","tileId","samples","j","dodge","radius","radius2","circles","sort","head","tail","intersects","next","Infinity","EnhancerGenesPlot","useShowTooltip","geneCellEncoding","relPosition","strPosition","genePadding","plotEl","setPlotEl","tile","setTile","isLoadingTile","setIsLoadingTile","setTilesetInfo","setWidth","prevWidth","prevGeneCellEncoding","getTileWidth","tileXPos","floor","_tile","entry","filterByPosition","plotElRef","node","isInit","maxScore","minAbsDistance","maxAbsDistance","genes","categoryAggregation","Object","entries","numEnhancers","distComparator","absDistance","genesUpstreamByDist","TinyQueue","genesDownstreamByDist","relGenePos","distance","isDownstream","samplesByCategory","sampleCategory","genesDownstreamByDistArr","pop","genesUpstreamByDistArr","prevGene","relDistance","useLayoutEffect","measure","requestAnimationFrame","currWidth","getBoundingClientRect","removeEventListener","tooltipClasses","select","paddingBottom","circleRadius","circlePadding","geneLabelPadding","beeswarmPadding","distanceBarWidth","distPaddingRange","attr","maxCatgorySize","cat","categorySizeScale","scaleLog","clamp","percentScale","scaleLinear","circleYScalePre","circleYScalePost","circleYScale","geneContainerWidth","maxGenes","genesUpstream","reverse","genesDownstream","minMax","minRelDistance","maxRelDistance","paddingScale","genesUpstreamPadding","round","genesUpstreamScale","genesDownstreamPadding","genesDownstreamScale","genesUpstreamLeftPad","minVisibleAbsDist","minDist","maxVisibleAbsDist","maxDist","distanceHeightScale","plotBeeswarm","selection","isRightAligned","selectAll","getArrayNumCols","maxSize","plotArray","numCols","instanceCache","tooltipTitleGetter","cellSize","indexToX","indexToY","bBox","arrayTooltipTitleGetter","geneArrayInstances","upstream","downstream","geneArrayInstanceMouseEnterHandler","dHovering","geneArrayInstanceMouseLeaveHandler","plotBox","valueScale","valueGetter","cellWidth","fillColor","textColor","showText","showZero","showTooltipOnMouseEnter","bg","boxTooltipTitleGetter","enhancerG","enhancerGCellG","genesUpstreamG","geneLabelX","geneLabelY","genesUpstreamGCellG","remove","genesDownstreamG","genesDownstreamGCellG","distRange","distStep","tickValues","call","axisRight","tickSize","tickFormat","s","this","parentNode","nextSibling","g","plotEnhancerGeneConnections","EnhancerGenes","EnhancerGenesInfo","EnhancerGenesHelp","DnaAccessibilityInfo","dnaAccessibilityRegionSize","DnaAccessibilityHelp","DnaAccessibilitySettings","dnaAccessLabelStyle","setDnaAccessLabelStyle","changeDnaAccessLabelStyle","getDnaAccessXDomain","enhancerViewRange","enhancerViewCenter","midPos","DnaAccessibility","setHiglassDnaAccess","sampleSelection","labelStyle","xDomainStartAbsDb","xDomainEndAbsDb","labels","updateViewConfigDnaAccessXDomain","rowId","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","enhancerWrapper","enhancer","overflowY","enhancerRegions","enhancerGenes","dnaAccessibility","AppMain","focusGeneChangeHandler","focusVariantChangeHandler","r","CssBaseline","withEither","ifEitherFn","EitherComponent","createMuiTheme","primary","main","secondary","App","setChromInfo","ChromosomeInfo","_chromInfo","catch","Main","AppError","ThemeProvider","hostname","createAnnotationOverlayMetaTrack","HGC","pubSub","services","AnnotationOverlayMetaTrack","definition","getTrackObject","animate","onNewTilesLoaded","annotationTrackIds","Set","add","annotationDrawnHandlerBound","annotationDrawnHandler","bind","tilesDrawnEndHandlerBound","tilesDrawnEndHandler","drawnAnnotations","Map","tracksDrawingTiles","pubSubs","xStartAbs","xEndAbs","set","has","updateOverlays","from","draw","clear","availableOptions","defaultOptions","FLOAT_BYTES","BYTES_PER_ELEMENT","VS","FS","COLORMAP_GRAYS","getMax","fetchedTiles","maxValue","tileData","maxNonZero","getNumRows","coarseShape","getRowMaxs","maxVector","maxValueByRow","scaleGraphics","xScale","drawnAtScale","tileK","posOffset","getNumPointsPerRow","numRows","positions","createRidgePlotTrack","libraries","format","d3Format","d3Scale","tileProxy","RidgePlotTrack","updateOptions","pLoading","Graphics","pMasked","addChild","loadIndicator","Text","labelSize","coarsifyTileValues","bins_per_dimension","zoomLevel","tilePos","binsPerTileIn","binsPerTile","resolutions","chosenResolution","tileHeight","tileX","tileY","xTilePos","yTilePos","minX","minY","reverseYAxis","selectRowsAggregationMode","selectRowsAggregationFn","maxNan","minNan","sumNan","meanNan","markAreaColor","utils","colorToHex","markColorRgbNorm","colorToRgba","markColorTex","markColorTexRes","markNumColors","oldMarkResolution","TILE_SIZE","oldRowHeight","oldRowPadding","oldRowNormalization","oldRowSelections","oldShowRowLabels","updateTiles","updateRowLabels","drawLabel","updateScales","rowLabelAlign","pAxis","removeChildAt","rowLabels","rowLabel","row_infos","rowIndex","removeRowLabels","indicator","Sprite","WHITE","tint","dimensions","yStart","xLabelOffset","getRowHeight","rowStepHeight","rowStepYCenter","newOptions","updateExistingGraphics","getTilePosAndDimensions","shape","binSizePx","binSizeBp","binSizeBpHalf","binXPos","valuesByRow","meanValue","dense","subarray","rowIdx","actualTrackHeight","getTrackHeight","globalMax","colorIndexScale","rowMaxs","rowValueScales","rowColorIndexScales","valueScaleByRow","colorIndexScaleByRow","rowScale","tiles","maxRows","positionsByRow","colorIndicesByRow","offsetSignsByRow","_xScale","size2d","size1d","unshift","numPointsPerRow","verticesPerLine","verticesPerPoint","indices","Uint32Array","k","p1a","p1b","p1c","p1d","p2a","p2b","p2c","p2d","indexOffset","visibleTrackHeight","tilesToData","colorIndices","offsetSigns","toLineIndices","uniforms","UniformGroup","uLineColor","uNaNColor","uAreaColorTex","uAreaColorTexRes","uWidth","uMiter","shader","Shader","geometry","Geometry","numVerticesPoint","addAttribute","TYPES","FLOAT","addIndex","mesh","Mesh","newGraphics","pMain","lineGraphics","updateLoadIndicator","hasFetchedTiles","renderLines","fetching","newPosition","newXScale","newYScale","refreshTiles","trackX","trackY","calculateZoomLevel","calculateTileWidth","invert","posInTileX","rowSelection","tileToLocalId","fetchedTile","selectRowsAggregationMethod","rowI","rowInfo","getVisibleData","svgns","base","setAttribute","output","stride","createLine","line","posPerRow","posToPoints","arr","numColors","defs","createElementNS","linearGradient","stop","insertBefore","firstChild","l","y0","firstComma","firstX","firstY","lastComma","lastX","lastY","HorizontalLine1DPixiTrack","datatype","orientation","pointToPosition","pt","cX","widthHalf","pointToIndex","pointToOpacity","pointToHighlight","highlight","getItemDistance","getMaxDistance","maxDistItem","scaleScalableGraphics","getRegionId","createStratifiedBedTrack","MAX_CLICK_DELAY","configs","opacityLogScale","StratifiedBedTrack","pLegend","legendMin","legendMax","interactive","interactiveChildren","alpha","mousedownTime","performance","now","mousedown","mouseup","clickHandler","intervals","regionId","isLeftToRight","intervalTree","createIntervalTree","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","categoryToY","yToCategory","groupSizes","groupSize","groupLabelsPixiText","markColorHighlightRgbNorm","markColorDehighlightRgbNorm","getImportance","opacityScale","opacityLinearScale","getRegion","getGene","minImportance","updateStratificationOption","heightScale","categoryHeightScale","valueScaleInverted","isHighlighting","__focus","__item","filterFn","addFn","filteredItems","reducerVar","accumulator","itemToIndicatorCategory","i1","isItemInFocus","dataToPoint","itemToIndicatorReducer","points","getPoints","Uint16Array","opacities","highlights","uColor","uColorHighlight","uHighlighting","indicatorPointGraphics","yEnd","xTickOffset","xTickEnd","numAxisLabels","lineStyle","labelPixiText","beginFill","drawRect","endFill","legendMinText","legendMaxText","minValue","minTextWidth","getBounds","maxTextWidth","offset","rectHeight","drawRoundedRect","renderIndicatorCategoryAxis","renderIndicatorLegend","renderIndicatorPoints","updateIndicators","relX","relY","foundItem","xAbsLo","xAbsHi","queryInterval","interval","getElementAtPosition","colorHex","toString","bgHex","offsetX","offsetY","global","gAxis","createRect","f","o","strokeDasharray","x1","y1","x2","y2","createDashedLine","pixiText","t","_style","_fill","_align","_font","textContent","createText","colorHighlight","renderIndicatorCategoryAxisAsSvg","thumbnail","DOMParser","parseFromString","documentElement","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","getIs2d","get1dItemWidth","get2dItemWidth","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","maxWidthItem","createScalableArcs1dTrack","ScalableArcs1dTrack","is2d","getItemWidth","getStart","getEnd","numBins","pointSize","widthHistogramLeft","widthHistogramRight","bin","histPos","widthHistogramMax","updateTileWidthHistogram","markColorFocusRgbNorm","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","mapFn","pointToFocused","vertexShader","fragmentShader","drawTriangles","uPointSize","uColorFocused","State","DRAW_MODES","TRIANGLES","POINTS","drawAxis","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","storePolyStr","startsWith","drawCircle","drawEllipse","trackWidth","trackHeight","cx","cy","polyStr","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","polys","visibleAndFetchedTiles","drawTile","createSnpTrack","d3Array","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","rectGraphics","finalDotYPos","rows","initialize","circleDraws","circleFocusDraws","td","geneInfo","yMiddle","drawnRects","circleDraw","drawPoly","buttonMode","hoveringSnp","relTilePos","dist","itemY","MAX_RADIUS","otherStr","substr","plusStrandRows","renderRows","focusedCircles","c","axis","axisPositionVertical","gDrawnAxis","exportAxisLeftSVG","exportAxisRightSVG","BedLikeTrack","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","histogram1d","histogram2d","histogram2dNumPred","Uint8Array","categoryBinHash","maxBinId","binStart","binEnd","histIdx","binHash","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","rowCumSum","rowNumPred","totalPred","numPred","relYPos","findIndex","createTssTrack","TssTrack","createPubSub","xStartScreen","xEndScreen","LocalCsvDataFetcher","createRandomId","random","LocalBedDataFetcherClass","dataConfig","callback","tilesetInfoLoading","tilesetInfoData","resolve","reject","timeoutId","loadHandler","tileIds","register","dataFetcher","createLocalBedDataFetcher","pluginType","isMetaTrack","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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A,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACEvN,MAAO,UACPuN,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACEvN,MAAO,UACPuN,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACEvN,MAAO,6BACPuN,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACEvN,MAAO,cACPuN,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACEvN,MAAO,aACPuN,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCACA,0BACA,qDACA,gBACA,0BACA,wBACA,aACA,0BACA,qDACA,2BACA,uCACA,QACA,4CACA,gBACA,uBACA,mCACA,kCACA,gDACA,iBACA,kCAGJ,CACEvN,MAAO,QACPuN,WAAY,CACV,wBACA,kBACA,oBACA,yBACA,2BACA,yBACA,gBACA,8BACA,gCACA,yBACA,mBACA,eACA,cACA,yBACA,6BACA,oBACA,wDACA,6CACA,QACA,2DACA,uBACA,iEACA,sEAMKC,GAAyBN,GAAuBI,OAAOvL,KAClE,SAACjE,GAAD,MAAY,CACVF,KAAME,EAAMkC,MACZkC,QAASpE,EAAMyP,eAINE,GAAkBD,GAAuBnE,QACpD,SAACqE,EAAe5P,GAId,OAHAA,EAAMoE,QAAQoD,SAAQ,SAACnD,GACrBuL,EAAcvL,GAAUrE,EAAMF,QAEzB8P,IAET,IAGWC,GAAUH,GAAuBI,SAAQ,SAAC9P,GAAD,OAAWA,EAAMoE,WAgB1D2L,GAA4B,CACvCxJ,KAAM,mBACN9G,OAAQ,GACR2E,QAAS,CACP4L,uBAAwB,QACxBC,UAAW,QACXC,eAAgB,UAChBC,SAAU,EACVC,YAAa,IACbC,iBAAkB,IAC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","file":"static/js/main.ec7da155.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#bbb',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst AppInitializing = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"full-wh\">\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import React, { createContext } from 'react';\n\nconst ChromInfoContext = createContext();\n\nexport default function ChromInfoProvider({ children, chromInfo }) {\n  return (\n    <ChromInfoContext.Provider value={chromInfo}>\n      {children}\n    </ChromInfoContext.Provider>\n  );\n}\n\nfunction useChromInfo() {\n  const context = React.useContext(ChromInfoContext);\n  if (context === undefined) {\n    throw new Error('useChromInfo must be used within a ChromInfoContext');\n  }\n  return context;\n}\n\nexport { useChromInfo };\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport IndeterminateCheckBoxIcon from '@material-ui/icons/IndeterminateCheckBox';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport useDebounce from './use-debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n  filterBar: {\n    position: 'sticky',\n    zIndex: 1,\n    top: '8px',\n    '&:before': {\n      content: '\"\"',\n      position: 'absolute',\n      zIndex: 0,\n      top: '-9px',\n      right: '-8px',\n      left: '-8px',\n      bottom: 0,\n      background: 'white',\n    },\n  },\n  checkbox: {\n    marginTop: -6,\n    marginBottom: -6,\n  },\n  checkboxLabel: {\n    fontSize: '0.8rem',\n    marginLeft: -6,\n  },\n  nestedCheckbox: {\n    marginLeft: 4,\n  },\n  visible: {\n    transition: '.3s ease transform, .3s ease height',\n    transform: 'scale(1, 1)',\n    height: '1.625rem',\n  },\n  invisible: {\n    transition: '.3s ease transform, .3s ease height',\n    transform: 'scale(1, 0)',\n    height: '0rem',\n  },\n}));\n\nconst Option = React.memo(function Option({\n  filterState,\n  name,\n  stateWithName,\n  group,\n  stateWithGroup,\n  colorCheckbox,\n  colorText,\n}) {\n  const filter = useRecoilValue(filterState);\n  const [state, setState] = useRecoilState(stateWithName(name));\n  const [groupState, setGroupState] = useRecoilState(stateWithGroup(group));\n  const nameLowerCase = useMemo(() => name.toLowerCase(), [name]);\n\n  const changeHandler = useCallback(\n    (event) => {\n      setState((currState) => ({\n        ...currState,\n        checked: event.target.checked,\n      }));\n      setGroupState((currGroupState) => {\n        const newGroupState = {\n          ...currGroupState,\n          n: currGroupState.n + (event.target.checked ? 1 : -1),\n        };\n        switch (newGroupState.n) {\n          case currGroupState.N:\n            newGroupState.checked = true;\n            break;\n          case 0:\n            newGroupState.checked = false;\n            break;\n          default:\n            newGroupState.checked = undefined;\n            break;\n        }\n        return newGroupState;\n      });\n    },\n    [setState, setGroupState]\n  );\n\n  useEffect(() => {\n    if (groupState.checked === true) {\n      setState((currState) => ({\n        ...currState,\n        checked: true,\n      }));\n    } else if (groupState.checked === false) {\n      setState((currState) => ({\n        ...currState,\n        checked: false,\n      }));\n    }\n  }, [groupState, setState]);\n\n  useEffect(() => {\n    setState((currState) => ({\n      ...currState,\n      visible: !filter.length || nameLowerCase.includes(filter),\n    }));\n  }, [filter, nameLowerCase, setState]);\n\n  const classes = useStyles();\n\n  return (\n    <div className={state.visible ? classes.visible : classes.invisible}>\n      <FormControlLabel\n        key={name}\n        className={`${classes.checkbox} ${classes.nestedCheckbox}`}\n        control={\n          <Checkbox\n            style={{\n              color: colorCheckbox,\n            }}\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n            checked={state.checked}\n            onChange={changeHandler}\n            name={name}\n          />\n        }\n        label={\n          <Typography\n            className={classes.checkboxLabel}\n            noWrap\n            style={{\n              color: colorText,\n            }}\n          >\n            {name}\n          </Typography>\n        }\n      />\n    </div>\n  );\n});\n\nconst OptionGroup = React.memo(function OptionGroup({\n  group,\n  stateWithGroup,\n  colorCheckbox,\n  colorText,\n}) {\n  const [state, setState] = useRecoilState(stateWithGroup(group));\n\n  const changeHandler = useCallback(\n    (event) => {\n      setState((currState) => ({\n        ...currState,\n        checked: event.target.checked,\n        n: event.target.checked ? currState.N : 0,\n      }));\n    },\n    [setState]\n  );\n\n  const classes = useStyles();\n\n  return (\n    <FormControlLabel\n      className={classes.checkbox}\n      control={\n        <Checkbox\n          style={{ color: colorCheckbox }}\n          icon={\n            state.checked === false ? (\n              <CheckBoxOutlineBlankIcon fontSize=\"small\" />\n            ) : (\n              <IndeterminateCheckBoxIcon fontSize=\"small\" />\n            )\n          }\n          checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n          checked={state.checked === true}\n          onChange={changeHandler}\n          name={group.name}\n        />\n      }\n      label={\n        <Typography\n          className={classes.checkboxLabel}\n          noWrap\n          style={{ color: colorText }}\n        >\n          <strong>{group.name}</strong>{' '}\n          <span>\n            ({state.n}/{state.N})\n          </span>\n        </Typography>\n      }\n    />\n  );\n});\n\nconst NestedCheckboxList = React.memo(function NestedCheckboxList({\n  filterState,\n  optionWithName,\n  optionGroupWithGroup,\n  filterLabel = 'Filter',\n  groupedOptions = [],\n  optionToGroup = {},\n  groupColors = [],\n  groupColorsDark = [],\n}) {\n  const [globalFilter, setGlobalFilter] = useRecoilState(filterState);\n  const [filter, setFilter] = useState(globalFilter);\n  const filterDb = useDebounce(filter, 350);\n\n  const filterChangeHandler = useCallback(\n    (event) => {\n      setFilter(event.target.value.toLowerCase());\n    },\n    [setFilter]\n  );\n\n  useEffect(() => {\n    setGlobalFilter(filterDb);\n  }, [filterDb, setGlobalFilter]);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.filterBarBg} />\n      <FormControl\n        className={classes.filterBar}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n      >\n        <InputLabel htmlFor=\"filter\">\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <FilterListIcon fontSize=\"small\" />\n            <span style={{ marginLeft: 3 }}>{filterLabel}</span>\n          </Grid>\n        </InputLabel>\n        <OutlinedInput\n          id=\"filter\"\n          label={\n            <Grid container direction=\"row\" alignItems=\"center\">\n              <FilterListIcon fontSize=\"small\" />\n              <span style={{ marginLeft: 3 }}>{filterLabel}</span>\n            </Grid>\n          }\n          onChange={filterChangeHandler}\n          value={filter}\n        />\n      </FormControl>\n      <FormGroup>\n        {groupedOptions.map((group, i) => (\n          <React.Fragment key={group.name}>\n            <OptionGroup\n              key={group.name}\n              group={group}\n              stateWithGroup={optionGroupWithGroup}\n              colorCheckbox={groupColors[i % groupColors.length] || 'inherit'}\n              colorText={\n                groupColorsDark[i % groupColorsDark.length] || 'inherit'\n              }\n            />\n            {group.options.map((option) => (\n              <Option\n                filterState={filterState}\n                key={option}\n                name={option}\n                stateWithName={optionWithName}\n                group={group}\n                stateWithGroup={optionGroupWithGroup}\n                colorCheckbox={groupColors[i % groupColors.length] || 'inherit'}\n                colorText={\n                  groupColorsDark[i % groupColorsDark.length] || 'inherit'\n                }\n              />\n            ))}\n          </React.Fragment>\n        ))}\n      </FormGroup>\n    </div>\n  );\n});\n\nexport default NestedCheckboxList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: '100%',\n    padding: '0.1em',\n    alignItems: 'center',\n    fontSize: '1em',\n    lineHeight: '1em',\n    fontWeight: 'bold',\n  },\n  logoAbc: {\n    fontSize: '2.75em',\n    letterSpacing: '-0.075rem',\n    paddingRight: '0.125em',\n    fontWeight: 900,\n  },\n  logoEnhancer: {\n    alignItems: 'flex-start',\n  },\n}));\n\nconst Logo = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.logo} style={props.styles}>\n      <Grid item className={classes.logoAbc}>\n        ABC\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" className={classes.logoEnhancer}>\n          <Grid item>Enhancer-Gene</Grid>\n          <Grid item>Connections</Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nLogo.defaultProps = {\n  styles: {},\n};\n\nLogo.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Logo;\n","import React, { useCallback, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n\nconst FileInput = React.memo(\n  React.forwardRef(function FileInput(props, ref) {\n    const {\n      onChange: changeHandler,\n      onClear: clearHandler,\n      className = '',\n      label = 'Select',\n      accept = '*',\n      color = 'default',\n      Icon = InsertDriveFileIcon,\n    } = props;\n\n    // We will spread any other props onto the root component. However, some\n    // props can mess things up so we will remove them in the following lines\n    const otherProps = { ...props };\n    delete otherProps.onChange;\n    delete otherProps.onClear;\n    delete otherProps.className;\n    delete otherProps.file;\n    delete otherProps.label;\n    delete otherProps.accept;\n    delete otherProps.color;\n    delete otherProps.Icon;\n\n    const [file, setFile] = useState(props.file || null);\n\n    const localChangeHandler = useCallback(\n      (event) => {\n        const fileList = event.target.files;\n        setFile(fileList[0]);\n        if (changeHandler) changeHandler(fileList[0], event);\n      },\n      [changeHandler]\n    );\n\n    const clearFile = useCallback(() => {\n      setFile(null);\n      if (clearHandler) clearHandler();\n    }, [clearHandler]);\n\n    return (\n      <ButtonGroup {...otherProps} className=\"r\" ref={ref}>\n        <Button\n          variant={file ? 'outlined' : 'contained'}\n          component=\"label\"\n          className={className}\n          color={color}\n          disableElevation\n          startIcon={<Icon />}\n        >\n          <input\n            accept={accept}\n            type=\"file\"\n            onChange={localChangeHandler}\n            hidden\n          />\n          {file ? file.name : label}\n        </Button>\n        <Button\n          variant=\"contained\"\n          disabled={!file}\n          onClick={clearFile}\n          disableElevation\n        >\n          <ClearIcon fontSize=\"inherit\" />\n        </Button>\n      </ButtonGroup>\n    );\n  })\n);\n\nexport default FileInput;\n","import { identity } from '@flekschas/utils';\nimport queryString from 'query-string';\n\nexport const contains = (a, b) => a[0] <= b[0] && a[1] >= b[1];\n\nexport const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nexport const dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nexport const download = (filename, stringOrBlob) => {\n  const blob =\n    typeof stringOrBlob === 'string'\n      ? new Blob([stringOrBlob], { type: 'application/octet-stream' })\n      : stringOrBlob;\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    const elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n    URL.revokeObjectURL(elem.href);\n  }\n};\n\nexport const getQueryStringValue = (key, decoder = identity) =>\n  decoder(queryString.parse(window.location.search)[key]);\n\nexport const setQueryStringValue = (key, value, encoder = identity) => {\n  const values = queryString.parse(window.location.search);\n  const newQsValue = queryString.stringify(\n    {\n      ...values,\n      [key]: encoder(value),\n    },\n    { strict: false }\n  );\n  const url = `${window.location.origin}${window.location.pathname}?${newQsValue}`;\n  window.history.pushState({ path: url }, '', url);\n};\n\nexport const toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n\nexport const toFixed = (number, decimals, forced) => {\n  let string = number.toFixed(decimals);\n  if (!forced) {\n    while (string[string.length - 1] === '0') {\n      string = string.substring(0, string.length - 1);\n    }\n    if (string[string.length - 1] === '.') {\n      string = string.substring(0, string.length - 1);\n    }\n  }\n  return string;\n};\n\nexport const scaleBand = () => {\n  let domain = [];\n  let fixedBandwidth = null;\n  let bandwidth = 1;\n  let range = [0, 1];\n  let rangeSize = range[1] - range[0];\n  let paddingInner = [];\n  // If `true` the padding will begin before the first bar!\n  let paddingInnerZeroBased = false;\n  let totalWidth = 0;\n\n  const sum = (a, b) => a + b;\n  const getBandwidth = () => fixedBandwidth || bandwidth;\n\n  const update = () => {\n    rangeSize = range[1] - range[0];\n\n    const totalPaddingInner = paddingInner.reduce(sum, 0);\n    bandwidth = (rangeSize - totalPaddingInner) / domain.length;\n    totalWidth = totalPaddingInner + domain.length * getBandwidth();\n  };\n\n  const scale = (v) => {\n    const idx = domain.indexOf(v);\n\n    if (idx === -1) return undefined;\n\n    return (\n      idx * getBandwidth() +\n      paddingInner.slice(0, idx + paddingInnerZeroBased).reduce(sum, 0)\n    );\n  };\n\n  scale.domain = (newDomain) => {\n    if (newDomain) {\n      domain = [...newDomain];\n      update();\n      return scale;\n    }\n\n    return domain;\n  };\n\n  scale.range = (newRange) => {\n    if (newRange) {\n      range = [...newRange];\n      update();\n      return scale;\n    }\n\n    return range;\n  };\n\n  scale.bandwidth = () => getBandwidth();\n\n  scale.fixedBandwidth = (newFixedBandwidth) => {\n    if (newFixedBandwidth) {\n      fixedBandwidth = newFixedBandwidth;\n      update();\n      return scale;\n    }\n\n    return newFixedBandwidth;\n  };\n\n  scale.totalWidth = () => totalWidth;\n\n  scale.rangeSize = () => rangeSize;\n\n  scale.paddingInner = (newPaddingInner) => {\n    if (newPaddingInner) {\n      paddingInner = newPaddingInner;\n      update();\n      return scale;\n    }\n\n    return paddingInner;\n  };\n\n  scale.paddingInnerZeroBased = (newPaddingInnerZeroBased) => {\n    if (newPaddingInnerZeroBased) {\n      paddingInnerZeroBased = newPaddingInnerZeroBased;\n      update();\n      return scale;\n    }\n\n    return paddingInnerZeroBased;\n  };\n\n  return scale;\n};\n\nexport const stringifySvg = (svg) =>\n  new window.XMLSerializer().serializeToString(svg);\n\nexport const booleanQueryStringDecoder = (v) =>\n  v === undefined ? undefined : v === 'true';\n","import { globalPubSub } from 'pub-sub-es';\nimport IntervalTree from '@flatten-js/interval-tree';\n\nimport { toAbsPosition } from './utils';\n\nasync function loadFile(\n  file,\n  chromInfo,\n  { header = true, columnImportance = 7 } = {}\n) {\n  const tree = new IntervalTree();\n  const text = await file.text();\n  const lines = text.split(/\\r\\n|\\n/);\n  for (let i = +header; i < lines.length; i++) {\n    const fields = lines[i].split('\\t');\n    const chromOffset = toAbsPosition(`${fields[0]}:0`, chromInfo);\n    const startAbs = toAbsPosition(`${fields[0]}:${fields[1]}`, chromInfo);\n    const endAbs = toAbsPosition(`${fields[0]}:${fields[2]}`, chromInfo);\n    tree.insert([startAbs, endAbs], {\n      chrOffset: chromOffset,\n      xStart: startAbs,\n      xEnd: endAbs,\n      importance: +fields[columnImportance],\n      uid: `${file.name}-${i}`,\n      name: fields[3],\n      fields,\n    });\n  }\n  return tree;\n}\n\nconst createLocalBedDataServer = (\n  file,\n  id,\n  chromInfo,\n  tilesetInfo,\n  options\n) => {\n  const whenIndex = loadFile(file, chromInfo, options);\n\n  const requestTileHandler = ({ fileId, z, x, requestId }) => {\n    if (fileId !== id) return;\n    whenIndex.then((index) => {\n      const tileWidth = tilesetInfo.max_width / 2 ** z;\n      const start = tileWidth * x;\n      const end = start + tileWidth;\n      const results = index.search([start, end]);\n      globalPubSub.publish(`localBed:tile:${requestId}`, results);\n    });\n  };\n\n  const requestTilesetInfoHandler = ({ fileId, requestId }) => {\n    if (fileId !== id) return;\n    globalPubSub.publish(`localBed:tilesetInfo:${requestId}`, tilesetInfo);\n  };\n\n  const subscriptionTile = globalPubSub.subscribe(\n    'localBed:requestTile',\n    requestTileHandler\n  );\n\n  const subscriptionTilesetInfo = globalPubSub.subscribe(\n    'localBed:requestTilesetInfo',\n    requestTilesetInfoHandler\n  );\n\n  const destroy = () => {\n    globalPubSub.unsubscribe(subscriptionTile);\n    globalPubSub.unsubscribe(subscriptionTilesetInfo);\n  };\n\n  return {\n    destroy,\n  };\n};\n\nexport default createLocalBedDataServer;\n","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import { useState, useCallback } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport { getQueryStringValue, setQueryStringValue } from './utils';\n\nexport default function useQueryStringWithReactState(\n  key,\n  initialValue,\n  { encoder, decoder } = {}\n) {\n  const _initialValue =\n    getQueryStringValue(key, decoder) === undefined\n      ? initialValue\n      : getQueryStringValue(key, decoder);\n\n  const [value, setValue] = useState(_initialValue);\n\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n\nexport function useRecoilQueryString(key, atom, { encoder, decoder } = {}) {\n  const [value, setValue] = useRecoilState(atom);\n\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder, setValue]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n","export const DRAWER_WIDTH = 240;\n\nexport const EPS = 1e-6;\n\nexport const SVG_SKELETON = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"_WIDTH_px\" height=\"_HEIGHT_px\">\n    <g id=\"enhancer-plot\">\n    _ENHANCER_\n    </g>\n    <g id=\"enhancer-gene-plot\" transform=\"translate(0, _ENHANCER_GENE_Y_)\">\n    _ENHANCER_GENE_\n    </g>\n    <g id=\"dna-accessibility-plot\" transform=\"translate(_DNA_ACCESS_X_, 0)\">\n    _DNA_ACCESS_\n    </g>\n</svg>`;\n\nexport const DEFAULT_COLOR_MAP = [\n  // '#c17da5', // pink\n  '#c76526', // red\n  '#6fb2e4', // light blue\n  '#eee462', // yellow\n  '#469b76', // green\n  '#3170ad', // dark blue\n  '#dca237', // orange\n  '#000000', // black\n  '#999999', // gray\n];\n\nexport const DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a', // pink\n  '#a65420', // red\n  '#4a7798', // light blue\n  '#999026', // yellow\n  '#3a8162', // green\n  '#295d90', // dark blue\n  '#b7872e', // orange\n  '#000000', // black\n  '#666666', // gray\n];\n\nexport const DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0', // pink\n  '#f6e5db', // red\n  '#e7f2fb', // light blue\n  '#f2eda9', // yellow\n  '#e0eee8', // green\n  '#dde7f1', // dark blue\n  '#f5e4c4', // orange\n  '#d5d5d5', // black\n  '#ffffff', // gray\n];\n\nexport const GENE_SEARCH_URL =\n  'https://higlass.io/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA';\n\nexport const VARIANT_SEARCH_URL =\n  'https://resgen.io/api/v1/suggest/?d=VF5-RDXWTxidGMJU7FeaxA';\n\nexport const DEFAULT_STRATIFICATION = {\n  categoryField: 10,\n  axisShowGroupSeparator: true,\n  axisNoGroupColor: false,\n  groups: [\n    {\n      label: 'Mononuclear Phagocytes',\n      categories: [\n        'THP1_LPS_4hr-Engreitz',\n        'THP_pmaLPS_ATAC_6h',\n        'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n        'THP1-Engreitz',\n        'THP_pmaLPS_ATAC_96h',\n        'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n        'THP_pmaLPS_ATAC_72h',\n        'THP-1_monocyte-VanBortle2017',\n        'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n        'CD14-positive_monocyte-ENCODE',\n        'THP_pmaLPS_ATAC_2h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n        'U937_LPS_4hr-Engreitz',\n        'CD14-positive_monocyte-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n        'THP_pmaLPS_ATAC_0h',\n        'HAP1',\n        'THP-1_macrophage-VanBortle2017',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n        'U937-Engreitz',\n        'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n        'THP_pmaLPS_ATAC_24h',\n        'THP_pmaLPS_ATAC_1h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n        'THP_pmaLPS_ATAC_120h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n        'THP_pmaLPS_ATAC_48h',\n        'CD14-positive_monocytes-Roadmap',\n        'THP_pmaLPS_ATAC_12h', // monoctye\n      ],\n    },\n    {\n      label: 'B Cells',\n      categories: [\n        'Karpas-422-ENCODE', // b-cell cell line\n        'BJAB-Engreitz',\n        'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n        'B_cell-ENCODE',\n        'OCI-LY7-ENCODE',\n        'GM12878-Roadmap',\n        'MM.1S-ENCODE',\n        'CD19-positive_B_cell-Roadmap',\n        'CD8-positive_alpha-beta_T_cell-ENCODE',\n      ],\n    },\n    {\n      label: 'T Cells',\n      categories: [\n        'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n        'Jurkat-Engreitz',\n        'CD3-positive_T_cell-Roadmap',\n        'CD4-positive_helper_T_cell-ENCODE',\n        'CD8-positive_alpha-beta_T_cell-Corces2016',\n        'thymus_fetal-Roadmap',\n        'CD4-positive_helper_T_cell-Corces2016',\n        'T-cell-ENCODE',\n      ],\n    },\n    {\n      label: 'Other haematopoietic cells',\n      categories: [\n        'spleen-ENCODE',\n        'K562-Roadmap',\n        'CD56-positive_natural_killer_cells-Roadmap',\n        'erythroblast-Corces2016',\n        'CD34-positive_mobilized-Roadmap',\n        'megakaryocyte-erythroid_progenitor-Corces2016',\n        'natural_killer_cell-Corces2016',\n        'IMR90-Roadmap',\n      ],\n    },\n    {\n      label: 'Fibroblasts',\n      categories: [\n        'foreskin_fibroblast-Roadmap',\n        'fibroblast_of_dermis-Roadmap',\n        'fibroblast_of_arm-ENCODE',\n        'astrocyte-ENCODE',\n        'fibroblast_of_lung-Roadmap',\n      ],\n    },\n    {\n      label: 'Epithelial',\n      categories: [\n        'small_intestine_fetal-Roadmap',\n        'epithelial_cell_of_prostate-ENCODE',\n        'HCT116-ENCODE',\n        'MCF-7-ENCODE',\n        'adrenal_gland_fetal-ENCODE',\n        'H7',\n        'keratinocyte-Roadmap',\n        'MCF10A-Ji2017',\n        'pancreas-Roadmap',\n        'mammary_epithelial_cell-Roadmap',\n        'stomach-Roadmap',\n        'LoVo',\n        'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n        'PC-9-ENCODE',\n        'H1-hESC-Roadmap',\n        'thyroid_gland-ENCODE',\n        'HT29',\n        'MDA-MB-231',\n        'iPS_DF_19.11_Cell_Line-Roadmap',\n        'large_intestine_fetal-Roadmap',\n        'Panc1-ENCODE',\n        'adrenal_gland-ENCODE',\n        'MCF10A_treated_with_TAM24hr-Ji2017',\n        'trophoblast_cell-ENCODE',\n        'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n        'uterus-ENCODE',\n        'body_of_pancreas-ENCODE',\n        'stomach_fetal-Roadmap',\n        'H9-Roadmap',\n        'transverse_colon-ENCODE',\n        'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n        'breast_epithelium-ENCODE',\n        'induced_pluripotent_stem_cell-ENCODE',\n        'LNCAP',\n        'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n        'ovary-Roadmap',\n        'sigmoid_colon-ENCODE',\n        'skeletal_muscle_myoblast-Roadmap',\n        'bipolar_neuron_from_iPSC-ENCODE',\n        'coronary_artery_smooth_muscle_cell-Miller2016',\n        'SK-N-SH-ENCODE',\n        'muscle_of_trunk_fetal-Roadmap',\n      ],\n    },\n    {\n      label: 'Other',\n      categories: [\n        'adipose_tissue-ENCODE',\n        'HeLa-S3-Roadmap',\n        'hepatocyte-ENCODE',\n        'heart_ventricle-ENCODE',\n        'spinal_cord_fetal-ENCODE',\n        'coronary_artery-ENCODE',\n        'HepG2-Roadmap',\n        'muscle_of_leg_fetal-Roadmap',\n        'gastrocnemius_medialis-ENCODE',\n        'brite_adipose-Loft2014',\n        'placenta-Roadmap',\n        'liver-ENCODE',\n        'A673-ENCODE',\n        'white_adipose-Loft2014',\n        'cardiac_muscle_cell-ENCODE',\n        'osteoblast-ENCODE',\n        'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n        'endothelial_cell_of_umbilical_vein-Roadmap',\n        'NCCIT',\n        'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n        'psoas_muscle-Roadmap',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n      ],\n    },\n  ],\n};\n\nexport const GROUPED_SAMPLE_OPTIONS = DEFAULT_STRATIFICATION.groups.map(\n  (group) => ({\n    name: group.label,\n    options: group.categories,\n  })\n);\n\nexport const SAMPLE_TO_GROUP = GROUPED_SAMPLE_OPTIONS.reduce(\n  (sampleToGroup, group) => {\n    group.options.forEach((option) => {\n      sampleToGroup[option] = group.name;\n    });\n    return sampleToGroup;\n  },\n  {}\n);\n\nexport const SAMPLES = GROUPED_SAMPLE_OPTIONS.flatMap((group) => group.options);\n\nexport const DEFAULT_X_DOMAIN_START = 1761366260;\nexport const DEFAULT_X_DOMAIN_END = 1761603836;\n\nexport const DEFAULT_VARIANT_TRACKS = [\n  {\n    server: 'https://resgen.io/api/v1',\n    tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n    columnPvalue: 7,\n    columnPosteriorProbability: 8,\n    markColor: 'black',\n    label: 'IBD Variants',\n  },\n];\n\nexport const DEFAULT_VARIANT_TRACK_DEF = {\n  type: 'point-annotation',\n  height: 32,\n  options: {\n    axisPositionHorizontal: 'right',\n    markColor: 'black',\n    markColorFocus: '#cc0078',\n    markSize: 2,\n    markOpacity: 0.33,\n    markOpacityFocus: 0.66,\n    valueColumn: 7,\n    name: 'Variants',\n    labelPosition: 'topLeft',\n    labelColor: 'black',\n    labelOpacity: 0.33,\n    showMousePosition: true,\n    showGlobalMousePosition: true,\n    mousePositionColor: 'black',\n    toolTip: {\n      name: {\n        field: 3,\n      },\n      value: {\n        field: 6,\n        numDecimals: 2,\n      },\n      other: [\n        {\n          label: 'Post. Prob.',\n          field: 7,\n          numDecimals: 2,\n        },\n      ],\n    },\n  },\n};\n\nexport const LOCAL_BED_TILESET_INFO_HG19 = {\n  zoom_step: 1,\n  max_length: 3137161265,\n  assembly: 'hg19',\n  chrom_names:\n    'chr1\\tchr2\\tchr3\\tchr4\\tchr5\\tchr6\\tchr7\\tchr8\\tchr9\\tchr10\\tchr11\\tchr12\\tchr13\\tchr14\\tchr15\\tchr16\\tchr17\\tchr18\\tchr19\\tchr20\\tchr21\\tchr22\\tchrX\\tchrY\\tchrM\\tchr6_ssto_hap7\\tchr6_mcf_hap5\\tchr6_cox_hap2\\tchr6_mann_hap4\\tchr6_apd_hap1\\tchr6_qbl_hap6\\tchr6_dbb_hap3\\tchr17_ctg5_hap1\\tchr4_ctg9_hap1\\tchr1_gl000192_random\\tchrUn_gl000225\\tchr4_gl000194_random\\tchr4_gl000193_random\\tchr9_gl000200_random\\tchrUn_gl000222\\tchrUn_gl000212\\tchr7_gl000195_random\\tchrUn_gl000223\\tchrUn_gl000224\\tchrUn_gl000219\\tchr17_gl000205_random\\tchrUn_gl000215\\tchrUn_gl000216\\tchrUn_gl000217\\tchr9_gl000199_random\\tchrUn_gl000211\\tchrUn_gl000213\\tchrUn_gl000220\\tchrUn_gl000218\\tchr19_gl000209_random\\tchrUn_gl000221\\tchrUn_gl000214\\tchrUn_gl000228\\tchrUn_gl000227\\tchr1_gl000191_random\\tchr19_gl000208_random\\tchr9_gl000198_random\\tchr17_gl000204_random\\tchrUn_gl000233\\tchrUn_gl000237\\tchrUn_gl000230\\tchrUn_gl000242\\tchrUn_gl000243\\tchrUn_gl000241\\tchrUn_gl000236\\tchrUn_gl000240\\tchr17_gl000206_random\\tchrUn_gl000232\\tchrUn_gl000234\\tchr11_gl000202_random\\tchrUn_gl000238\\tchrUn_gl000244\\tchrUn_gl000248\\tchr8_gl000196_random\\tchrUn_gl000249\\tchrUn_gl000246\\tchr17_gl000203_random\\tchr8_gl000197_random\\tchrUn_gl000245\\tchrUn_gl000247\\tchr9_gl000201_random\\tchrUn_gl000235\\tchrUn_gl000239\\tchr21_gl000210_random\\tchrUn_gl000231\\tchrUn_gl000229\\tchrUn_gl000226\\tchr18_gl000207_random',\n  chrom_sizes:\n    '249250621\\t243199373\\t198022430\\t191154276\\t180915260\\t171115067\\t159138663\\t146364022\\t141213431\\t135534747\\t135006516\\t133851895\\t115169878\\t107349540\\t102531392\\t90354753\\t81195210\\t78077248\\t59128983\\t63025520\\t48129895\\t51304566\\t155270560\\t59373566\\t16571\\t4928567\\t4833398\\t4795371\\t4683263\\t4622290\\t4611984\\t4610396\\t1680828\\t590426\\t547496\\t211173\\t191469\\t189789\\t187035\\t186861\\t186858\\t182896\\t180455\\t179693\\t179198\\t174588\\t172545\\t172294\\t172149\\t169874\\t166566\\t164239\\t161802\\t161147\\t159169\\t155397\\t137718\\t129120\\t128374\\t106433\\t92689\\t90085\\t81310\\t45941\\t45867\\t43691\\t43523\\t43341\\t42152\\t41934\\t41933\\t41001\\t40652\\t40531\\t40103\\t39939\\t39929\\t39786\\t38914\\t38502\\t38154\\t37498\\t37175\\t36651\\t36422\\t36148\\t34474\\t33824\\t27682\\t27386\\t19913\\t15008\\t4262',\n  tile_size: 1024.0,\n  max_zoom: 22,\n  max_width: 4294967296.0,\n  min_pos: [1],\n  max_pos: [3137161265],\n  header:\n    'chrom1\\tstart1\\tend1\\tchrom2\\tstart2\\tend2\\ttargetGene\\tscore\\tstrand1\\tstrand2\\tcellType',\n  version: 2,\n  coordSystem: '',\n};\n\nexport const DEFAULT_VIEW_CONFIG_ENHANCER = {\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'context',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'combined',\n            uid: 'chroms-viewport',\n            height: 12,\n            contents: [\n              {\n                type: 'horizontal-chromosome-labels',\n                options: {\n                  // tickPositions: 'ends',\n                  color: '#999999',\n                  stroke: 'white',\n                  fontSize: 10,\n                  fontIsLeftAligned: true,\n                  showMousePosition: false,\n                  mousePositionColor: '#000000',\n                },\n                tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n                height: 12,\n                server: 'https://resgen.io/api/v1',\n                uid: 'chroms',\n              },\n              {\n                uid: 'viewport-details-chroms',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 12,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'genes-tss-viewport',\n            height: 48,\n            contents: [\n              {\n                type: 'horizontal-gene-annotations',\n                uid: 'genes',\n                height: 48,\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 10,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 0.5,\n                  showMousePosition: true,\n                  showGlobalMousePosition: true,\n                  mousePositionColor: 'black',\n                },\n              },\n              {\n                type: 'tss',\n                uid: 'tss',\n                height: 48,\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'RefSeqCurated170308bedCollapsedGeneBoundsTSS500bp',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VMZDLKrtQDmJMSjg7Ds4yA',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                uid: 'viewport-details-genes',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 48,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'variants',\n            height: 32,\n            contents: [\n              {\n                type: 'point-annotation',\n                uid: 'ibd-snps',\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n                height: 32,\n                options: {\n                  axisPositionHorizontal: 'right',\n                  markColor: 'black',\n                  markColorFocus: '#cc0078',\n                  markSize: 2,\n                  markOpacity: 0.33,\n                  markOpacityFocus: 0.66,\n                  // axisPositionHorizontal: 'right',\n                  valueColumn: 7,\n                  focusRegion: [\n                    1680373143 + 81046453 - 25,\n                    1680373143 + 81046453 + 25,\n                  ],\n                  name: 'IBD Variants',\n                  labelPosition: 'topLeft',\n                  labelColor: '#757575',\n                  showMousePosition: true,\n                  showGlobalMousePosition: true,\n                  mousePositionColor: 'black',\n                  toolTip: {\n                    name: {\n                      field: 3,\n                    },\n                    value: {\n                      field: 6,\n                      numDecimals: 2,\n                    },\n                    other: [\n                      {\n                        label: 'Post. Prob.',\n                        field: 7,\n                        numDecimals: 2,\n                      },\n                    ],\n                  },\n                },\n              },\n            ],\n          },\n          {\n            type: 'stacked-bar',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 72,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: DEFAULT_STRATIFICATION,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n          {\n            type: 'stratified-bed',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 413,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              legendAlign: 'left',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorHighlight: '#bf0071',\n              markColorDehighlight: '#bbbbbb',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: DEFAULT_STRATIFICATION,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms-viewport',\n            'genes-tss-viewport',\n            'variants',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes-tss-viewport'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 0,\n            outlineWidth: 0,\n          },\n        },\n        {\n          uid: 'tss-overlays',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'variants',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [],\n            minWidth: 1,\n            fill: 'black',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: 'black',\n            outlineOpacity: 0.1,\n            outlineWidth: 1,\n            outlinePos: ['left'],\n          },\n        },\n      ],\n      metaTracks: [\n        {\n          uid: 'tss-overlays-meta',\n          type: 'annotation-overlay',\n          overlaysTrack: 'tss-overlays',\n          options: {\n            annotationTracks: ['tss'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n      initialYDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n    },\n  ],\n};\n\nexport const DEFAULT_DNA_ACCESSIBILITY_ROW_SELECTION = [\n  120,\n  36,\n  54,\n  20,\n  80,\n  35,\n  101,\n  49,\n  44,\n  23,\n  30,\n  66,\n  5,\n  26,\n  15,\n  105,\n  57,\n  56,\n  74,\n  84,\n  79,\n  93,\n  106,\n  107,\n  34,\n  28,\n  25,\n  55,\n  121,\n  94,\n  58,\n  69,\n  67,\n  63,\n  126,\n  71,\n  72,\n  47,\n  11,\n  46,\n  39,\n  113,\n  29,\n  60,\n  45,\n  76,\n  21,\n  103,\n  129,\n  13,\n  128,\n  90,\n  104,\n  32,\n  109,\n  27,\n  9,\n  130,\n  95,\n  86,\n  53,\n  73,\n  50,\n  48,\n  78,\n  14,\n  92,\n  124,\n  31,\n  114,\n  64,\n  88,\n  12,\n  10,\n  38,\n  68,\n  3,\n  111,\n  70,\n  22,\n  61,\n  98,\n  6,\n  123,\n  118,\n  43,\n  37,\n  65,\n  81,\n  62,\n  33,\n  1,\n  24,\n  122,\n  83,\n  75,\n  112,\n  40,\n  97,\n  16,\n  117,\n  87,\n  19,\n  125,\n  7,\n  102,\n  116,\n  77,\n  8,\n  17,\n  82,\n  115,\n  89,\n  119,\n  18,\n  4,\n  108,\n  59,\n  127,\n  91,\n  0,\n  100,\n  85,\n  110,\n  99,\n  2,\n  96,\n  51,\n  41,\n  52,\n  42,\n];\n\nexport const DEFAULT_DNA_ACCESSIBILITY_ROW_CATEGORIES = DEFAULT_STRATIFICATION.groups.reduce(\n  (row, group, index) => {\n    const category = {\n      label: group.label,\n      color: group.axisLabelColor,\n      background: group.axisLabelBackground,\n      index,\n    };\n    group.categories.forEach((sample) => {\n      row[sample] = category;\n    });\n    return row;\n  },\n  {}\n);\n\nexport const DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY = {\n  zoomFixed: false,\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'details',\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            uid: 'chroms',\n            type: 'horizontal-chromosome-labels',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n            height: 17,\n            options: {\n              // tickPositions: 'ends',\n              color: '#999999',\n              stroke: 'white',\n              fontSize: 10,\n              fontIsLeftAligned: true,\n              showMousePosition: false,\n              mousePositionColor: '#000000',\n            },\n          },\n          {\n            uid: 'genes',\n            type: 'horizontal-gene-annotations',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n            height: 48,\n            options: {\n              fontSize: 9,\n              plusStrandColor: 'black',\n              minusStrandColor: 'black',\n              geneAnnotationHeight: 10,\n              geneLabelPosition: 'outside',\n              geneStrandSpacing: 0.5,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n          {\n            type: 'combined',\n            uid: 'variants',\n            height: 32,\n            contents: [\n              {\n                type: 'point-annotation',\n                uid: 'ibd-snps',\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n                height: 32,\n                options: {\n                  axisPositionHorizontal: 'right',\n                  markColor: 'black',\n                  markColorFocus: '#cc0078',\n                  markSize: 2,\n                  markOpacity: 0.33,\n                  markOpacityFocus: 0.66,\n                  // axisPositionHorizontal: 'right',\n                  valueColumn: 7,\n                  focusRegion: [\n                    1680373143 + 81046453 - 25,\n                    1680373143 + 81046453 + 25,\n                  ],\n                  name: 'IBD Variants',\n                  labelPosition: 'topLeft',\n                  labelColor: '#757575',\n                  showMousePosition: true,\n                  showGlobalMousePosition: true,\n                  mousePositionColor: 'black',\n                  toolTip: {\n                    name: {\n                      field: 3,\n                    },\n                    value: {\n                      field: 6,\n                      numDecimals: 2,\n                    },\n                    other: [\n                      {\n                        label: 'Post. Prob.',\n                        field: 7,\n                        numDecimals: 2,\n                      },\n                    ],\n                  },\n                },\n              },\n            ],\n          },\n          {\n            uid: 'dna-accessibility',\n            type: 'ridge-plot',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'test',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'Uz1_tEABQf-uzktblvBKSQ',\n            // height: 403,\n            height: 131 * (24 - 6) + 6,\n            options: {\n              name: 'DNA Accessibility',\n              labelPosition: 'outerBottom',\n              labelShowResolution: false,\n              labelShowAssembly: false,\n              markArea: true,\n              markColor: '#444444',\n              markResolution: 256,\n              valueScaling: 'exponential',\n              colorRange: ['#ffffff', '#000000'],\n              rowHeight: 24,\n              rowPadding: -6,\n              rowNormalization: true,\n              rowSelections: DEFAULT_DNA_ACCESSIBILITY_ROW_SELECTION,\n              rowIdToCategory: {\n                fn: 'replace',\n                args: ['.accessibility', ''],\n              },\n              rowCategories: DEFAULT_DNA_ACCESSIBILITY_ROW_CATEGORIES,\n              showRowLabels: true,\n              rowLabelSize: 10,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: ['chroms', 'genes', 'variants', 'dna-accessibility'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n      initialYDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n    },\n  ],\n};\n","import { atom, selector } from 'recoil';\nimport { memoize } from 'lodash-es';\nimport { deepClone } from '@flekschas/utils';\n\nimport { useRecoilQueryString } from './use-query-string';\n\nimport {\n  booleanQueryStringDecoder,\n  getQueryStringValue,\n  toAbsPosition,\n} from './utils';\n\nimport {\n  DEFAULT_X_DOMAIN_START,\n  DEFAULT_X_DOMAIN_END,\n  DEFAULT_VARIANT_TRACKS,\n  SAMPLES,\n} from './constants';\n\nconst getDefault = (key, initialValue, decoder) =>\n  getQueryStringValue(key, decoder) === undefined\n    ? initialValue\n    : getQueryStringValue(key, decoder);\n\nconst chrPosUrlEncoder = (chrPos) =>\n  chrPos ? chrPos.replace(':', '.') : chrPos;\n\nconst chrPosUrlDecoder = (chrPos) =>\n  chrPos ? chrPos.replace('.', ':') : chrPos;\n\n// Atoms\nexport const sampleFilterState = atom({\n  key: 'sampleFilterState',\n  default: '',\n});\n\nexport const sampleSelectionState = selector({\n  key: 'sampleSelection',\n  get: ({ get }) => SAMPLES.map((name) => get(sampleWithName(name)).checked),\n});\n\nexport const sampleWithName = memoize((name) =>\n  atom({\n    key: `sample-${name}`,\n    default: {\n      checked: true,\n      visible: true,\n    },\n  })\n);\n\nexport const sampleGroupWithGroup = memoize(\n  (group) =>\n    atom({\n      key: `sampleGroup-${group.name}`,\n      default: {\n        checked: true,\n        visible: true,\n        n: group.options.length,\n        N: group.options.length,\n      },\n    }),\n  (group) => group.name\n);\n\nexport const variantTracksState = atom({\n  key: 'variantTracks',\n  default: deepClone(DEFAULT_VARIANT_TRACKS),\n});\n\nexport const showVariantsSettingsState = atom({\n  key: 'showVariantsSettings',\n  default: false,\n});\n\nexport const showWelcomeState = atom({\n  key: 'showWelcome',\n  default: getDefault('w', true, booleanQueryStringDecoder),\n});\n\nexport const dnaAccessLabelStyleState = atom({\n  key: 'dnaAccessLabelStyle',\n  default: getDefault('dal', 'indicator'),\n});\n\nexport const dnaAccessLabelShowInfoState = atom({\n  key: 'dnaAccessLabelShowInfos',\n  default: getDefault('dai', true, booleanQueryStringDecoder),\n});\n\nexport const focusGeneState = atom({\n  key: 'focusGene',\n  default: getDefault('g', ''),\n});\n\nexport const focusGeneOptionState = atom({\n  key: 'focusGeneOption',\n  default: null,\n});\n\nexport const focusVariantState = atom({\n  key: 'focusVariant',\n  default: getDefault('v', 'rs1250566'),\n});\n\nexport const focusVariantOptionState = atom({\n  key: 'focusVariantOption',\n  default: null,\n});\n\nexport const focusRegionOptionState = atom({\n  key: 'focusRegionOption',\n  default: null,\n});\n\nexport const variantYScaleState = atom({\n  key: 'variantYScale',\n  default: getDefault('vy', 'pValue'),\n});\n\nexport const enhancerRegionsHideUnfocusedState = atom({\n  key: 'enhancerRegionsHideUnfocused',\n  default: getDefault('erhu', false, booleanQueryStringDecoder),\n});\n\nexport const enhancerRegionsColorEncodingState = atom({\n  key: 'enhancerRegionsColorEncoding',\n  default: getDefault('erc', 'solid'),\n});\n\nexport const enhancerRegionsShowInfoState = atom({\n  key: 'enhancerRegionsShowInfos',\n  default: getDefault('eri', true, booleanQueryStringDecoder),\n});\n\nexport const enhancerGenesShowInfoState = atom({\n  key: 'enhancerGenesShowInfos',\n  default: getDefault('egi', true, booleanQueryStringDecoder),\n});\n\nexport const enhancerGenesPaddingState = atom({\n  key: 'enhancerGenesPadding',\n  default: getDefault('egp', false, booleanQueryStringDecoder),\n});\n\nexport const enhancerGenesCellEncodingState = atom({\n  key: 'enhancerGenesCellEncoding',\n  default: getDefault('egce', 'number'),\n});\n\nexport const enhancerGenesSvgState = atom({\n  key: 'enhancerGenesSvg',\n  default: null,\n});\nexport const higlassEnhancerRegionsState = atom({\n  key: 'higlassEnhancerRegions',\n  default: null,\n});\n\nexport const higlassDnaAccessState = atom({\n  key: 'higlassDnaAccess',\n  default: null,\n});\n\n// Dynamic state\nexport const xDomainStartWithAssembly = memoize(\n  (chromInfo) =>\n    atom({\n      key: `xDomainStart-${chromInfo.totalLength}`,\n      default: getDefault(\n        'xs',\n        chromInfo.absToChr(DEFAULT_X_DOMAIN_START).slice(0, 2).join(':'),\n        chrPosUrlDecoder\n      ),\n    }),\n  (chromInfo) => chromInfo.totalLength\n);\n\nexport const xDomainEndWithAssembly = memoize(\n  (chromInfo) =>\n    atom({\n      key: `xDomainEnd-${chromInfo.totalLength}`,\n      default: getDefault(\n        'xe',\n        chromInfo.absToChr(DEFAULT_X_DOMAIN_END).slice(0, 2).join(':'),\n        chrPosUrlDecoder\n      ),\n    }),\n  (chromInfo) => chromInfo.totalLength\n);\n\n// Derived state\nexport const xDomainStartAbsWithAssembly = memoize(\n  (chromInfo) =>\n    selector({\n      key: `xDomainStartAbs-${chromInfo.totalLength}`,\n      get: ({ get }) => {\n        const xDomainStart = get(xDomainStartWithAssembly(chromInfo));\n        return toAbsPosition(xDomainStart, chromInfo);\n      },\n    }),\n  (chromInfo) => chromInfo.totalLength\n);\n\nexport const xDomainEndAbsWithAssembly = memoize(\n  (chromInfo) =>\n    selector({\n      key: `xDomainEndAbs-${chromInfo.totalLength}`,\n      get: ({ get }) => {\n        const xDomainEnd = get(xDomainEndWithAssembly(chromInfo));\n        return toAbsPosition(xDomainEnd, chromInfo);\n      },\n    }),\n  (chromInfo) => chromInfo.totalLength\n);\n\nexport const focusGeneStartWithAssembly = memoize(\n  (chromInfo) =>\n    selector({\n      key: `focusGeneStart-${chromInfo.totalLength}`,\n      get: ({ get }) => {\n        const focusGeneOption = get(focusGeneOptionState);\n        return focusGeneOption\n          ? toAbsPosition(\n              `${focusGeneOption.chr}:${focusGeneOption.txStart}`,\n              chromInfo\n            )\n          : null;\n      },\n    }),\n  (chromInfo) => chromInfo.totalLength\n);\n\nexport const focusGeneEndWithAssembly = memoize(\n  (chromInfo) =>\n    selector({\n      key: `focusGeneEnd-${chromInfo.totalLength}`,\n      get: ({ get }) => {\n        const focusGeneOption = get(focusGeneOptionState);\n        return focusGeneOption\n          ? toAbsPosition(\n              `${focusGeneOption.chr}:${focusGeneOption.txEnd}`,\n              chromInfo\n            )\n          : null;\n      },\n    }),\n  (chromInfo) => chromInfo.totalLength\n);\n\nexport const focusVariantPositionWithAssembly = memoize((chromInfo) =>\n  selector({\n    key: `focusVariantPosition-${chromInfo.totalLength}`,\n    get: ({ get }) => {\n      const focusVariantOption = get(focusVariantOptionState);\n      return focusVariantOption\n        ? toAbsPosition(\n            `${focusVariantOption.chr}:${focusVariantOption.txStart}`,\n            chromInfo\n          )\n        : null;\n    },\n  })\n);\n\nexport const focusVariantRelPositionState = selector({\n  key: 'focusVariantRelPosition',\n  get: ({ get }) => {\n    const focusVariantOption = get(focusVariantOptionState);\n    return focusVariantOption ? +focusVariantOption.txStart : null;\n  },\n});\n\nexport const focusVariantStrPositionState = selector({\n  key: 'focusVariantStrPosition',\n  get: ({ get }) => {\n    const focusVariantOption = get(focusVariantOptionState);\n    return focusVariantOption\n      ? `${focusVariantOption.chr}:${focusVariantOption.txStart}`\n      : null;\n  },\n});\n\n// Predefined hooks\nexport const useShowWelcome = () =>\n  useRecoilQueryString('w', showWelcomeState, {\n    decoder: booleanQueryStringDecoder,\n  });\n\nexport const useFocusGene = () => useRecoilQueryString('g', focusGeneState);\n\nexport const useFocusVariant = () =>\n  useRecoilQueryString('v', focusVariantState);\n\nexport const useDnaAccessLabelStyle = () =>\n  useRecoilQueryString('dal', dnaAccessLabelStyleState);\n\nexport const useDnaAccessShowInfos = () =>\n  useRecoilQueryString('dai', dnaAccessLabelShowInfoState, {\n    decoder: booleanQueryStringDecoder,\n  });\n\nexport const useXDomainStartWithAssembly = (chromInfo) =>\n  useRecoilQueryString('s', xDomainStartWithAssembly(chromInfo), {\n    encoder: chrPosUrlEncoder,\n  });\n\nexport const useXDomainEndWithAssembly = (chromInfo) =>\n  useRecoilQueryString('e', xDomainEndWithAssembly(chromInfo), {\n    encoder: chrPosUrlEncoder,\n  });\n\nexport const useEnhancerRegionsShowInfos = () =>\n  useRecoilQueryString('eri', enhancerRegionsShowInfoState, {\n    decoder: booleanQueryStringDecoder,\n  });\n\nexport const useEnhancerRegionsHideUnfocused = () =>\n  useRecoilQueryString('eri', enhancerRegionsHideUnfocusedState, {\n    decoder: booleanQueryStringDecoder,\n  });\n\nexport const useEnhancerRegionsColorEncoding = () =>\n  useRecoilQueryString('eri', enhancerRegionsColorEncodingState);\n\nexport const useEnhancerGenesShowInfos = () =>\n  useRecoilQueryString('egi', enhancerGenesShowInfoState, {\n    decoder: booleanQueryStringDecoder,\n  });\n\nexport const useEnhancerGenesPadding = () =>\n  useRecoilQueryString('egp', enhancerGenesPaddingState, {\n    decoder: booleanQueryStringDecoder,\n  });\n\nexport const useEnhancerGenesCellEncoding = () =>\n  useRecoilQueryString('egce', enhancerGenesCellEncodingState);\n\nexport const useVariantYScale = () =>\n  useRecoilQueryString('vs', variantYScaleState);\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { deepClone } from '@flekschas/utils';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FileInput from './FileInput';\nimport { useChromInfo } from './ChromInfoProvider';\nimport createLocalBedDataServer from './local-bed-data-server';\nimport usePrevious from './use-previous';\n\nimport { variantTracksState, useFocusVariant } from './state';\n\nimport { LOCAL_BED_TILESET_INFO_HG19 } from './constants';\n\nconst useStyles = makeStyles((theme) => ({\n  note: {\n    color: theme.palette.grey['400'],\n    marginTop: '1em',\n  },\n  title: {\n    fontSize: '1.5rem',\n    fontWeight: 700,\n    margin: '0.5rem 0 0 0',\n  },\n  buttonNormal: {\n    minWidth: '10.5rem',\n    margin: '0 0.5rem',\n  },\n  buttonActive: {\n    minWidth: '10.5rem',\n    marginLeft: '0.5rem',\n    color: 'white',\n    background: '#cc0078 linear-gradient(45deg, #cc0078 30%, #cc0066 90%)',\n    boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .3)',\n    '&:hover': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n      background: '#d90080 linear-gradient(45deg, #d90080 30%, #d9006c 90%)',\n    },\n    '&:focus': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n    },\n  },\n  trackList: {\n    margin: '16px 0',\n  },\n}));\n\nconst useStylesTrackConfig = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.grey['400'],\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  grow: {\n    flex: 1,\n  },\n  separator: {\n    padding: '0 8px',\n  },\n  server: {\n    flex: 1,\n    marginRight: '2px',\n  },\n  tilesetUid: {\n    flex: 1,\n    marginLeft: '2px',\n  },\n  propInput: {\n    flex: 1,\n    marginLeft: '2px',\n    marginRight: '2px',\n    '&:first-child': {\n      marginLeft: 0,\n    },\n    '&:last-child': {\n      marginRight: 0,\n    },\n  },\n}));\n\nconst useStylesTooltipVisible = makeStyles((theme) => ({\n  arrow: {\n    color: 'black',\n  },\n  tooltip: {\n    backgroundColor: 'black',\n  },\n}));\n\nconst useStylesTooltipHidden = makeStyles((theme) => ({\n  tooltip: {\n    display: 'none',\n  },\n}));\n\nconst TrackConfig = React.memo(function TrackConfig({ config, onChange }) {\n  const [state, setState] = useState(config);\n\n  const propertyChangeHandler = (property) => (event) => {\n    // eslint-disable-next-line prefer-destructuring\n    const value = event.target.value;\n    setState((currState) => ({\n      ...currState,\n      [property]: value,\n    }));\n  };\n\n  const serverChangeHandler = (event) => {\n    const server = event.target.value;\n    setState((currState) => ({\n      ...currState,\n      server,\n      file: undefined,\n    }));\n  };\n\n  const tilesetUidChangeHandler = (event) => {\n    const tilesetUid = event.target.value;\n    setState((currState) => ({\n      ...currState,\n      tilesetUid,\n      file: undefined,\n    }));\n  };\n\n  const fileChangeHandler = (file) => {\n    setState((currState) => ({\n      ...currState,\n      file,\n      server: undefined,\n      tilesetUid: undefined,\n    }));\n  };\n\n  const fileClearHandler = () => {\n    setState((currState) => ({\n      ...currState,\n      file: undefined,\n    }));\n  };\n\n  useEffect(() => {\n    if (state !== config) onChange(state);\n  }, [onChange, state, config]);\n\n  const isRemote = Boolean(state.server || state.tilesetUid);\n  const isLocal = Boolean(state.whatever);\n\n  const classes = useStylesTrackConfig();\n  const classesTooltipVisible = useStylesTooltipVisible();\n  const classesTooltipHidden = useStylesTooltipHidden();\n\n  return (\n    <React.Fragment>\n      <Grid alignItems=\"center\" container>\n        <Grid className={classes.grow} item>\n          <Grid alignItems=\"center\" container>\n            <Tooltip\n              classes={isLocal ? classesTooltipVisible : classesTooltipHidden}\n              title=\"Setting a server will clear the file!\"\n              placement=\"top\"\n              arrow\n            >\n              <TextField\n                label=\"Server URL\"\n                variant=\"outlined\"\n                size=\"small\"\n                value={state.server || ''}\n                onChange={serverChangeHandler}\n                className={classes.server}\n              />\n            </Tooltip>\n            <Tooltip\n              classes={isLocal ? classesTooltipVisible : classesTooltipHidden}\n              title=\"Setting a tileset ID will clear the file!\"\n              placement=\"top\"\n              arrow\n            >\n              <TextField\n                label=\"Tileset ID\"\n                variant=\"outlined\"\n                size=\"small\"\n                value={state.tilesetUid || ''}\n                onChange={tilesetUidChangeHandler}\n                className={classes.tilesetUid}\n              />\n            </Tooltip>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <Typography className={classes.separator}>or</Typography>\n        </Grid>\n        <Grid item>\n          <Tooltip\n            classes={isRemote ? classesTooltipVisible : classesTooltipHidden}\n            title=\"Selecting a file will clear the server and tileset ID!\"\n            placement=\"top\"\n            arrow\n          >\n            <FileInput\n              file={state.file}\n              onChange={fileChangeHandler}\n              onClear={fileClearHandler}\n            />\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid alignItems=\"center\" container>\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          size=\"small\"\n          value={state.label || ''}\n          onChange={propertyChangeHandler('label')}\n          className={classes.propInput}\n        />\n        <TextField\n          label=\"Column P-Value\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          size=\"small\"\n          type=\"number\"\n          min=\"1\"\n          step=\"1\"\n          value={state.columnPvalue || 7}\n          onChange={propertyChangeHandler('columnPvalue')}\n          className={classes.propInput}\n        />\n        <TextField\n          label=\"Column Post. Prob\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          size=\"small\"\n          type=\"number\"\n          min=\"1\"\n          step=\"1\"\n          value={state.columnPosteriorProbability || 8}\n          onChange={propertyChangeHandler('columnPosteriorProbability')}\n          className={classes.propInput}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n});\n\nconst VariantsSettings = React.memo(function VariantsSettings({\n  closeHandler,\n}) {\n  const chromInfo = useChromInfo();\n\n  const setFocusVariant = useFocusVariant()[1];\n  const [variantTracks, setVariantTracks] = useRecoilState(variantTracksState);\n  const [tmpVariantTracks, setTmpVariantTracks] = useState(() =>\n    deepClone(variantTracks)\n  );\n  const [changed, setChanged] = useState(false);\n  const variantTrackServers = useRef([]);\n  const currVariantTracks = useRef(variantTracks);\n\n  useEffect(() => {\n    currVariantTracks.current = variantTracks;\n  }, [variantTracks]);\n\n  const changeTmpVariantTracks = useCallback(\n    (i) => (newTrackConfig) => {\n      setTmpVariantTracks((currTmpVariantTracks) => {\n        const newTmpVariantTracks = [...currTmpVariantTracks];\n        newTmpVariantTracks[i] = newTrackConfig;\n        return newTmpVariantTracks;\n      });\n      setChanged(true);\n    },\n    []\n  );\n\n  const saveHandler = useCallback(() => {\n    const newVariantTracks = deepClone(tmpVariantTracks);\n\n    // Destroy old servers\n    variantTrackServers.current.forEach((server) => {\n      server.destroy();\n    });\n\n    // Create new servers\n    variantTrackServers.current = newVariantTracks.reduce(\n      (servers, trackConfig) => {\n        if (trackConfig.file) {\n          const tilesetInfo = {\n            ...LOCAL_BED_TILESET_INFO_HG19,\n            name: trackConfig.file,\n          };\n          servers.push(\n            createLocalBedDataServer(\n              trackConfig.file,\n              trackConfig.file.name,\n              chromInfo,\n              tilesetInfo,\n              {\n                header: true,\n                columnImportance: 7,\n              }\n            )\n          );\n        }\n        return servers;\n      },\n      []\n    );\n    setVariantTracks(newVariantTracks);\n    if (\n      newVariantTracks.some(\n        (newTrackConfig, i) =>\n          newTrackConfig.server !== currVariantTracks.current[i].server\n      ) ||\n      newVariantTracks.some(\n        (newTrackConfig, i) =>\n          newTrackConfig.tilesetUid !== currVariantTracks.current[i].tilesetUid\n      ) ||\n      newVariantTracks.some(\n        (newTrackConfig, i) =>\n          newTrackConfig.file !== currVariantTracks.current[i].file\n      )\n    ) {\n      setFocusVariant(null);\n    }\n    closeHandler();\n  }, [\n    chromInfo,\n    tmpVariantTracks,\n    closeHandler,\n    setVariantTracks,\n    setFocusVariant,\n  ]);\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Typography\n        id=\"title\"\n        align=\"center\"\n        variant=\"h5\"\n        component=\"h2\"\n        noWrap\n        className={classes.title}\n      >\n        Variant Track\n      </Typography>\n      <p id=\"description\">\n        Variants can be loaded from a remote{' '}\n        <code>\n          <a\n            href=\"https://docs.higlass.io/data_preparation.html#bed-files\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            .beddb\n          </a>\n        </code>{' '}\n        or a local <code>.bed</code> file. To access a remote file, please enter\n        the URL of the{' '}\n        <a\n          href=\"https://docs.higlass.io/higlass_server.html\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          HiGlass server\n        </a>{' '}\n        and the track ID. To access a local file please select it with via the\n        file selection.\n      </p>\n      <div className={classes.trackList}>\n        {tmpVariantTracks.map((variantTrackConfig, i) => (\n          <TrackConfig\n            key={i}\n            config={variantTrackConfig}\n            onChange={changeTmpVariantTracks(i)}\n          />\n        ))}\n      </div>\n      <Typography align=\"center\">\n        <Button\n          className={classes.buttonNormal}\n          onClick={closeHandler}\n          variant=\"contained\"\n          disableElevation\n        >\n          Cancel\n        </Button>\n        <Button\n          className={changed ? classes.buttonActive : classes.buttonNormal}\n          onClick={changed ? saveHandler : closeHandler}\n          variant=\"contained\"\n          disableElevation\n        >\n          {changed ? 'Save' : 'Okay'}\n        </Button>\n      </Typography>\n    </React.Fragment>\n  );\n});\n\nexport default VariantsSettings;\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Logo from './Logo';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '&>p': {\n      fontSize: '1.125em',\n    },\n  },\n  title: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: theme.spacing(2, 0, 3),\n  },\n  note: {\n    color: theme.palette.grey['400'],\n    marginTop: '1em',\n  },\n  showTutorial: {\n    minWidth: '10.5rem',\n    marginRight: '0.5rem',\n  },\n  startExploring: {\n    minWidth: '10.5rem',\n    marginLeft: '0.5rem',\n    color: 'white',\n    background: '#cc0078 linear-gradient(45deg, #cc0078 30%, #cc0066 90%)',\n    boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .3)',\n    '&:hover': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n      background: '#d90080 linear-gradient(45deg, #d90080 30%, #d9006c 90%)',\n    },\n    '&:focus': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n    },\n  },\n}));\n\nconst Welcome = React.memo(function Welcome({ closeHandler }) {\n  const [tutorial, setTutorial] = useState(false);\n\n  const classes = useStyles();\n\n  if (tutorial)\n    return (\n      <div className={classes.root}>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <Typography align=\"center\">\n          <Button\n            className={classes.startExploring}\n            onClick={closeHandler}\n            variant=\"contained\"\n            disableElevation\n          >\n            Start Exploring!\n          </Button>\n        </Typography>\n        <Typography align=\"center\" className={classes.note}>\n          <em>\n            You can reopen this tutorial by clicking on \"ABC Enhancer-Gene\n            Connections\" in the upper left corner!\n          </em>\n        </Typography>\n      </div>\n    );\n\n  return (\n    <div className={classes.root}>\n      <Typography\n        id=\"title\"\n        align=\"center\"\n        variant=\"h5\"\n        component=\"h2\"\n        noWrap\n        className={classes.title}\n      >\n        <Logo\n          styles={{\n            width: 'auto',\n          }}\n        />\n      </Typography>\n      <p id=\"description\">\n        This web application visualizes genome-wide enhancer-gene interactions\n        that were predicted with the <em>Activity-By-Contact</em> (ABC) model.\n        You can interactively browse the entire human genome and filter\n        enhancers by gene and containing variant.\n      </p>\n      <p>\n        For information regarding the ABC model please refer to our initial\n        publication:{' '}\n        <a\n          href=\"https://www.nature.com/articles/s41588-019-0538-0\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Fulco et al., Activity-by-contact model of enhancer–promoter\n          regulation from thousands of CRISPR perturbations,{' '}\n          <em>Nature Genetics</em> (2019)\n        </a>\n        .\n      </p>\n      <Typography align=\"center\">\n        <Button\n          className={classes.showTutorial}\n          onClick={() => setTutorial(true)}\n          variant=\"contained\"\n          disableElevation\n        >\n          Show Tutorial\n        </Button>\n        <Button\n          className={classes.startExploring}\n          onClick={closeHandler}\n          variant=\"contained\"\n          disableElevation\n        >\n          Start Exploring!\n        </Button>\n      </Typography>\n    </div>\n  );\n});\n\nexport default Welcome;\n","import React, { createContext, useCallback, useState } from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst ModalContext = createContext();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '4rem',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '0.25rem',\n    boxShadow: theme.shadows[4],\n    maxWidth: '60rem',\n    maxHeight: 'calc(100vh - 8rem)',\n    overflow: 'auto',\n    padding: theme.spacing(2, 4),\n    outline: 0,\n  },\n}));\n\nexport default function ModalProvider({ children }) {\n  const [Component, setComponent] = useState(null);\n  const [customCloseHandler, setCustomCloseHandler] = useState(null);\n\n  const showModal = useCallback(\n    (newComponent = null, newCustomCloseHandler = null) => {\n      setComponent(newComponent);\n      setCustomCloseHandler(() => newCustomCloseHandler);\n    },\n    []\n  );\n\n  const closeHandler = useCallback(() => {\n    setComponent(null);\n    setCustomCloseHandler(null);\n  }, []);\n\n  const classes = useStyles();\n\n  const open = Boolean(Component);\n\n  return (\n    <ModalContext.Provider value={showModal}>\n      {children}\n      <Modal\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n        className={classes.root}\n        open={open}\n        onClose={customCloseHandler || closeHandler}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 250,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            {open && (\n              <Component closeHandler={customCloseHandler || closeHandler} />\n            )}\n          </div>\n        </Fade>\n      </Modal>\n    </ModalContext.Provider>\n  );\n}\n\nfunction useShowModal() {\n  const context = React.useContext(ModalContext);\n  if (context === undefined) {\n    throw new Error('useShowModal must be used within a ModalContext');\n  }\n  return context;\n}\n\nexport { useShowModal };\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { isString, nthIndexOf } from '@flekschas/utils';\n\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport CheckboxList from './CheckboxList';\nimport Logo from './Logo';\nimport VariantsSettings from './VariantsSettings';\nimport Welcome from './Welcome';\nimport { useChromInfo } from './ChromInfoProvider';\nimport { useShowModal } from './ModalProvider';\n\nimport {\n  enhancerGenesSvgState,\n  higlassEnhancerRegionsState,\n  higlassDnaAccessState,\n  sampleFilterState,\n  sampleWithName,\n  sampleGroupWithGroup,\n  showVariantsSettingsState,\n  useXDomainStartWithAssembly,\n  useXDomainEndWithAssembly,\n  useShowWelcome,\n} from './state';\n\nimport { download, stringifySvg } from './utils';\n\nimport {\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n  DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY,\n  SVG_SKELETON,\n  DRAWER_WIDTH,\n  GROUPED_SAMPLE_OPTIONS,\n  SAMPLE_TO_GROUP,\n} from './constants';\n\nconst useStyles = makeStyles((theme) => ({\n  h1: {\n    height: '100%',\n    margin: '0',\n    padding: '0',\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    fontWeight: 'bold',\n  },\n  drawer: {\n    width: DRAWER_WIDTH,\n    flexShrink: 0,\n  },\n  drawerGrid: {\n    height: '100%',\n  },\n  drawerPaper: {\n    width: DRAWER_WIDTH,\n  },\n  settings: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  globalSettingsTitle: {\n    padding: '3px 8px 4px 8px',\n    margin: 0,\n    '& h6': {\n      fontSize: '0.8rem',\n      fontWeight: 'bold',\n    },\n  },\n  settingsContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden auto',\n  },\n  toolbar: theme.mixins.toolbar,\n  grow: {\n    flexGrow: 1,\n  },\n  titleBar: {\n    position: 'relative',\n    padding: '2px',\n    fontSize: '0.8rem',\n    background: theme.palette.grey['100'],\n  },\n  titleBarText: {\n    fontSize: '0.8rem',\n  },\n  titleBarContainer: {\n    width: 'auto',\n  },\n  titleBarTitle: {\n    padding: '0 2px',\n    fontWeight: 900,\n  },\n  titleBarIcon: {\n    color: theme.palette.grey['400'],\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  titleBarIconActive: {\n    color: 'black',\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  globalSettingsFirstBox: {\n    margin: theme.spacing(0, 1, 1, 1),\n  },\n}));\n\nconst extractCoreFromHiGlassSvg = (svg) => {\n  const fifthLn = nthIndexOf(svg, '\\n', 4);\n  const lastLn = svg.lastIndexOf('\\n');\n  const width = +svg.substring(\n    svg.indexOf('width=\"') + 7,\n    svg.indexOf('px', svg.indexOf('width=\"') + 7)\n  );\n  const height = +svg.substring(\n    svg.indexOf('height=\"') + 8,\n    svg.indexOf('px', svg.indexOf('height=\"') + 8)\n  );\n  return {\n    core: svg.substring(fifthLn + 1, lastLn),\n    width,\n    height,\n  };\n};\n\nconst extractCoreFromStringifiedSvg = (svg) => {\n  const firstSvgClosingBracket = svg.indexOf('>');\n  const lastSvgOpeningBracket = svg.lastIndexOf('</svg>');\n  const [width, height] = svg\n    .substring(\n      svg.indexOf('viewbox=\"') + 9,\n      svg.indexOf('\"', svg.indexOf('viewbox=\"') + 9)\n    )\n    .split(' ')\n    .slice(2);\n  return {\n    core: svg.substring(firstSvgClosingBracket + 1, lastSvgOpeningBracket),\n    width: +width,\n    height: +height,\n  };\n};\n\nconst AppSidebar = React.memo(function AppSidebar() {\n  const chromInfo = useChromInfo();\n  const showModal = useShowModal();\n\n  const [xDomainStart, setXDomainStart] = useXDomainStartWithAssembly(\n    chromInfo\n  );\n  const [xDomainEnd, setXDomainEnd] = useXDomainEndWithAssembly(chromInfo);\n  const [showWelcome, setShowWelcome] = useShowWelcome();\n  const [showVariantsSettings, setShowVariantsSettings] = useRecoilState(\n    showVariantsSettingsState\n  );\n\n  const higlassEnhancerRegions = useRecoilValue(higlassEnhancerRegionsState);\n  const higlassDnaAccess = useRecoilValue(higlassDnaAccessState);\n  const enhancerGenesSvg = useRecoilValue(enhancerGenesSvgState);\n\n  const [userChangedDomain, setUserChangedDomain] = useState(0);\n\n  const numericalXDomainStart = useMemo(\n    () =>\n      isString(xDomainStart) && xDomainStart.indexOf(':') >= 0\n        ? chromInfo.chrToAbs([\n            xDomainStart.split(':')[0],\n            +xDomainStart.split(':')[1],\n          ])\n        : +xDomainStart,\n    [xDomainStart, chromInfo]\n  );\n\n  const numericalXDomainEnd = useMemo(\n    () =>\n      isString(xDomainEnd) && xDomainEnd.indexOf(':') >= 0\n        ? chromInfo.chrToAbs([\n            xDomainEnd.split(':')[0],\n            +xDomainEnd.split(':')[1],\n          ])\n        : +xDomainEnd,\n    [xDomainEnd, chromInfo]\n  );\n\n  const xDomainStartChangeHandler = useCallback(\n    (event) => {\n      setXDomainStart(event.target.value);\n      setUserChangedDomain(2);\n    },\n    [setXDomainStart]\n  );\n\n  const xDomainEndChangeHandler = useCallback(\n    (event) => {\n      setXDomainEnd(event.target.value);\n      setUserChangedDomain(2);\n    },\n    [setXDomainEnd]\n  );\n\n  useEffect(() => {\n    setUserChangedDomain((curr) => Math.max(0, curr - 1));\n  }, [xDomainStart, xDomainEnd]);\n\n  const higlassEnhancerZoomToXDomain = (event) => {\n    if (!higlassEnhancerRegions) return;\n\n    const xDomain = [\n      ...higlassEnhancerRegions.getViewConfig().views[0].initialXDomain,\n    ];\n\n    if (!Number.isNaN(+numericalXDomainStart)) {\n      xDomain[0] = numericalXDomainStart;\n    }\n    if (!Number.isNaN(+numericalXDomainEnd)) {\n      xDomain[1] = numericalXDomainEnd;\n    }\n\n    higlassEnhancerRegions.zoomTo(\n      'context',\n      xDomain[0],\n      xDomain[1],\n      xDomain[0],\n      xDomain[1],\n      2000\n    );\n  };\n\n  const closeWelcome = useCallback(() => {\n    setShowWelcome(false);\n  }, [setShowWelcome]);\n\n  const openWelcome = useCallback(() => {\n    setShowWelcome(true);\n  }, [setShowWelcome]);\n\n  useEffect(() => {\n    if (showWelcome) showModal(Welcome, closeWelcome);\n    else showModal();\n  }, [showWelcome, showModal, closeWelcome]);\n\n  const closeVariantsSettings = useCallback(() => {\n    setShowVariantsSettings(false);\n  }, [setShowVariantsSettings]);\n\n  const openVariantsSettings = useCallback(() => {\n    setShowVariantsSettings(true);\n  }, [setShowVariantsSettings]);\n\n  useEffect(() => {\n    if (showVariantsSettings) {\n      showModal(VariantsSettings, closeVariantsSettings);\n    } else if (!showWelcome) {\n      showModal();\n    }\n  }, [showWelcome, showVariantsSettings, showModal, closeVariantsSettings]);\n\n  const mergeSvgs = (enhancerSvg, dnaAccessSvg, enhancerGeneSvg) => {\n    const {\n      core: enhancerSvgCore,\n      width: enhancerWidth,\n      height: enhancerHeight,\n    } = extractCoreFromHiGlassSvg(enhancerSvg);\n    const {\n      core: dnaAccessSvgCore,\n      width: dnaAccessWidth,\n      height: dnaAccessHeight,\n    } = extractCoreFromHiGlassSvg(dnaAccessSvg);\n    const {\n      core: enhancerGeneSvgCore = null,\n      height: enhancerGeneHeight = 0,\n    } = enhancerGeneSvg ? extractCoreFromStringifiedSvg(enhancerGeneSvg) : {};\n\n    const actualEnhancerHeight = DEFAULT_VIEW_CONFIG_ENHANCER.views[0].tracks.top.reduce(\n      (height, track) => height + track.height,\n      0\n    );\n    const actualDnaAccessHeight = DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY.views[0].tracks.top.reduce(\n      (height, track) => height + track.height,\n      0\n    );\n    const padding = 24;\n\n    let mergedSvg = SVG_SKELETON;\n    mergedSvg = mergedSvg.replace(\n      '_WIDTH_',\n      enhancerWidth + dnaAccessWidth + padding\n    );\n    mergedSvg = mergedSvg.replace(\n      '_HEIGHT_',\n      Math.max(\n        enhancerHeight + enhancerGeneHeight + padding,\n        dnaAccessHeight,\n        actualEnhancerHeight + enhancerGeneHeight + padding,\n        actualDnaAccessHeight\n      )\n    );\n    mergedSvg = mergedSvg.replace('_ENHANCER_', enhancerSvgCore);\n    mergedSvg = mergedSvg.replace(\n      '_ENHANCER_GENE_Y_',\n      enhancerHeight + padding\n    );\n    mergedSvg = mergedSvg.replace('_ENHANCER_GENE_', enhancerGeneSvgCore);\n    mergedSvg = mergedSvg.replace('_DNA_ACCESS_X_', enhancerWidth + padding);\n    mergedSvg = mergedSvg.replace('_DNA_ACCESS_', dnaAccessSvgCore);\n\n    if (enhancerGeneSvgCore === null) {\n      mergedSvg = mergedSvg.replace('_ENHANCER_GENE_', '');\n    } else {\n      mergedSvg = mergedSvg.replace('_ENHANCER_GENE_', enhancerGeneSvgCore);\n    }\n\n    return mergedSvg;\n  };\n\n  const higlassExportAsSvg = () => {\n    if (!higlassEnhancerRegions || !higlassDnaAccess) {\n      console.warn('One of the HiGlass instances is not available');\n      return;\n    }\n\n    const mergedSvg = mergeSvgs(\n      higlassEnhancerRegions.exportAsSvg(),\n      higlassDnaAccess.exportAsSvg(),\n      enhancerGenesSvg ? stringifySvg(enhancerGenesSvg) : null\n    );\n\n    download(\n      'abc-enhancers.svg',\n      new Blob([mergedSvg], { type: 'image/svg+xml' })\n    );\n  };\n\n  // Run on every render\n  const classes = useStyles();\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      variant=\"permanent\"\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      anchor=\"left\"\n    >\n      <Grid container direction=\"column\" className={classes.drawerGrid}>\n        <Grid item>\n          <ButtonBase\n            className={classes.toolbar}\n            style={{ width: '100%' }}\n            onClick={openWelcome}\n          >\n            <h1 className={classes.h1}>\n              <Logo />\n            </h1>\n          </ButtonBase>\n          <Divider />\n        </Grid>\n        <Grid container item className={classes.grow} direction=\"column\">\n          <Grid item>\n            <Box m={1}>\n              <Box m={0}>\n                <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                  <InputLabel htmlFor=\"x-domain-start\">Region Start</InputLabel>\n                  <OutlinedInput\n                    id=\"x-domain-start\"\n                    label=\"Region Start\"\n                    onChange={xDomainStartChangeHandler}\n                    value={xDomainStart}\n                  />\n                </FormControl>\n              </Box>\n              <Box m={0}>\n                <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                  <InputLabel htmlFor=\"x-domain-end\">Region End</InputLabel>\n                  <OutlinedInput\n                    id=\"x-domain-end\"\n                    label=\"Region End\"\n                    onChange={xDomainEndChangeHandler}\n                    value={xDomainEnd}\n                  />\n                </FormControl>\n              </Box>\n              {userChangedDomain > 0 && (\n                <Box m={0}>\n                  <Button\n                    variant=\"contained\"\n                    margin=\"dense\"\n                    onClick={higlassEnhancerZoomToXDomain}\n                    fullWidth\n                    disableElevation\n                    size=\"small\"\n                  >\n                    Go\n                  </Button>\n                </Box>\n              )}\n            </Box>\n            <Divider />\n            <Box m={1}>\n              <Button\n                variant=\"contained\"\n                margin=\"dense\"\n                fullWidth\n                disableElevation\n                size=\"small\"\n                startIcon={<SettingsIcon />}\n                onClick={openVariantsSettings}\n              >\n                Edit Variants\n              </Button>\n            </Box>\n            <Divider />\n          </Grid>\n          <Grid item className={classes.settings}>\n            <Box m={0} className={classes.settingsContent}>\n              <Box className={classes.globalSettingsFirstBox}>\n                <CheckboxList\n                  filterState={sampleFilterState}\n                  filterLabel=\"Filter Samples\"\n                  optionWithName={sampleWithName}\n                  optionGroupWithGroup={sampleGroupWithGroup}\n                  groupedOptions={GROUPED_SAMPLE_OPTIONS}\n                  optionToGroup={SAMPLE_TO_GROUP}\n                  groupColors={DEFAULT_COLOR_MAP}\n                  groupColorsDark={DEFAULT_COLOR_MAP_DARK}\n                />\n              </Box>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Divider />\n            <Box m={1}>\n              <Button\n                variant=\"contained\"\n                margin=\"dense\"\n                onClick={higlassExportAsSvg}\n                fullWidth\n                disableElevation\n                size=\"small\"\n              >\n                Export as SVG\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Drawer>\n  );\n});\n\nexport default AppSidebar;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { identity } from '@flekschas/utils';\n\nimport useDebounce from './use-debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    background: 'white !important',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    '&::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 0)',\n      transition: 'boxShadow 0.2s ease',\n    },\n    '&:hover::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n    },\n  },\n  focused: {\n    boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n  },\n  input: {\n    height: 35,\n    padding: '6px 0 6px',\n  },\n  textFieldRoot: {\n    '& .MuiFormLabel-root': {\n      color: 'black',\n      fontWeight: 'bold',\n      transform: 'translate(12px, 21px) scale(1.25)',\n    },\n    '& .MuiInputLabel-shrink': {\n      fontWeight: 'normal',\n    },\n  },\n}));\n\nconst fetchJsonFromUrl = async (url, query) => {\n  if (typeof url === 'string') {\n    const response = await fetch(`${url}&ac=${query || ''}`);\n    return response.json();\n  }\n  const response = await fetch(`${url.url}&ac=${query || ''}`);\n  const results = await response.json();\n  return results.map((result) => {\n    result.type = url.type;\n    return result;\n  });\n};\n\nfunction GeneIcon(props) {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <path d=\"M5.03 14.378A7.33 7.33 0 003.423 16h2.42a7.762 7.762 0 011.281-.774 13.241 13.241 0 01-1.863-1.016c-.078.054-.156.11-.233.168zM5.766 0l.219.174a8.754 8.754 0 001.636.92l.024.008c.797.24 1.507.627 2.023.933.325.18.674.4 1.024.66 1.825 1.363 2.79 3.22 2.79 5.367 0 2.062-.962 3.89-2.782 5.286-.061.048-.125.094-.186.139a10.45 10.45 0 00-1.895-.955 8.17 8.17 0 001.69-1.162h-3.92a6.191 6.191 0 01-1.199-1.15h6.093a4.054 4.054 0 00.603-1.747H3.839c.072.656.307 1.239.636 1.747h.011c.282.438.628.822.991 1.15H5.47l.74.584c.831.588 1.573.893 1.636.92a9.358 9.358 0 012.847 1.504A7.38 7.38 0 0112.3 16H9.879l-.759-.5a7.876 7.876 0 00-1.256-.594 11.833 11.833 0 01-2.07-1.04l.017-.009c-1.567-.999-3.571-2.851-3.571-5.794 0-2.149.964-4.005 2.79-5.367.076-.058.154-.113.231-.167.495.32 1.143.698 1.863 1.015a7.677 7.677 0 00-1.296.786c-.043.032-.083.066-.125.098h3.318c.535.336.999.727 1.364 1.149H4.598a4.215 4.215 0 00-.721 1.748h7.97l-.038-.195a3.527 3.527 0 00-.306-.904 4.417 4.417 0 00-.378-.65l-.01-.007a5.793 5.793 0 00-1.081-1.13l-.14-.109a7.236 7.236 0 00-.722-.48l-.031-.02a7.942 7.942 0 00-1.276-.607 10.278 10.278 0 01-1.257-.57C5.728 2.218 4.31 1.364 3.281 0h2.486zm6.267 0a7.808 7.808 0 01-1.743 1.707A10.443 10.443 0 008.396.752 8.592 8.592 0 009.592 0h2.442z\" />\n    </SvgIcon>\n  );\n}\n\nfunction GeneOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <GeneIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction VariantOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <FlashOnIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction Option(props) {\n  if (props.option.type === 'gene') return <GeneOption option={props.option} />;\n  if (props.option.type === 'variant')\n    return <VariantOption option={props.option} />;\n  return <div>{props.option.geneName}</div>;\n}\n\nexport default function SearchField(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(props.inputValue);\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const loading = open && options.length === 0;\n  const classes = useStyles();\n  const autocompleteClasses = { ...classes };\n  delete autocompleteClasses.textFieldRoot;\n\n  const { customSearch, searchUrl } = props;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!open) return undefined;\n\n    setOptions([]);\n\n    const whenResults = Array.isArray(searchUrl)\n      ? searchUrl.map((url) => fetchJsonFromUrl(url, debouncedSearchQuery))\n      : [fetchJsonFromUrl(searchUrl, debouncedSearchQuery)];\n\n    if (customSearch) whenResults.push(customSearch(debouncedSearchQuery));\n\n    Promise.all(whenResults).then((results) => {\n      if (active) setOptions(results.flat().filter(identity));\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [searchUrl, customSearch, open, debouncedSearchQuery]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const value =\n    props.multiple && !Array.isArray(props.value) ? [props.value] : props.value;\n\n  let autocompleteOptions = value && options.length === 0 ? value : options;\n  autocompleteOptions = Array.isArray(autocompleteOptions)\n    ? autocompleteOptions\n    : [autocompleteOptions];\n\n  return (\n    <Autocomplete\n      classes={props.larger ? autocompleteClasses : {}}\n      multiple={props.multiple}\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      value={value}\n      onInputChange={(event, newInputValue) => {\n        if (event) setSearchQuery(newInputValue);\n      }}\n      fullWidth={props.fullWidth}\n      style={{ width: props.fullWidth ? 'auto' : props.width }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, _value) =>\n        option.geneName === _value.geneName\n      }\n      getOptionLabel={(option) => (option ? option.geneName : '')}\n      options={autocompleteOptions}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          className={props.larger ? classes.textFieldRoot : ''}\n          id={props.id}\n          label={props.label}\n          variant={props.variant}\n          size={props.size}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n      renderOption={(option) => <Option option={option} />}\n      renderTags={(v, getTagProps) =>\n        v.map((option, index) => (\n          <Chip\n            icon={option.type === 'gene' ? <GeneIcon /> : <FlashOnIcon />}\n            key={option.geneName}\n            label={option.geneName}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n    />\n  );\n}\n\nSearchField.defaultProps = {\n  fullWidth: true,\n  id: '',\n  label: '',\n  multiple: false,\n  onChange: identity,\n  size: 'small',\n  value: null,\n  variant: 'outlined',\n  width: '10rem',\n};\n\nSearchField.propTypes = {\n  customSearch: PropTypes.func,\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  searchUrl: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          url: PropTypes.string,\n          type: PropTypes.string,\n        }),\n        PropTypes.string,\n      ])\n    ),\n    PropTypes.string,\n  ]).isRequired,\n  size: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  variant: PropTypes.string,\n  width: PropTypes.string,\n};\n","import React, { useMemo } from 'react';\nimport { useRecoilState } from 'recoil';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport SearchField from './SearchField';\n\nimport usePrevious from './use-previous';\n\nimport {\n  focusGeneOptionState,\n  focusVariantOptionState,\n  useFocusGene,\n  useFocusVariant,\n} from './state';\n\nimport { DRAWER_WIDTH, GENE_SEARCH_URL, VARIANT_SEARCH_URL } from './constants';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    width: `calc(100% - ${DRAWER_WIDTH}px)`,\n    marginLeft: DRAWER_WIDTH,\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    boxShadow: `0 1px 0 0 ${theme.palette.grey['300']}`,\n  },\n  toolbarExtra: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    alignItems: 'flex-end',\n  },\n}));\n\nconst locationSearch = async (query) => {\n  if (!query) return undefined;\n\n  const match = query.match(/^chr(\\d+):(\\d)+$/);\n  if (\n    match &&\n    ((+match[1] > 0 && +match[1] < 23) ||\n      +match[1].toLowerCase() === 'x' ||\n      +match[1].toLowerCase() === 'y')\n  ) {\n    return [\n      {\n        chr: `chr${match[1]}`,\n        txStart: +match[2],\n        txEnd: +match[2] + 1,\n        score: 0,\n        geneName: query,\n        type: 'nucleotide',\n      },\n    ];\n  }\n\n  return undefined;\n};\n\nconst AppTopbar = React.memo(function AppTopbar() {\n  const [focusGene, setFocusGene] = useFocusGene();\n  const [focusVariant, setFocusVariant] = useFocusVariant();\n  const [focusGeneOption, setFocusGeneOption] = useRecoilState(\n    focusGeneOptionState\n  );\n  const [focusVariantOption, setFocusVariantOption] = useRecoilState(\n    focusVariantOptionState\n  );\n\n  const prevFocusGeneOption = usePrevious(focusGeneOption);\n  const prevFocusVariantOption = usePrevious(focusVariantOption);\n\n  // Derived State\n  const focusGeneVariantOptions = useMemo(\n    () => {\n      const _focusGeneVariant = [];\n      // Add the focus element that has not changed first!\n      if (focusGeneOption && focusGeneOption === prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption === prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      // Now add the focused element that has changed!\n      if (focusGeneOption && focusGeneOption !== prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption !== prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      return _focusGeneVariant;\n    },\n    // `prevFocusGeneOption` and `prevFocusVariantOption` are ommitted\n    // on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [focusGeneOption, focusVariantOption]\n  );\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    setFocusVariantOption(null);\n  };\n\n  const focusGeneVariantChangeHandler = (newValues) => {\n    if (newValues.length) {\n      const newFocusElements = {};\n      // We only allow exactly two selections\n      newValues.slice(newValues.length - 2).forEach((newValue) => {\n        switch (newValue.type) {\n          case 'gene':\n            newFocusElements.gene = newValue;\n            if (focusGene !== newValue.geneName) {\n              setFocusGene(newValue.geneName);\n              setFocusGeneOption(newValue);\n            }\n            break;\n\n          case 'variant':\n            newFocusElements.variant = newValue;\n            if (focusVariant !== newValue.geneName) {\n              setFocusVariant(newValue.geneName);\n              setFocusVariantOption(newValue);\n            }\n            break;\n\n          default:\n            // eslint-disable-next-line no-console\n            console.warn('Unknown focus element', newValue);\n            break;\n        }\n      });\n      // Unset focus elements\n      if (focusGene && !newFocusElements.gene) clearFocusGene();\n      if (focusVariant && !newFocusElements.variant) clearFocusVariant();\n    } else {\n      clearFocusGene();\n      clearFocusVariant();\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar\n        classes={{\n          root: classes.toolbarExtra,\n        }}\n      >\n        <FormControl fullWidth>\n          <SearchField\n            label={\n              <Grid container direction=\"row\" alignItems=\"center\">\n                <SearchIcon fontSize=\"small\" />\n                <span style={{ marginLeft: 3 }}>Gene or Variant</span>\n              </Grid>\n            }\n            customSearch={locationSearch}\n            searchUrl={[\n              { url: GENE_SEARCH_URL, type: 'gene' },\n              { url: VARIANT_SEARCH_URL, type: 'variant' },\n            ]}\n            onChange={focusGeneVariantChangeHandler}\n            value={focusGeneVariantOptions}\n            variant=\"filled\"\n            larger\n            fullWidth\n            multiple\n          />\n        </FormControl>\n      </Toolbar>\n    </AppBar>\n  );\n});\n\nexport default AppTopbar;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  enhancerRegionsShowInfoState,\n  focusVariantState,\n  focusGeneState,\n} from './state';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  text: {\n    fontSize: '0.8rem',\n  },\n  black: {\n    color: 'black',\n  },\n  gray: {\n    color: theme.palette.grey['400'],\n  },\n  pink: {\n    color: '#cc0078',\n  },\n}));\n\nconst EnhancerRegionsInfo = React.memo(function EnhancerRegionsInfo() {\n  const showInfo = useRecoilValue(enhancerRegionsShowInfoState);\n  const focusGene = useRecoilValue(focusGeneState);\n  const focusVariant = useRecoilValue(focusVariantState);\n\n  const classes = useStyles();\n\n  if (!showInfo) return '';\n\n  return (\n    <React.Fragment>\n      {focusGene && focusVariant && (\n        <Typography className={classes.text} noWrap>\n          <span className={classes.pink}>■</span> Enhancers containing{' '}\n          <em>{focusVariant}</em> and predicted to regulate <em>{focusGene}</em>\n        </Typography>\n      )}\n      {focusGene && !focusVariant && (\n        <Typography className={classes.text} noWrap>\n          <span className={classes.pink}>■</span> Enhancers predicted to\n          regulate <em>{focusGene}</em>\n        </Typography>\n      )}\n      {!focusGene && focusVariant && (\n        <Typography className={classes.text} noWrap>\n          <span className={classes.pink}>■</span> Enhancers containing{' '}\n          <em>{focusVariant}</em>\n        </Typography>\n      )}\n      {focusGene || focusVariant ? (\n        <Typography className={classes.text} noWrap>\n          <span className={classes.gray}>■</span> All other predicted enhancers\n        </Typography>\n      ) : (\n        <Typography className={classes.text} noWrap>\n          <span className={classes.black}>■</span> All predicted enhancers\n        </Typography>\n      )}\n    </React.Fragment>\n  );\n});\n\nexport default EnhancerRegionsInfo;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst EnhancerRegionsInfo = React.memo(function EnhancerRegionsInfo() {\n  return (\n    <React.Fragment>\n      <Typography>\n        This panel visualizes the predicted enhancers by sample type as a\n        matrix-like track. Each rectangle representes an enhancer. Promoter\n        regions are indicated by translucent light gray overlays.\n      </Typography>\n      <Typography>\n        {' '}\n        You can filter enhancers via their target gene or by variant (the dot\n        plot below the gene annotations). Click on a variant or gene to select\n        it. Selections are shown in pink/red.\n      </Typography>\n    </React.Fragment>\n  );\n});\n\nexport default EnhancerRegionsInfo;\n","import React, { useCallback } from 'react';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  useEnhancerRegionsHideUnfocused,\n  useEnhancerRegionsColorEncoding,\n  useVariantYScale,\n} from './state';\n\nconst useStyles = makeStyles((theme) => ({\n  iconRadioLegend: {\n    margin: theme.spacing(2, 0, 0.25, 0),\n  },\n}));\n\nconst EnhancerRegionsInfo = React.memo(function EnhancerRegionsInfo() {\n  const [variantYScale, setVariantYScale] = useVariantYScale();\n  const [hideUnfocused, setHideUnfocused] = useEnhancerRegionsHideUnfocused();\n  const [colorEncoding, setColorEncoding] = useEnhancerRegionsColorEncoding();\n\n  const hideUnfocusedChangeHandler = useCallback(\n    (event) => {\n      setHideUnfocused(event.target.checked);\n    },\n    [setHideUnfocused]\n  );\n\n  const changeVariantYScale = useCallback(\n    (value) => () => {\n      setVariantYScale(value);\n    },\n    [setVariantYScale]\n  );\n\n  const changeColorEncoding = useCallback(\n    (value) => () => {\n      setColorEncoding(value);\n    },\n    [setColorEncoding]\n  );\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Box m={1}>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={hideUnfocused}\n              onChange={hideUnfocusedChangeHandler}\n              name=\"hideUnfocused\"\n            />\n          }\n          label=\"Hide unfocused enhancer regions\"\n        />\n      </Box>\n      <Box m={1}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\" className={classes.iconRadioLegend}>\n            Variant y-scale\n          </FormLabel>\n          <RadioGroup\n            aria-label=\"variantYScale\"\n            name=\"variantYScale\"\n            value={variantYScale}\n          >\n            <FormControlLabel\n              label=\"p-value\"\n              value=\"pValue\"\n              className={classes.iconRadio}\n              control={\n                <IconButton\n                  size=\"small\"\n                  onClick={changeVariantYScale('pValue')}\n                >\n                  {variantYScale === 'pValue' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n            <FormControlLabel\n              label=\"Posterior probability\"\n              value=\"posteriorProbability\"\n              className={classes.iconRadio}\n              control={\n                <IconButton\n                  size=\"small\"\n                  onClick={changeVariantYScale('posteriorProbability')}\n                >\n                  {variantYScale === 'posteriorProbability' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n          </RadioGroup>\n        </FormControl>\n      </Box>\n      <Box m={1}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\" className={classes.iconRadioLegend}>\n            Matrix colorEncoding\n          </FormLabel>\n          <RadioGroup\n            aria-label=\"colorEncoding\"\n            name=\"colorEncoding\"\n            value={colorEncoding}\n          >\n            <FormControlLabel\n              label=\"Solid\"\n              value=\"solid\"\n              className={classes.iconRadio}\n              control={\n                <IconButton size=\"small\" onClick={changeColorEncoding('solid')}>\n                  {colorEncoding === 'solid' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n            <FormControlLabel\n              label=\"Number of predictions\"\n              value=\"frequency\"\n              className={classes.iconRadio}\n              control={\n                <IconButton\n                  size=\"small\"\n                  onClick={changeColorEncoding('frequency')}\n                >\n                  {colorEncoding === 'frequency' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n            <FormControlLabel\n              label=\"Highest prediction score\"\n              value=\"highestImportance\"\n              className={classes.iconRadio}\n              control={\n                <IconButton\n                  size=\"small\"\n                  onClick={changeColorEncoding('highestImportance')}\n                >\n                  {colorEncoding === 'highestImportance' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n            <FormControlLabel\n              label=\"Prediction score of the closest connection\"\n              value=\"closestImportance\"\n              className={classes.iconRadio}\n              control={\n                <IconButton\n                  size=\"small\"\n                  onClick={changeColorEncoding('closestImportance')}\n                >\n                  {colorEncoding === 'closestImportance' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n          </RadioGroup>\n        </FormControl>\n      </Box>\n    </React.Fragment>\n  );\n});\n\nexport default EnhancerRegionsInfo;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpIcon from '@material-ui/icons/Help';\nimport InfoIcon from '@material-ui/icons/Info';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  bar: {\n    position: 'relative',\n    padding: '2px',\n    fontSize: '0.8rem',\n    background: theme.palette.grey['100'],\n  },\n  title: {\n    fontSize: '0.8rem',\n    padding: '0 2px',\n    fontWeight: 900,\n  },\n  icon: {\n    color: theme.palette.grey['400'],\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  iconActive: {\n    color: theme.palette.grey['600'],\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  popeover: {\n    '& > *': {\n      maxWidth: '20rem',\n      padding: '0.5rem',\n      fontSize: '0.8rem',\n      '&+p': {\n        paddingTop: 0,\n      },\n    },\n  },\n  info: {\n    '&> *': {\n      padding: '0 2px',\n    },\n    '&> *:last-child': {\n      borderBottom: `1px solid ${theme.palette.grey['100']}`,\n    },\n  },\n}));\n\nconst TitleBar = React.memo(function TitleBar({\n  id,\n  title,\n  Info,\n  Help,\n  Settings,\n  useShowInfo,\n  popoverDirection = 'bottom',\n}) {\n  const [showInfo, setShowInfo] = useShowInfo();\n  const [helpAnchorEl, setHelpAnchorEl] = useState();\n  const [settingsAnchorEl, setSettingsAnchorEl] = useState();\n\n  const infoToggleHandler = useCallback(() => {\n    setShowInfo((show) => !(show === true || show === 'true'));\n  }, [setShowInfo]);\n\n  const helpOpenHandler = useCallback((event) => {\n    setHelpAnchorEl(event.currentTarget);\n  }, []);\n\n  const helpCloseHandler = useCallback(() => {\n    setHelpAnchorEl(null);\n  }, []);\n\n  const settingsOpenHandler = useCallback((event) => {\n    setSettingsAnchorEl(event.currentTarget);\n  }, []);\n\n  const settingsCloseHandler = useCallback(() => {\n    setSettingsAnchorEl(null);\n  }, []);\n\n  const helpId = useMemo(() => `${id}-help`, [id]);\n  const settingsId = useMemo(() => `${id}-settings`, [id]);\n\n  const anchorOriginVertical = useMemo(\n    () => (popoverDirection === 'bottom' ? 'bottom' : 'top'),\n    [popoverDirection]\n  );\n  const transformOriginVertical = useMemo(\n    () => (popoverDirection === 'bottom' ? 'top' : 'bottom'),\n    [popoverDirection]\n  );\n\n  // On every render\n  const classes = useStyles();\n\n  const helpOpen = Boolean(helpAnchorEl);\n  const settingsOpen = Boolean(settingsAnchorEl);\n\n  const iconInfoClass = showInfo ? classes.iconActive : classes.icon;\n  const iconHelpClass = helpOpen ? classes.iconActive : classes.icon;\n  const iconSettingsClass = settingsOpen ? classes.iconActive : classes.icon;\n\n  return (\n    <Grid item className={classes.root}>\n      <Grid\n        item\n        className={classes.bar}\n        container\n        alignItems=\"center\"\n        wrap=\"nowrap\"\n      >\n        <Grid\n          item\n          container\n          alignItems=\"center\"\n          wrap=\"nowrap\"\n          className={classes.grow}\n        >\n          <Typography component=\"h3\" className={classes.title} noWrap>\n            {title}:\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Grid container alignItems=\"center\" wrap=\"nowrap\">\n            <IconButton\n              aria-label=\"details\"\n              className={iconInfoClass}\n              size=\"small\"\n              onClick={infoToggleHandler}\n            >\n              <InfoIcon fontSize=\"inherit\" />\n            </IconButton>\n            <IconButton\n              aria-label=\"help\"\n              aria-describedby={helpId}\n              className={iconHelpClass}\n              size=\"small\"\n              onClick={helpOpenHandler}\n            >\n              <HelpIcon fontSize=\"inherit\" />\n            </IconButton>\n            <Popover\n              id={helpId}\n              open={helpOpen}\n              anchorEl={helpAnchorEl}\n              onClose={helpCloseHandler}\n              anchorOrigin={{\n                vertical: anchorOriginVertical,\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: transformOriginVertical,\n                horizontal: 'right',\n              }}\n            >\n              <div className={classes.popeover}>\n                <Help />\n              </div>\n            </Popover>\n            <IconButton\n              aria-label=\"settings\"\n              aria-describedby={settingsId}\n              className={iconSettingsClass}\n              size=\"small\"\n              onClick={settingsOpenHandler}\n            >\n              <SettingsIcon fontSize=\"inherit\" />\n            </IconButton>\n            <Popover\n              id={helpId}\n              open={settingsOpen}\n              anchorEl={settingsAnchorEl}\n              onClose={settingsCloseHandler}\n              anchorOrigin={{\n                vertical: anchorOriginVertical,\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: transformOriginVertical,\n                horizontal: 'right',\n              }}\n            >\n              <div className={classes.popeover}>\n                <Settings />\n              </div>\n            </Popover>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item className={classes.info}>\n        {showInfo && <Info />}\n      </Grid>\n    </Grid>\n  );\n});\n\nexport default TitleBar;\n","import { deepClone, isFunction } from '@flekschas/utils';\n\nimport { DEFAULT_VARIANT_TRACK_DEF } from './constants';\n\nconst getFocusGeneRegion = (viewConfig) => {\n  return viewConfig.views[0].overlays[1] &&\n    viewConfig.views[0].overlays[1].options.extent &&\n    viewConfig.views[0].overlays[1].options.extent.length\n    ? [...viewConfig.views[0].overlays[1].options.extent[0]]\n    : null;\n};\n\nconst getFocusVariantRegion = (viewConfig) => {\n  const track = viewConfig.views[0].tracks.top[2];\n  let focusRegion = null;\n\n  if (track.type === 'combined') {\n    if (!track.contents[0]) return focusRegion;\n    focusRegion = track.contents[0].options.focusRegion;\n  } else {\n    focusRegion = track.options.focusRegion;\n  }\n\n  return focusRegion ? [...focusRegion] : focusRegion;\n};\n\nexport const updateViewConfigVariantTracks = (variantTrackConfigs) => (\n  viewConfig\n) => {\n  const track = viewConfig.views[0].tracks.top[2];\n\n  if (track.type === 'combined') {\n    track.contents = variantTrackConfigs.reduce((tracks, trackConfig) => {\n      const variantTrack = deepClone(DEFAULT_VARIANT_TRACK_DEF);\n      if (trackConfig.server && trackConfig.tilesetUid) {\n        variantTrack.server = trackConfig.server;\n        variantTrack.tilesetUid = trackConfig.tilesetUid;\n        variantTrack.uid = `variants-${trackConfig.tilesetUid}`;\n        variantTrack.options.name = trackConfig.label || 'Variants';\n        tracks.push(variantTrack);\n      } else if (trackConfig.file) {\n        variantTrack.data = { type: 'localBed', id: trackConfig.file.name };\n        variantTrack.uid = `variants-${trackConfig.file.name}`;\n        variantTrack.options.name = trackConfig.label || 'Variants';\n        tracks.push(variantTrack);\n      }\n      return tracks;\n    }, []);\n\n    track.height = (track.contents.length > 0) * 32;\n  }\n\n  return viewConfig;\n};\n\nexport const updateViewConfigFocusVariant = (position, trackIdxs = []) => (\n  viewConfig\n) => {\n  const delFocusRegion = (track, focusRegion) => {\n    if (track.type === 'combined') {\n      track.contents.forEach((childTrack) => {\n        delete childTrack.options.focusRegion;\n      });\n    } else {\n      delete track.options.focusRegion;\n    }\n  };\n\n  const setFocusRegion = (track, focusRegion) => {\n    if (track.type === 'combined') {\n      track.contents.forEach((childTrack) => {\n        childTrack.options.focusRegion = focusRegion;\n      });\n    } else {\n      track.options.focusRegion = focusRegion;\n    }\n  };\n\n  if (Number.isNaN(+position) || position === null) {\n    trackIdxs.forEach((trackIdx) => {\n      delFocusRegion(viewConfig.views[0].tracks.top[trackIdx]);\n    });\n    viewConfig.views[0].overlays[0].options.extent = [];\n  } else {\n    const focusRegion = [position - 0.5, position + 0.5];\n    trackIdxs.forEach((trackIdx) => {\n      setFocusRegion(viewConfig.views[0].tracks.top[trackIdx], focusRegion);\n    });\n\n    viewConfig.views[0].overlays[0].options.extent = [focusRegion];\n  }\n\n  return viewConfig;\n};\n\nexport const updateViewConfigVariantYScale = (yScale) => (viewConfig) => {\n  const track = viewConfig.views[0].tracks.top[2];\n\n  if (track.type === 'combined') {\n    track.contents.forEach((childTrack) => {\n      childTrack.options.valueColumn = yScale === 'pValue' ? 7 : 8;\n    });\n  } else {\n    track.options.valueColumn = yScale === 'pValue' ? 7 : 8;\n  }\n\n  return viewConfig;\n};\n\nexport const updateViewConfigXDomain = (\n  newXDomainStart,\n  newXDomainEnd,\n  { force = false } = {}\n) => (viewConfig) => {\n  const _force = force === true || (isFunction(force) && force());\n\n  const xDomain = [...viewConfig.views[0].initialXDomain];\n  const focusGeneRegion = getFocusGeneRegion(viewConfig);\n  const focusVariantRegion = getFocusVariantRegion(viewConfig);\n\n  if (!Number.isNaN(+newXDomainStart)) {\n    xDomain[0] = newXDomainStart;\n  }\n  if (!Number.isNaN(+newXDomainEnd)) {\n    xDomain[1] = newXDomainEnd;\n  }\n\n  if (focusGeneRegion && !_force) {\n    xDomain[0] = focusGeneRegion[0] - 100000;\n    xDomain[1] = focusGeneRegion[1] + 100000;\n  }\n\n  if (focusVariantRegion && !_force) {\n    xDomain[0] = Math.min(xDomain[0], focusVariantRegion[0] - 100000);\n    xDomain[1] = Math.max(xDomain[1], focusVariantRegion[1] + 100000);\n  }\n\n  viewConfig.views[0].initialXDomain = xDomain;\n\n  return viewConfig;\n};\n\nexport const updateViewConfigFocusGene = (gene, start, end) => (viewConfig) => {\n  const n = viewConfig.views[0].tracks.top.length;\n\n  if (gene) {\n    viewConfig.views[0].tracks.top[n - 1].options.focusGene = gene;\n    viewConfig.views[0].overlays[1].options.extent = [[start, end]];\n  } else {\n    delete viewConfig.views[0].tracks.top[n - 1].options.focusGene;\n    delete viewConfig.views[0].overlays[1].options.extent;\n  }\n\n  return viewConfig;\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { useRecoilValue, useSetRecoilState, useRecoilState } from 'recoil';\nimport { HiGlassComponent } from 'higlass';\nimport { debounce, deepClone, isParentOf, pipe } from '@flekschas/utils';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useChromInfo } from './ChromInfoProvider';\nimport EnhancerRegionsInfo from './EnhancerRegionsInfo';\nimport EnhancerRegionsHelp from './EnhancerRegionsHelp';\nimport EnhancerRegionsSettings from './EnhancerRegionsSettings';\nimport TitleBar from './TitleBar';\n\nimport {\n  enhancerRegionsColorEncodingState,\n  enhancerRegionsHideUnfocusedState,\n  focusGeneEndWithAssembly,\n  focusGeneOptionState,\n  focusGeneStartWithAssembly,\n  focusVariantOptionState,\n  focusVariantPositionWithAssembly,\n  higlassEnhancerRegionsState,\n  useEnhancerRegionsShowInfos,\n  useFocusGene,\n  useFocusVariant,\n  useXDomainEndWithAssembly,\n  useXDomainStartWithAssembly,\n  variantYScaleState,\n  xDomainEndAbsWithAssembly,\n  xDomainStartAbsWithAssembly,\n  variantTracksState,\n} from './state';\n\nimport {\n  updateViewConfigFocusGene,\n  updateViewConfigFocusVariant,\n  updateViewConfigVariantYScale,\n  updateViewConfigXDomain,\n  updateViewConfigVariantTracks,\n} from './view-config';\n\nimport { DEFAULT_VIEW_CONFIG_ENHANCER } from './constants';\n\nimport 'higlass/dist/hglib.css';\n\nimport './EnhancerRegions.css';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  fullWidthHeight: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  higlassContainer: {\n    position: 'relative',\n    minHeight: '100%',\n    overflow: 'hidden',\n  },\n  panZoomTip: {\n    position: 'absolute',\n    zIndex: 11,\n    top: 0,\n    left: 0,\n    right: 0,\n    padding: '0 2px',\n    fontSize: '0.8rem',\n    lineHeight: '1.5rem',\n    background: theme.palette.grey['100'],\n    textAlign: 'center',\n    boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1)',\n    opacity: 1,\n    animation: '0.75s ease 3s 1 running forwards fadeout',\n    '-webkit-touch-callout': 'none',\n    '-webkit-user-select': 'none',\n    '-khtml-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    transition: '0.25s ease opacity, 0.25s ease transform',\n    '&:hover': {\n      opacity: 0,\n    },\n  },\n  panZoomTipNormal: {\n    color: theme.palette.grey['600'],\n  },\n  panZoomTipNormalHover: {\n    fontWeight: 'bold',\n    color: 'black',\n    background: '#aaa',\n    animation: '0.75s ease 5s 1 running forwards fadeout',\n  },\n  panZoomTipActive: {\n    color: 'white',\n    background: '#dd55a5',\n    animation: '0.75s ease 5s 1 running forwards fadeout',\n  },\n  panZoomTipActiveHover: {\n    fontWeight: 'bold',\n    color: 'white',\n    background: '#cc0078',\n    animation: '0.75s ease 5s 1 running forwards fadeout',\n  },\n}));\n\nconst updateViewConfigFocusStyle = (hideUnfocused) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.focusStyle = hideUnfocused\n    ? 'filtering'\n    : 'highlighting';\n  viewConfig.views[0].tracks.top[4].options.stratification.axisNoGroupColor = !hideUnfocused;\n\n  return viewConfig;\n};\n\nconst updateViewConfigColorEncoding = (coloring) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.opacityEncoding = coloring;\n  return viewConfig;\n};\n\nconst EnhancerRegion = React.memo((props) => {\n  const chromInfo = useChromInfo();\n\n  const [focusGeneOption, setFocusGeneOption] = useRecoilState(\n    focusGeneOptionState\n  );\n\n  const setFocusGene = useFocusGene()[1];\n  const setFocusVariant = useFocusVariant()[1];\n  const setXDomainStart = useXDomainStartWithAssembly(chromInfo)[1];\n  const setXDomainEnd = useXDomainEndWithAssembly(chromInfo)[1];\n  const setFocusVariantOption = useSetRecoilState(focusVariantOptionState);\n  const setHiglass = useSetRecoilState(higlassEnhancerRegionsState);\n\n  const variantTracks = useRecoilValue(variantTracksState);\n  const hideUnfocused = useRecoilValue(enhancerRegionsHideUnfocusedState);\n  const variantYScale = useRecoilValue(variantYScaleState);\n  const colorEncoding = useRecoilValue(enhancerRegionsColorEncodingState);\n  const focusVariantPosition = useRecoilValue(\n    focusVariantPositionWithAssembly(chromInfo)\n  );\n  const xDomainStartAbs = useRecoilValue(\n    xDomainStartAbsWithAssembly(chromInfo)\n  );\n  const xDomainEndAbs = useRecoilValue(xDomainEndAbsWithAssembly(chromInfo));\n  const focusGeneStart = useRecoilValue(focusGeneStartWithAssembly(chromInfo));\n  const focusGeneEnd = useRecoilValue(focusGeneEndWithAssembly(chromInfo));\n\n  const [higlassMouseOver, setHiglassMouseOver] = useState(false);\n  const [higlassFocus, setHiglassFocus] = useState(false);\n  const higlassContainerRef = useRef(null);\n  const higlassEnhancerClickSelection = useRef(null);\n  const higlassMouseDown = useRef(false);\n  const higlassNumMouseOver = useRef(0);\n  const higlassNumFocus = useRef(0);\n  const higlassNumFocusMouseOut = useRef(0);\n\n  const shouldSkipUpdatingXDomain = () => {\n    if (higlassEnhancerClickSelection.current) {\n      higlassEnhancerClickSelection.current = false;\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    higlassNumMouseOver.current += higlassMouseOver;\n  }, [higlassMouseOver]);\n\n  useEffect(() => {\n    higlassNumFocus.current += higlassFocus;\n  }, [higlassFocus]);\n\n  useEffect(() => {\n    if (higlassFocus) higlassNumFocusMouseOut.current += !higlassMouseOver;\n    else higlassNumFocusMouseOut.current = 0;\n  }, [higlassFocus, higlassMouseOver]);\n\n  const viewConfig = useMemo(\n    () =>\n      pipe(\n        updateViewConfigVariantTracks(variantTracks),\n        updateViewConfigFocusGene(\n          focusGeneOption ? focusGeneOption.geneName : null,\n          focusGeneStart,\n          focusGeneEnd\n        ),\n        updateViewConfigFocusVariant(focusVariantPosition, [2, 4]),\n        updateViewConfigFocusStyle(hideUnfocused),\n        updateViewConfigColorEncoding(colorEncoding),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigXDomain(xDomainStartAbs, xDomainEndAbs, {\n          force: shouldSkipUpdatingXDomain,\n        })\n      )(deepClone(DEFAULT_VIEW_CONFIG_ENHANCER)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      variantTracks,\n      focusGeneOption,\n      focusGeneStart,\n      focusGeneEnd,\n      focusVariantPosition,\n      hideUnfocused,\n      colorEncoding,\n      variantYScale,\n    ]\n  );\n\n  const viewConfigHeight = useMemo(\n    () =>\n      viewConfig.views[0].tracks.top.reduce(\n        (height, track) => height + track.height,\n        0\n      ),\n    [viewConfig]\n  );\n\n  const higlassBlockClasses = useMemo(\n    () => (higlassFocus ? 'higlass-block focus' : 'higlass-block'),\n    [higlassFocus]\n  );\n\n  // HiGlass Functions\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      higlassEnhancerClickSelection.current = true;\n      setFocusGeneOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        type: 'gene',\n      });\n    } else if (event.type === 'snp') {\n      setFocusVariant(event.payload.name);\n      higlassEnhancerClickSelection.current = true;\n      setFocusVariantOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        score: event.payload.importance,\n        type: 'variant',\n      });\n    } else if (event.type === 'annotation') {\n      console.log('clicked on annotation', event.payload);\n    }\n  };\n\n  const higlassLocationChangeHandler = (event) => {\n    const [newXDomainStart, newXDomainEnd] = event.xDomain.map((absPos) =>\n      chromInfo.absToChr(absPos).slice(0, 2).join(':')\n    );\n    setXDomainStart(newXDomainStart);\n    setXDomainEnd(newXDomainEnd);\n  };\n  const higlassLocationChangeHandlerDb = debounce(\n    higlassLocationChangeHandler,\n    250\n  );\n\n  const windowMouseDownClearHandler = useCallback((e) => {\n    if (!isParentOf(e.target, higlassContainerRef.current)) {\n      setHiglassFocus(false);\n    }\n    higlassMouseDown.current = false;\n  }, []);\n\n  useEffect(\n    () => {\n      window.addEventListener('mouseup', windowMouseDownClearHandler);\n      window.addEventListener('blur', windowMouseDownClearHandler);\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassMouseDownHandler = useCallback(() => {\n    higlassMouseDown.current = true;\n  }, []);\n\n  const higlassInitHandler = useCallback(\n    (higlassInstance) => {\n      if (higlassInstance !== null) {\n        setHiglass(higlassInstance.api);\n        higlassInstance.api.on('click', higlassClickHandler);\n        higlassInstance.api.on(\n          'location',\n          higlassLocationChangeHandlerDb,\n          'context'\n        );\n        higlassInstance.api\n          .getComponent()\n          .element.addEventListener('mousedown', higlassMouseDownHandler);\n      }\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassFocusHandler = () => {\n    setHiglassFocus(true);\n  };\n\n  const higlassBlurHandler = () => {\n    if (!higlassMouseDown.current) {\n      setHiglassFocus(false);\n    }\n  };\n\n  const higlassContainerMouseEnterHandler = () => {\n    setHiglassMouseOver(true);\n  };\n\n  const higlassContainerMouseLeaveHandler = () => {\n    setHiglassMouseOver(false);\n  };\n\n  // Run on every render\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TitleBar\n        id=\"enhancer-regions\"\n        title=\"Enhancer Regions\"\n        useShowInfo={useEnhancerRegionsShowInfos}\n        Info={EnhancerRegionsInfo}\n        Help={EnhancerRegionsHelp}\n        Settings={EnhancerRegionsSettings}\n      />\n      <div\n        className={`higlass-container ${classes.higlassContainer}`}\n        onMouseEnter={higlassContainerMouseEnterHandler}\n        onMouseLeave={higlassContainerMouseLeaveHandler}\n        ref={higlassContainerRef}\n        style={{ height: `${viewConfigHeight}px` }}\n      >\n        {higlassFocus &&\n          !higlassMouseOver &&\n          higlassNumFocus.current < 2 &&\n          higlassNumFocusMouseOut.current < 1 && (\n            <Typography\n              // Just a hack to trigger a dom rerendering which in turn\n              // triggers the fadeout animation\n              component=\"div\"\n              className={`panZoomTip ${classes.panZoomTip} ${classes.panZoomTipActive}`}\n              noWrap\n            >\n              Click outside to deactivate pan & zoom!\n            </Typography>\n          )}\n        {higlassFocus &&\n          higlassMouseOver &&\n          higlassNumFocus.current < 2 &&\n          higlassNumFocusMouseOut.current < 1 && (\n            <Typography\n              // Just a hack to trigger a dom rerendering which in turn\n              // triggers the fadeout animation\n              component=\"span\"\n              className={`panZoomTip ${classes.panZoomTip} ${classes.panZoomTipActiveHover}`}\n              noWrap\n            >\n              You can now pan & zoom the plot!\n            </Typography>\n          )}\n        {!higlassFocus && higlassMouseOver && higlassNumMouseOver.current < 2 && (\n          <Typography\n            // Just a hack to trigger a dom rerendering which in turn\n            // triggers the fadeout animation\n            component=\"div\"\n            className={`panZoomTip ${classes.panZoomTip} ${classes.panZoomTipNormalHover}`}\n            noWrap\n          >\n            Click to activate pan & zoom!\n          </Typography>\n        )}\n        {!higlassFocus && !higlassMouseOver && higlassNumMouseOver.current < 2 && (\n          <Typography\n            // Just a hack to trigger a dom rerendering which in turn\n            // triggers the fadeout animation\n            component=\"span\"\n            className={`panZoomTip ${classes.panZoomTip} ${classes.panZoomTipNormal}`}\n            noWrap\n          >\n            This plot is interactive!\n          </Typography>\n        )}\n        <div\n          className={higlassBlockClasses}\n          onMouseDown={higlassMouseDownHandler}\n          onFocus={higlassFocusHandler}\n          onBlur={higlassBlurHandler}\n          tabIndex=\"0\"\n        />\n        <HiGlassComponent\n          ref={higlassInitHandler}\n          viewConfig={viewConfig}\n          options={{\n            sizeMode: 'bounded',\n            globalMousePosition: true,\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n\nexport default EnhancerRegion;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { enhancerGenesShowInfoState, focusVariantState } from './state';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  text: {\n    fontSize: '0.8rem',\n  },\n  placeholder: {\n    fontStyle: 'italic',\n    color: theme.palette.grey['600'],\n  },\n}));\n\nconst EnhancerRegionsInfo = React.memo(function EnhancerRegionsInfo() {\n  const showInfo = useRecoilValue(enhancerGenesShowInfoState);\n  const focusVariant = useRecoilValue(focusVariantState);\n\n  const classes = useStyles();\n\n  if (!showInfo) return '';\n\n  return (\n    <div>\n      {focusVariant ? (\n        <Typography className={classes.text}>\n          Enhancer regions overlapping <em>{focusVariant}</em> and its predicted\n          connections to upstream (left) and downstream (right) genes.\n        </Typography>\n      ) : (\n        <Grid\n          container\n          justify=\"center\"\n          alignItems=\"center\"\n          className={classes.placeholder}\n        >\n          <Typography className={classes.text}>\n            Select a variant to see details\n          </Typography>\n        </Grid>\n      )}\n    </div>\n  );\n});\n\nexport default EnhancerRegionsInfo;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst EnhancerRegionsHelp = React.memo(function EnhancerRegionsHelp() {\n  return (\n    <React.Fragment>\n      <Typography>...</Typography>\n    </React.Fragment>\n  );\n});\n\nexport default EnhancerRegionsHelp;\n","import React, { useCallback } from 'react';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useEnhancerGenesCellEncoding, useEnhancerGenesPadding } from './state';\n\nconst useStyles = makeStyles((theme) => ({\n  iconRadio: {\n    padding: theme.spacing(0.5, 0),\n    marginLeft: -theme.spacing(1) / 2,\n    '& .MuiFormControlLabel-label': {\n      lineHeight: 1.2,\n    },\n  },\n  iconRadioActive: {\n    color: 'black',\n  },\n  iconRadioLegend: {\n    margin: theme.spacing(2, 0, 0.25, 0),\n  },\n}));\n\nconst EnhancerGenesSettings = React.memo(function EnhancerGenesSettings() {\n  const [cellEncoding, setCellEncoding] = useEnhancerGenesCellEncoding();\n  const [padding, setPadding] = useEnhancerGenesPadding();\n\n  const changeCellEncoding = useCallback(\n    (value) => () => {\n      setCellEncoding(value);\n    },\n    [setCellEncoding]\n  );\n\n  const changePadding = useCallback(\n    (value) => () => {\n      setPadding(value);\n    },\n    [setPadding]\n  );\n\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Box m={1}>\n        <FormControlLabel\n          control={\n            <Switch checked={padding} onChange={changePadding} name=\"true\" />\n          }\n          label=\"Gene padding\"\n        />\n      </Box>\n      <Box m={1}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\" className={classes.iconRadioLegend}>\n            Gene Cell Encoding\n          </FormLabel>\n          <RadioGroup\n            aria-label=\"cellEncoding\"\n            name=\"cellEncoding\"\n            value={cellEncoding}\n          >\n            <FormControlLabel\n              label=\"Number of predictions\"\n              value=\"number\"\n              className={classes.iconRadio}\n              control={\n                <IconButton size=\"small\" onClick={changeCellEncoding('number')}>\n                  {cellEncoding === 'number' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n            <FormControlLabel\n              label=\"Percentage of samples with predictions\"\n              value=\"percent\"\n              className={classes.iconRadio}\n              control={\n                <IconButton\n                  size=\"small\"\n                  onClick={changeCellEncoding('percent')}\n                >\n                  {cellEncoding === 'percent' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n            <FormControlLabel\n              label=\"Distribution by prediction score\"\n              value=\"distribution\"\n              className={classes.iconRadio}\n              control={\n                <IconButton\n                  size=\"small\"\n                  onClick={changeCellEncoding('distribution')}\n                >\n                  {cellEncoding === 'distribution' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n            <FormControlLabel\n              label=\"Sample array\"\n              value=\"array\"\n              className={classes.iconRadio}\n              control={\n                <IconButton size=\"small\" onClick={changeCellEncoding('array')}>\n                  {cellEncoding === 'array' ? (\n                    <RadioButtonCheckedIcon\n                      className={classes.iconRadioActive}\n                      fontSize=\"inherit\"\n                    />\n                  ) : (\n                    <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                  )}\n                </IconButton>\n              }\n            />\n          </RadioGroup>\n        </FormControl>\n      </Box>\n    </React.Fragment>\n  );\n});\n\nexport default EnhancerGenesSettings;\n","import React, { createContext, useCallback, useState } from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst TooltipContext = createContext();\n\nconst useStyles = makeStyles({\n  root: {\n    position: 'fixed',\n    zIndex: 10,\n    width: 1,\n    height: 1,\n    background: 'black',\n    fontWeight: 'normal',\n    pointerEvents: 'none',\n    '& strong': {\n      fontWeight: 'bold',\n    },\n  },\n});\n\nexport default function TooltipProvider({ children }) {\n  const [localState, setLocalState] = useState({\n    show: false,\n    title: '',\n    x: 0,\n    y: 0,\n    arrow: true,\n    placement: 'bottom',\n    classes: {},\n  });\n\n  const showTooltip = useCallback(\n    (\n      x,\n      y,\n      title,\n      { arrow = false, placement = 'bottom', classes = {} } = {}\n    ) => {\n      if (Number.isNaN(+x) || Number.isNaN(+y) || !title) {\n        // Close tooltip\n        setLocalState({\n          show: false,\n          title: '',\n          x: 0,\n          y: 0,\n          arrow: true,\n          placement: 'bottom',\n          classes: {},\n        });\n      } else {\n        // Open tooltip\n        setLocalState({\n          show: true,\n          x,\n          y,\n          title,\n          arrow,\n          placement,\n          classes,\n        });\n      }\n    },\n    []\n  );\n\n  const classes = useStyles();\n\n  return (\n    <TooltipContext.Provider value={showTooltip}>\n      {children}\n      <Tooltip\n        open={localState.show}\n        title={localState.title}\n        arrow={localState.arrow}\n        placement={localState.placement}\n        classes={localState.classes}\n      >\n        <div\n          className={classes.root}\n          style={{\n            top: localState.y,\n            left: localState.x,\n          }}\n        />\n      </Tooltip>\n    </TooltipContext.Provider>\n  );\n}\n\nfunction useShowTooltip() {\n  const context = React.useContext(TooltipContext);\n  if (context === undefined) {\n    throw new Error('useShowTooltip must be used within a TooltipContext');\n  }\n  return context;\n}\n\nexport { useShowTooltip };\n","import { identity } from '@flekschas/utils';\nimport { axisRight, scaleLinear, scaleLog, select } from 'd3';\nimport React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useRecoilValue, useRecoilState } from 'recoil';\nimport TinyQueue from 'tinyqueue';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useChromInfo } from './ChromInfoProvider';\nimport { useShowTooltip } from './TooltipProvider';\n\nimport {\n  enhancerGenesCellEncodingState,\n  enhancerGenesPaddingState,\n  enhancerGenesSvgState,\n  focusVariantPositionWithAssembly,\n  focusVariantRelPositionState,\n  focusVariantState,\n  focusVariantStrPositionState,\n} from './state';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_STRATIFICATION,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n} from './constants';\nimport { scaleBand } from './utils';\nimport usePrevious from './use-previous';\n\nimport './EnhancerGenesPlot.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.grey['300'],\n    minHeight: '6rem',\n  },\n  plot: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  plotSvg: {\n    width: '100%',\n    height: '100%',\n  },\n}));\n\nconst useTooltipStyles = DEFAULT_COLOR_MAP_LIGHT.map((color, i) =>\n  makeStyles((theme) => ({\n    arrow: {\n      color,\n    },\n    tooltip: {\n      color: DEFAULT_COLOR_MAP_DARK[i],\n      backgroundColor: color,\n      boxShadow: '0 0 3px 0 rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(0, 0, 0, 0.05)',\n      '& .value': {\n        color: 'white',\n        background: DEFAULT_COLOR_MAP_DARK[i],\n        padding: '0 0.25em',\n        borderRadius: '0.25rem',\n      },\n    },\n  }))\n);\n\nconst {\n  server,\n  tilesetUid: uuid,\n} = DEFAULT_VIEW_CONFIG_ENHANCER.views[0].tracks.top[3];\n\nconst fetchTile = async (tileId) => {\n  const response = await fetch(`${server}/tiles/?d=${tileId}`);\n  return response.json();\n};\n\nconst categories = {};\nconst samples = {};\n\nDEFAULT_STRATIFICATION.groups.forEach((group, i) => {\n  categories[group.label] = {\n    name: group.label,\n    size: group.categories.length,\n    index: i,\n  };\n\n  group.categories.forEach((category, j) => {\n    samples[category] = {\n      category: categories[group.label],\n      index: j,\n    };\n  });\n});\n\nconst getTileWidth = (tilesetInfo) =>\n  tilesetInfo.max_width / 2 ** tilesetInfo.max_zoom;\n\nconst filterByPosition = (tile, position) =>\n  tile.filter((entry) => position >= entry.xStart && position <= entry.xEnd);\n\n// From https://observablehq.com/@d3/beeswarm\nconst dodge = (data, radius, yScale) => {\n  const radius2 = radius ** 2;\n  const circles = data\n    .map((d) => ({ y: yScale(d.value), data: d }))\n    .sort((a, b) => a.y - b.y);\n  const epsilon = 1e-3;\n  let head = null;\n  let tail = null;\n\n  // Returns true if circle ⟨x,y⟩ intersects with any circle in the queue.\n  function intersects(x, y) {\n    let a = head;\n    while (a) {\n      if (radius2 - epsilon > (a.x - x) ** 2 + (a.y - y) ** 2) {\n        return true;\n      }\n      a = a.next;\n    }\n    return false;\n  }\n\n  // Place each circle sequentially.\n  for (const b of circles) {\n    // Remove circles from the queue that can’t intersect the new circle b.\n    while (head && head.y < b.y - radius2) head = head.next;\n\n    // Choose the minimum non-intersecting tangent.\n    if (intersects((b.x = 0), b.y)) {\n      let a = head;\n      b.x = Infinity;\n      do {\n        const x = a.x + Math.sqrt(radius2 - (a.y - b.y) ** 2);\n        if (x < b.x && !intersects(x, b.y)) b.x = x;\n        a = a.next;\n      } while (a);\n    }\n\n    // Add b to the queue.\n    b.next = null;\n    // eslint-disable-next-line no-multi-assign\n    if (head === null) head = tail = b;\n    // eslint-disable-next-line no-multi-assign\n    else tail = tail.next = b;\n  }\n\n  return circles;\n};\n\nconst plotEnhancerGeneConnections = (\n  node,\n  width,\n  data,\n  {\n    geneCellEncoding = 'distribution',\n    prevGeneCellEncoding,\n    genePadding = false,\n    showTooltip = identity,\n    tooltipClasses = [],\n    position = '',\n    variant = null,\n  } = {}\n) => {\n  if (!width || !data) return;\n\n  const svg = select(node);\n\n  const paddingTop = 60;\n  const paddingBottom = 60;\n  const circleRadius = 1;\n  const circlePadding = 0.5;\n  const rowHeight = 36;\n  const geneLabelPadding = 3;\n  const beeswarmPadding = 1;\n  const distanceBarWidth = 6;\n  const distPaddingRange = [0, 20];\n  const height =\n    Object.values(categories).length * rowHeight + paddingTop + paddingBottom;\n\n  svg.attr('viewbox', `0 0 ${width} ${height}`).attr('height', height);\n\n  const maxCatgorySize = Object.values(data.categoryAggregation).reduce(\n    (max, cat) => Math.max(max, cat.numEnhancers),\n    0\n  );\n  const categorySizeScale = scaleLog()\n    .domain([1, maxCatgorySize])\n    .range([2, rowHeight])\n    .clamp(true);\n\n  const percentScale = scaleLinear()\n    .domain([0, 1])\n    .range([0, rowHeight])\n    .clamp(true);\n\n  const circleYScalePre = scaleLinear()\n    .domain([0, 1])\n    .range([1, 10])\n    .clamp(true);\n\n  const circleYScalePost = scaleLog()\n    .domain([1, 10])\n    .range([\n      rowHeight - circleRadius - beeswarmPadding,\n      circleRadius + beeswarmPadding,\n    ]);\n\n  const circleYScale = (v) => circleYScalePost(circleYScalePre(v));\n\n  // ---------------------------------------------------------------------------\n  // Gene setup\n  const geneContainerWidth = width / 2 - rowHeight;\n  const maxGenes = Math.floor(geneContainerWidth / rowHeight);\n\n  const genesUpstream = data.genesUpstreamByDist.slice(0, maxGenes).reverse();\n  const genesDownstream = data.genesDownstreamByDist.slice(0, maxGenes);\n\n  const [minRelDistance, maxRelDistance] = [\n    ...genesUpstream,\n    ...genesDownstream,\n  ].reduce(\n    (minMax, gene) => [\n      Math.min(minMax[0], gene.relDistance),\n      Math.max(minMax[1], gene.relDistance),\n    ],\n    [Infinity, 0]\n  );\n\n  const paddingScale = scaleLinear()\n    .domain([minRelDistance, maxRelDistance])\n    .range(distPaddingRange);\n\n  const genesUpstreamPadding = genePadding\n    ? genesUpstream.map((d) => Math.round(paddingScale(d.relDistance)))\n    : [];\n  const genesUpstreamScale = scaleBand()\n    .domain(genesUpstream.map((d) => d.name))\n    .range([0, width / 2 - rowHeight / 2])\n    .paddingInner(genesUpstreamPadding);\n\n  const genesDownstreamPadding = genePadding\n    ? genesDownstream.map((d) => Math.round(paddingScale(d.relDistance)))\n    : [];\n  const genesDownstreamScale = scaleBand()\n    .domain(genesDownstream.map((d) => d.name))\n    .range([0, width / 2 - rowHeight / 2])\n    .paddingInner(genesDownstreamPadding)\n    .paddingInnerZeroBased(true);\n\n  const bandwidth = Math.min(\n    genesUpstreamScale.bandwidth(),\n    genesDownstreamScale.bandwidth()\n  );\n\n  genesUpstreamScale.fixedBandwidth(bandwidth);\n  genesDownstreamScale.fixedBandwidth(bandwidth);\n\n  const genesUpstreamLeftPad = Math.max(\n    0,\n    genesUpstreamScale.rangeSize() - genesUpstreamScale.totalWidth()\n  );\n\n  const minVisibleAbsDist = Math.min(\n    genesUpstream.reduce(\n      (minDist, gene) => Math.min(minDist, gene.absDistance),\n      Infinity\n    ),\n    genesDownstream.reduce(\n      (minDist, gene) => Math.min(minDist, gene.absDistance),\n      Infinity\n    )\n  );\n\n  const maxVisibleAbsDist = Math.max(\n    genesUpstream.reduce(\n      (maxDist, gene) => Math.max(maxDist, gene.absDistance),\n      0\n    ),\n    genesDownstream.reduce(\n      (maxDist, gene) => Math.max(maxDist, gene.absDistance),\n      0\n    )\n  );\n\n  const distanceHeightScale = scaleLinear()\n    .domain([minVisibleAbsDist, maxVisibleAbsDist])\n    .range([2, paddingBottom]);\n\n  const plotBeeswarm = (selection, { isRightAligned = false } = {}) => {\n    selection\n      .attr(\n        'fill',\n        (d, i) => DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n      )\n      .selectAll('circle')\n      .data((d) => dodge(d, circleRadius * 2 + circlePadding, circleYScale))\n      .join('circle')\n      .attr('cx', (d) =>\n        isRightAligned\n          ? genesUpstreamScale.bandwidth() - (d.x + 2 * beeswarmPadding)\n          : d.x + circleRadius + beeswarmPadding\n      )\n      .attr('cy', (d) => d.y)\n      .attr('r', circleRadius);\n  };\n\n  const getArrayNumCols = (genes) => {\n    const maxSize = Object.values(genes[0].samplesByCategory).reduce(\n      (max, cat) => Math.max(max, cat.size),\n      0\n    );\n    return Math.ceil(Math.sqrt((maxSize * bandwidth) / rowHeight));\n  };\n\n  const plotArray = (\n    selection,\n    numCols,\n    {\n      instanceCache = {},\n      onMouseEnter = identity,\n      onMouseLeave = identity,\n      tooltipTitleGetter = null,\n    } = {}\n  ) => {\n    const cellSize = bandwidth / numCols;\n\n    const indexToX = (index) => (index % numCols) * cellSize;\n    const indexToY = (index) => Math.floor(index / numCols) * cellSize;\n\n    instanceCache.current = selection\n      .attr(\n        'fill',\n        (d, i) => DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n      )\n      .selectAll('rect')\n      .data(\n        (d) => d,\n        (d) => `${d.gene}|${d.sample}`\n      )\n      .join('rect')\n      .attr('x', (d) => indexToX(samples[d.sample].index))\n      .attr('y', (d) => indexToY(samples[d.sample].index))\n      .attr('width', cellSize)\n      .attr('height', cellSize)\n      .on('mouseenter', (event, d) => {\n        const bBox = event.target.getBoundingClientRect();\n        const title =\n          (tooltipTitleGetter && tooltipTitleGetter(d)) || d.value.toFixed(3);\n        showTooltip(bBox.x + bBox.width / 2, bBox.y, title, {\n          arrow: true,\n          placement: 'top',\n          classes:\n            tooltipClasses[\n              categories[d.sampleCategory].index % tooltipClasses.length\n            ],\n        });\n        onMouseEnter(d);\n      })\n      .on('mouseleave', (d) => {\n        showTooltip();\n        onMouseLeave(d);\n      });\n  };\n\n  const arrayTooltipTitleGetter = (d) => (\n    <React.Fragment>\n      The enhancer overlapping <strong>{position}</strong>\n      {variant ? ` (${variant})` : ''} is predicted to regulate{' '}\n      <strong>{d.gene}</strong> in sample <strong>{d.sample}</strong> with a\n      score of <strong className=\"value\">{d.value.toFixed(3)}</strong>.\n    </React.Fragment>\n  );\n\n  const geneArrayInstances = {\n    upstream: { current: null },\n    downstream: { current: null },\n  };\n\n  const geneArrayInstanceMouseEnterHandler = (dHovering) => {\n    const opacity = (d) => (d.sample === dHovering.sample ? 1 : 0.2);\n    geneArrayInstances.upstream.current.attr('opacity', opacity);\n    geneArrayInstances.downstream.current.attr('opacity', opacity);\n  };\n\n  const geneArrayInstanceMouseLeaveHandler = () => {\n    geneArrayInstances.upstream.current.attr('opacity', 1);\n    geneArrayInstances.downstream.current.attr('opacity', 1);\n  };\n\n  const plotBox = (\n    selection,\n    valueScale,\n    valueGetter,\n    {\n      cellWidth = rowHeight,\n      fillColor = DEFAULT_COLOR_MAP_LIGHT,\n      textColor = DEFAULT_COLOR_MAP_DARK,\n      showText = true,\n      showZero = true,\n      showTooltip: showTooltipOnMouseEnter = false,\n      tooltipTitleGetter = null,\n    } = {}\n  ) => {\n    const bg = selection\n      .selectAll('.bg')\n      .data((d) => [d])\n      .join('rect')\n      .attr('class', 'bg')\n      .attr('fill', (d) => fillColor[d.row % fillColor.length])\n      .attr('x', (d) => (cellWidth - valueScale(valueGetter(d))) / 2)\n      .attr('y', (d) => (rowHeight - valueScale(valueGetter(d))) / 2)\n      .attr('width', (d) => valueScale(valueGetter(d)))\n      .attr('height', (d) => valueScale(valueGetter(d)))\n      .attr('opacity', (d) => +(valueGetter(d) > 0));\n\n    if (showTooltipOnMouseEnter) {\n      bg.on('mouseenter', (event, d) => {\n        const bBox = event.target.getBoundingClientRect();\n        const title =\n          (tooltipTitleGetter && tooltipTitleGetter(d)) || valueGetter(d);\n        showTooltip(bBox.x + bBox.width / 2, bBox.y, title, {\n          arrow: true,\n          placement: 'top',\n          classes: tooltipClasses[d.row % tooltipClasses.length],\n        });\n      }).on('mouseleave', () => {\n        showTooltip();\n      });\n    } else {\n      bg.on('mouseenter', null).on('mouseleave', null);\n    }\n\n    if (showText) {\n      selection\n        .selectAll('.box-text')\n        .data((d) => [d])\n        .join('text')\n        .attr('class', 'box-text')\n        .attr('fill', (d) => textColor[d.row % textColor.length])\n        .attr('style', 'font-size: 12px; font-weight: bold;')\n        .attr('dominant-baseline', 'middle')\n        .attr('text-anchor', 'middle')\n        .attr('x', cellWidth / 2)\n        .attr('y', rowHeight / 2)\n        .attr('opacity', (d) => +(valueGetter(d) > 0 || showZero))\n        .text((d) => valueGetter(d));\n    }\n  };\n\n  const boxTooltipTitleGetter = (d) => (\n    <React.Fragment>\n      <strong className=\"value\">{d.length}</strong> out of {d.size}{' '}\n      <em>{Object.values(categories)[d.row].name}</em> samples have predicted\n      enhancer activity.\n    </React.Fragment>\n  );\n\n  // ---------------------------------------------------------------------------\n  // Category summary\n  const enhancerG = svg\n    .select('#enhancers')\n    .attr('transform', `translate(${width / 2 - rowHeight / 2}, 0)`);\n\n  // Draw background\n  const enhancerGCellG = enhancerG\n    .selectAll('.enhancer-gene-aggregate')\n    .data(\n      Object.values(data.categoryAggregation).map((d, i) => {\n        // Little hacky but necessary unfortunately\n        d.row = i;\n        return d;\n      }),\n      (d) => d.category.name\n    )\n    .join('g')\n    .attr('class', 'enhancer-gene-aggregate')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  plotBox(enhancerGCellG, categorySizeScale, (d) => d.numEnhancers);\n\n  // Draw border\n  svg\n    .select('#enhancers')\n    .selectAll('.enhancer-box-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'enhancer-box-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', rowHeight)\n    .attr('height', rowHeight);\n\n  // ---------------------------------------------------------------------------\n  // Draw upstream genes\n\n  const genesUpstreamG = svg\n    .select('#genes-upstream')\n    .selectAll('.gene-upstream')\n    .data(genesUpstream, (d) => d.name)\n    .join('g')\n    .attr('class', 'gene-upstream')\n    .attr(\n      'transform',\n      (d) =>\n        `translate(${genesUpstreamLeftPad + genesUpstreamScale(d.name)}, 0)`\n    );\n\n  // Draw labels\n  const geneLabelX = genesUpstreamScale.bandwidth() / 2;\n  const geneLabelY = paddingTop - geneLabelPadding;\n  genesUpstreamG\n    // the join is needed to avoid appending more and more text elements on\n    // subsequent calls of this function, which would happen if we used\n    // `append()` instead.\n    .selectAll('.gene-upstream-label')\n    .data((d) => [d])\n    .join('text')\n    .attr('class', 'gene-label gene-upstream-label')\n    .attr('style', 'font-size: 9px;')\n    .attr('transform', `translate(${geneLabelX},${geneLabelY}) rotate(-90)`)\n    .attr('fill', 'black')\n    .attr('dominant-baseline', 'middle')\n    .text((d) => d.name);\n\n  // Draw cell\n  const genesUpstreamGCellG = genesUpstreamG\n    .selectAll('.gene-upstream-cell')\n    .data(\n      (d) =>\n        Object.values(d.samplesByCategory).map((item, i) => {\n          // Little hacky but necessary unfortunately\n          item.row = i;\n          return item;\n        }),\n      (d) => d.name\n    )\n    .join('g')\n    .attr('class', 'gene-upstream-cell')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  if (geneCellEncoding !== prevGeneCellEncoding) {\n    genesUpstreamGCellG.selectAll('*').remove();\n  }\n\n  switch (geneCellEncoding) {\n    case 'distribution':\n      plotBeeswarm(genesUpstreamGCellG, { isRightAligned: true });\n      break;\n\n    case 'array':\n      plotArray(genesUpstreamGCellG, getArrayNumCols(genesUpstream), {\n        tooltipTitleGetter: arrayTooltipTitleGetter,\n        instanceCache: geneArrayInstances.upstream,\n        onMouseEnter: geneArrayInstanceMouseEnterHandler,\n        onMouseLeave: geneArrayInstanceMouseLeaveHandler,\n      });\n      break;\n\n    case 'number':\n    case 'percent':\n    default: {\n      const valueScale =\n        geneCellEncoding === 'percent' ? percentScale : categorySizeScale;\n\n      const valueGetter =\n        geneCellEncoding === 'percent'\n          ? (d) => d.length / d.size\n          : (d) => d.length;\n\n      plotBox(genesUpstreamGCellG, valueScale, valueGetter, {\n        showText: false,\n        cellWidth: genesUpstreamScale.bandwidth(),\n        fillColor: DEFAULT_COLOR_MAP,\n        showTooltip: true,\n        tooltipTitleGetter: boxTooltipTitleGetter,\n      });\n\n      break;\n    }\n  }\n\n  // Draw border\n  genesUpstreamG\n    .selectAll('.gene-upstream-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'gene-upstream-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', genesUpstreamScale.bandwidth())\n    .attr('height', rowHeight);\n\n  // Draw distance bars\n  genesUpstreamG\n    // Same reason we're using a join here as for the text labels above\n    .selectAll('.gene-upstream-distance-bar')\n    .data((d) => [d])\n    .join('rect')\n    .attr('class', 'gene-upstream-distance-bar')\n    .attr('fill', '#bbbbbb')\n    .attr('x', genesUpstreamScale.bandwidth() / 2 - distanceBarWidth / 2)\n    .attr('y', Object.values(categories).length * rowHeight + paddingTop)\n    .attr('width', distanceBarWidth)\n    .attr('height', (d) => distanceHeightScale(d.absDistance));\n\n  // ---------------------------------------------------------------------------\n  // Draw downstream genes\n  svg\n    .select('#genes-downstream')\n    .attr('transform', `translate(${width / 2 + rowHeight / 2}, 0)`);\n\n  const genesDownstreamG = svg\n    .select('#genes-downstream')\n    .selectAll('.gene-downstream')\n    .data(genesDownstream, (d) => d.name)\n    .join('g')\n    .attr('class', 'gene-downstream')\n    .attr('transform', (d) => `translate(${genesDownstreamScale(d.name)}, 0)`);\n\n  // Draw labels\n  genesDownstreamG\n    .selectAll('.gene-downstream-label')\n    .data((d) => [d])\n    .join('text')\n    .attr('class', 'gene-label gene-downstream-label')\n    .attr('style', 'font-size: 9px;')\n    .attr('transform', `translate(${geneLabelX},${geneLabelY}) rotate(-90)`)\n    .attr('fill', 'black')\n    .attr('dominant-baseline', 'middle')\n    .text((d) => d.name);\n\n  // Draw cell\n  const genesDownstreamGCellG = genesDownstreamG\n    .selectAll('.gene-downstream-cell')\n    .data(\n      (d) =>\n        Object.values(d.samplesByCategory).map((item, i) => {\n          // Little hacky but necessary unfortunately\n          item.row = i;\n          return item;\n        }),\n      (d) => d.name\n    )\n    .join('g')\n    .attr('class', 'gene-downstream-cell')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  if (geneCellEncoding !== prevGeneCellEncoding) {\n    genesDownstreamGCellG.selectAll('*').remove();\n  }\n\n  switch (geneCellEncoding) {\n    case 'distribution':\n      plotBeeswarm(genesDownstreamGCellG);\n      break;\n\n    case 'array':\n      plotArray(genesDownstreamGCellG, getArrayNumCols(genesDownstream), {\n        tooltipTitleGetter: arrayTooltipTitleGetter,\n        instanceCache: geneArrayInstances.downstream,\n        onMouseEnter: geneArrayInstanceMouseEnterHandler,\n        onMouseLeave: geneArrayInstanceMouseLeaveHandler,\n      });\n      break;\n\n    case 'number':\n    case 'percent':\n    default: {\n      const valueScale =\n        geneCellEncoding === 'percent' ? percentScale : categorySizeScale;\n\n      const valueGetter =\n        geneCellEncoding === 'percent'\n          ? (d) => d.length / d.size\n          : (d) => d.length;\n\n      plotBox(genesDownstreamGCellG, valueScale, valueGetter, {\n        showText: false,\n        cellWidth: genesDownstreamScale.bandwidth(),\n        fillColor: DEFAULT_COLOR_MAP,\n        showTooltip: true,\n        tooltipTitleGetter: boxTooltipTitleGetter,\n      });\n\n      break;\n    }\n  }\n\n  // Draw border\n  genesDownstreamG\n    .selectAll('.gene-downstream-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'gene-downstream-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', genesDownstreamScale.bandwidth())\n    .attr('height', rowHeight);\n\n  // Draw distance bars\n  genesDownstreamG\n    // Same reason we're using a join here as for the text labels above\n    .selectAll('.gene-downstream-distance-bar')\n    .data((d) => [d])\n    .join('rect')\n    .attr('class', 'gene-downstream-distance-bar')\n    .attr('fill', '#bbbbbb')\n    .attr('x', genesDownstreamScale.bandwidth() / 2 - distanceBarWidth / 2)\n    .attr('y', Object.values(categories).length * rowHeight + paddingTop)\n    .attr('width', distanceBarWidth)\n    .attr('height', (d) => distanceHeightScale(d.absDistance));\n\n  // ---------------------------------------------------------------------------\n  // Draw gene distance axis\n\n  const distRange = Math.ceil((maxVisibleAbsDist - minVisibleAbsDist) / 1e5);\n  const distStep = Math.ceil(distRange / 4);\n  const tickValues =\n    distRange <= 1\n      ? [minVisibleAbsDist, maxVisibleAbsDist]\n      : Array(4)\n          .fill()\n          .map(\n            (v, i) =>\n              Math.ceil(minVisibleAbsDist / 1e5) * 1e5 + i * (distStep * 1e5)\n          );\n\n  svg\n    .select('#gene-distance-axis')\n    .attr(\n      'transform',\n      `translate(0, ${\n        Object.values(categories).length * rowHeight + paddingTop\n      })`\n    )\n    .call(\n      axisRight(distanceHeightScale)\n        .tickSize(width)\n        .tickFormat(function geneDistanceAxisTickFormat(d) {\n          const s = (d / 1e5).toFixed(0);\n          return this.parentNode.nextSibling\n            ? s\n            : `${s} kbps distance to enhancer`;\n        })\n        .tickValues(tickValues)\n    )\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .selectAll('.tick line')\n        .attr('stroke', '#bbbbbb')\n        .attr('stroke-width', 0.5)\n        .attr('stroke-dasharray', '4,4')\n    )\n    .call((g) =>\n      g\n        .selectAll('.tick text')\n        .attr('fill', '#bbbbbb')\n        .attr('x', width / 2)\n        .attr('dy', 1)\n        .attr('text-anchor', 'middle')\n        .attr('dominant-baseline', 'hanging')\n    );\n};\n\nconst EnhancerGenesPlot = React.memo(function EnhancerGenesPlot() {\n  const chromInfo = useChromInfo();\n  const showTooltip = useShowTooltip();\n\n  const geneCellEncoding = useRecoilValue(enhancerGenesCellEncodingState);\n  const position = useRecoilValue(focusVariantPositionWithAssembly(chromInfo));\n  const relPosition = useRecoilValue(focusVariantRelPositionState);\n  const strPosition = useRecoilValue(focusVariantStrPositionState);\n  const genePadding = useRecoilValue(enhancerGenesPaddingState);\n  const variant = useRecoilValue(focusVariantState);\n\n  const [plotEl, setPlotEl] = useRecoilState(enhancerGenesSvgState);\n\n  const [tile, setTile] = useState(null);\n  const [isLoadingTile, setIsLoadingTile] = useState(null);\n  const [tilesetInfo, setTilesetInfo] = useState(null);\n  const [width, setWidth] = useState(null);\n  const prevWidth = usePrevious(width);\n  const prevGeneCellEncoding = usePrevious(geneCellEncoding);\n\n  useEffect(() => {\n    let active = true;\n\n    if (position === null || tilesetInfo === null) return undefined;\n\n    const tileWidth = getTileWidth(tilesetInfo);\n    const tileXPos = Math.floor(position / tileWidth);\n    const tileId = `${uuid}.${tilesetInfo.max_zoom}.${tileXPos}`;\n\n    setIsLoadingTile(true);\n    fetchTile(tileId).then((_tile) => {\n      if (active) {\n        setIsLoadingTile(false);\n        setTile(filterByPosition(_tile[tileId], position));\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [position, tilesetInfo]);\n\n  const plotElRef = useCallback(\n    (node) => {\n      setPlotEl(node);\n    },\n    [setPlotEl]\n  );\n\n  // Derived State\n  const isInit = useMemo(() => !!tilesetInfo, [tilesetInfo]);\n\n  const data = useMemo(\n    () => {\n      if (!tile) return undefined;\n\n      let maxScore = 0;\n      let minAbsDistance = Infinity;\n      let maxAbsDistance = 0;\n      const genes = {};\n      const categoryAggregation = {};\n\n      Object.entries(categories).forEach(([name, category]) => {\n        categoryAggregation[name] = {\n          category,\n          numEnhancers: 0,\n        };\n      });\n\n      const distComparator = (a, b) => a.absDistance - b.absDistance;\n      const genesUpstreamByDist = new TinyQueue([], distComparator);\n      const genesDownstreamByDist = new TinyQueue([], distComparator);\n\n      tile.forEach((entry) => {\n        const geneName = entry.fields[6];\n\n        if (!genes[geneName]) {\n          const relGenePos = +entry.fields[4];\n          const distance = relGenePos - relPosition;\n          const isDownstream = distance > 0;\n          const absDistance = Math.abs(distance);\n          genes[geneName] = {\n            name: geneName,\n            position: relGenePos,\n            absDistance,\n            isDownstream,\n            samplesByCategory: {},\n          };\n\n          Object.values(categories).forEach(({ name, size }) => {\n            genes[geneName].samplesByCategory[name] = [];\n            genes[geneName].samplesByCategory[name].size = size;\n          });\n\n          minAbsDistance = Math.min(minAbsDistance, absDistance);\n          maxAbsDistance = Math.max(maxAbsDistance, absDistance);\n\n          if (isDownstream) genesDownstreamByDist.push(genes[geneName]);\n          else genesUpstreamByDist.push(genes[geneName]);\n        }\n\n        const sample = entry.fields[10];\n        genes[geneName].samplesByCategory[samples[sample].category.name].push({\n          gene: geneName,\n          sample,\n          sampleCategory: samples[sample].category.name,\n          value: entry.importance,\n        });\n        maxScore = Math.max(maxScore, entry.importance);\n        categoryAggregation[samples[sample].category.name].numEnhancers++;\n      });\n\n      const genesDownstreamByDistArr = [];\n      while (genesDownstreamByDist.length)\n        genesDownstreamByDistArr.push(genesDownstreamByDist.pop());\n\n      const genesUpstreamByDistArr = [];\n      while (genesUpstreamByDist.length)\n        genesUpstreamByDistArr.push(genesUpstreamByDist.pop());\n\n      genesDownstreamByDistArr.forEach((gene, i) => {\n        const prevGene = genesDownstreamByDistArr[i - 1];\n        gene.relDistance =\n          gene.position - ((prevGene && prevGene.position) || relPosition);\n      });\n\n      genesUpstreamByDistArr.forEach((gene, i) => {\n        const prevGene = genesDownstreamByDistArr[i - 1];\n        gene.relDistance =\n          ((prevGene && prevGene.position) || relPosition) - gene.position;\n      });\n\n      return {\n        minAbsDistance,\n        maxAbsDistance,\n        maxScore,\n        genes,\n        genesDownstreamByDist: genesDownstreamByDistArr,\n        genesUpstreamByDist: genesUpstreamByDistArr,\n        categoryAggregation,\n      };\n    },\n    // `relPosition` is excluded on purpose because `tile` is already updated\n    // when `relPosition` updates\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tile]\n  );\n\n  // Initialization\n  useEffect(\n    () => {\n      (async () => {\n        const response = await fetch(`${server}/tileset_info/?d=${uuid}`);\n        const results = await response.json();\n\n        if (results[uuid]) setTilesetInfo(results[uuid]);\n      })();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  // Rendering\n  const classes = useStyles();\n\n  useLayoutEffect(\n    () => {\n      if (!plotEl) return undefined;\n\n      const measure = () =>\n        window.requestAnimationFrame(() => {\n          const currWidth = plotEl.getBoundingClientRect().width;\n          if (currWidth !== prevWidth) setWidth(currWidth);\n        });\n\n      measure();\n\n      window.addEventListener('resize', measure);\n      window.addEventListener('orientationchange', measure);\n\n      return () => {\n        window.removeEventListener('resize', measure);\n        window.removeEventListener('orientationchange', measure);\n      };\n    },\n    // `prevWidth` is ommitted on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [plotEl]\n  );\n\n  const tooltipClasses = [];\n  for (let i = 0; i < useTooltipStyles.length; i++) {\n    tooltipClasses.push(useTooltipStyles[i]());\n  }\n\n  useEffect(\n    () => {\n      plotEnhancerGeneConnections(plotEl, width, data, {\n        geneCellEncoding,\n        prevGeneCellEncoding,\n        genePadding,\n        showTooltip,\n        classes,\n        tooltipClasses,\n        position: strPosition,\n        variant,\n      });\n    },\n    // `prevGeneCellEncoding` is ommitted on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [plotEl, width, data, geneCellEncoding, genePadding, showTooltip]\n  );\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      {isInit && !isLoadingTile ? (\n        <Grid item className={classes.plot}>\n          <svg ref={plotElRef} className={classes.plotSvg}>\n            <g id=\"enhancers\"></g>\n            <g id=\"gene-distance-axis\"></g>\n            <g id=\"genes-upstream\"></g>\n            <g id=\"genes-downstream\"></g>\n          </svg>\n        </Grid>\n      ) : (\n        <CircularProgress color=\"inherit\" />\n      )}\n    </Grid>\n  );\n});\n\nexport default EnhancerGenesPlot;\n","import React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport EnhancerGenesInfo from './EnhancerGenesInfo';\nimport EnhancerGenesHelp from './EnhancerGenesHelp';\nimport EnhancerGenesSettings from './EnhancerGenesSettings';\nimport EnhancerGenesPlot from './EnhancerGenesPlot';\nimport TitleBar from './TitleBar';\n\nimport { focusVariantState, useEnhancerGenesShowInfos } from './state';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // marginLeft: '-8px',\n  },\n  plot: {\n    minHeight: '6rem',\n  },\n}));\n\nconst EnhancerGenes = React.memo(function EnhancerGenes() {\n  const focusVariant = useRecoilValue(focusVariantState);\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TitleBar\n        id=\"enhancer-gene\"\n        title=\"Enhancer-Gene Connections\"\n        popoverDirection=\"top\"\n        useShowInfo={useEnhancerGenesShowInfos}\n        Info={EnhancerGenesInfo}\n        Help={EnhancerGenesHelp}\n        Settings={EnhancerGenesSettings}\n      />\n      <div className={classes.plot}>\n        {focusVariant && <EnhancerGenesPlot />}\n      </div>\n    </div>\n  );\n});\n\nexport default EnhancerGenes;\n","import React, { useMemo } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useChromInfo } from './ChromInfoProvider';\n\nimport {\n  dnaAccessLabelShowInfoState,\n  focusVariantPositionWithAssembly,\n  xDomainEndAbsWithAssembly,\n  xDomainStartAbsWithAssembly,\n} from './state';\nimport { toFixed } from './utils';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  text: {\n    fontSize: '0.8rem',\n  },\n}));\n\nconst DnaAccessibilityInfo = React.memo(function DnaAccessibilityInfo() {\n  const chromInfo = useChromInfo();\n\n  const showInfo = useRecoilValue(dnaAccessLabelShowInfoState);\n  const focusVariantPosition = useRecoilValue(\n    focusVariantPositionWithAssembly(chromInfo)\n  );\n  const xDomainStartAbs = useRecoilValue(\n    xDomainStartAbsWithAssembly(chromInfo)\n  );\n  const xDomainEndAbs = useRecoilValue(xDomainEndAbsWithAssembly(chromInfo));\n\n  const classes = useStyles();\n\n  const dnaAccessibilityRegionSize = useMemo(\n    () =>\n      focusVariantPosition\n        ? 5\n        : Math.round((xDomainEndAbs - xDomainStartAbs) / 1000),\n    [focusVariantPosition, xDomainStartAbs, xDomainEndAbs]\n  );\n\n  if (!showInfo) return '';\n\n  return (\n    <div className={classes.root}>\n      <span>├</span>\n      <Typography align=\"center\" className={classes.text} noWrap>\n        {toFixed(dnaAccessibilityRegionSize, 1)}{' '}\n        <abbr title=\"kilo base pairs\">kbp</abbr>\n      </Typography>\n      <span>┤</span>\n    </div>\n  );\n});\n\nexport default DnaAccessibilityInfo;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst DnaAccessibilityHelp = React.memo(function DnaAccessibilityHelp() {\n  return (\n    <Typography>\n      This panel visualizes the DNA accessibility of all 131 samples. Each track\n      is individually normalized. Mouse over a track to see the underlying\n      value. To focus on a specific locus specify a focus variant.\n    </Typography>\n  );\n});\n\nexport default DnaAccessibilityHelp;\n","import React, { useCallback } from 'react';\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useDnaAccessLabelStyle } from './state';\n\nconst useStyles = makeStyles((theme) => ({\n  iconRadioLegend: {\n    margin: theme.spacing(2, 0, 0.25, 0),\n  },\n}));\n\nconst DnaAccessibilitySettings = React.memo(\n  function DnaAccessibilitySettings() {\n    const [\n      dnaAccessLabelStyle,\n      setDnaAccessLabelStyle,\n    ] = useDnaAccessLabelStyle();\n\n    const changeDnaAccessLabelStyle = useCallback(\n      (value) => () => {\n        setDnaAccessLabelStyle(value);\n      },\n      [setDnaAccessLabelStyle]\n    );\n\n    // On every render\n    const classes = useStyles();\n\n    return (\n      <React.Fragment>\n        <Box m={1}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\" className={classes.iconRadioLegend}>\n              Labels\n            </FormLabel>\n            <RadioGroup\n              aria-label=\"dnaAccessLabelStyle\"\n              name=\"dnaAccessLabelStyle\"\n              value={dnaAccessLabelStyle}\n            >\n              <FormControlLabel\n                label=\"Indicator\"\n                value=\"indicator\"\n                className={classes.iconRadio}\n                control={\n                  <IconButton\n                    size=\"small\"\n                    onClick={changeDnaAccessLabelStyle('indicator')}\n                  >\n                    {dnaAccessLabelStyle === 'indicator' ? (\n                      <RadioButtonCheckedIcon\n                        className={classes.iconRadioActive}\n                        fontSize=\"inherit\"\n                      />\n                    ) : (\n                      <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                    )}\n                  </IconButton>\n                }\n              />\n              <FormControlLabel\n                label=\"Text\"\n                value=\"text\"\n                className={classes.iconRadio}\n                control={\n                  <IconButton\n                    size=\"small\"\n                    onClick={changeDnaAccessLabelStyle('text')}\n                  >\n                    {dnaAccessLabelStyle === 'text' ? (\n                      <RadioButtonCheckedIcon\n                        className={classes.iconRadioActive}\n                        fontSize=\"inherit\"\n                      />\n                    ) : (\n                      <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                    )}\n                  </IconButton>\n                }\n              />\n              <FormControlLabel\n                label=\"Hidden\"\n                value=\"hidden\"\n                className={classes.iconRadio}\n                control={\n                  <IconButton\n                    size=\"small\"\n                    onClick={changeDnaAccessLabelStyle('hidden')}\n                  >\n                    {dnaAccessLabelStyle === 'hidden' ? (\n                      <RadioButtonCheckedIcon\n                        className={classes.iconRadioActive}\n                        fontSize=\"inherit\"\n                      />\n                    ) : (\n                      <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                    )}\n                  </IconButton>\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n      </React.Fragment>\n    );\n  }\n);\n\nexport default DnaAccessibilitySettings;\n","import React, { useCallback, useMemo } from 'react';\nimport { useRecoilValue, useSetRecoilState } from 'recoil';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deepClone, pipe } from '@flekschas/utils';\nimport { HiGlassComponent } from 'higlass';\n\nimport { useChromInfo } from './ChromInfoProvider';\nimport DnaAccessibilityInfo from './DnaAccessibilityInfo';\nimport DnaAccessibilityHelp from './DnaAccessibilityHelp';\nimport DnaAccessibilitySettings from './DnaAccessibilitySettings';\n\nimport TitleBar from './TitleBar';\n\nimport {\n  dnaAccessLabelStyleState,\n  focusGeneEndWithAssembly,\n  focusGeneStartWithAssembly,\n  focusVariantPositionWithAssembly,\n  higlassDnaAccessState,\n  sampleSelectionState,\n  useDnaAccessShowInfos,\n  variantTracksState,\n  variantYScaleState,\n  xDomainEndAbsWithAssembly,\n  xDomainStartAbsWithAssembly,\n} from './state';\nimport {\n  DEFAULT_DNA_ACCESSIBILITY_ROW_SELECTION,\n  DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY,\n} from './constants';\nimport useDebounce from './use-debounce';\n\nimport {\n  updateViewConfigFocusVariant,\n  updateViewConfigVariantYScale,\n  updateViewConfigXDomain,\n  updateViewConfigVariantTracks,\n} from './view-config';\n\nimport 'higlass/dist/hglib.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nconst updateViewConfigDnaAccessLabels = (labels) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[3].options.showRowLabels =\n    !labels || labels === 'hidden' ? false : labels;\n  return viewConfig;\n};\n\nconst getDnaAccessXDomain = (\n  focusVariantPosition,\n  focusGeneStart,\n  focusGeneEnd,\n  xDomainStartAbs,\n  xDomainEndAbs\n) => {\n  const enhancerViewRange = xDomainEndAbs - xDomainStartAbs;\n  const enhancerViewCenter = xDomainStartAbs + enhancerViewRange / 2;\n\n  if (focusVariantPosition) {\n    if (\n      enhancerViewRange < 5000 &&\n      Math.abs(enhancerViewCenter - focusVariantPosition) < 1000\n    ) {\n      return [xDomainStartAbs, xDomainEndAbs];\n    }\n    return [focusVariantPosition - 2500, focusVariantPosition + 2500];\n  }\n\n  if (focusGeneStart && focusGeneEnd) {\n    const midPos = focusGeneStart + (focusGeneEnd - focusGeneStart) / 2;\n\n    if (\n      enhancerViewRange < 5000 &&\n      enhancerViewCenter > focusGeneStart &&\n      enhancerViewCenter < focusGeneEnd\n    ) {\n      return [xDomainStartAbs, xDomainEndAbs];\n    }\n\n    return [midPos - 2500, midPos + 2500];\n  }\n\n  return [xDomainStartAbs, xDomainEndAbs];\n};\n\nconst updateViewConfigDnaAccessXDomain = (...args) =>\n  updateViewConfigXDomain(...getDnaAccessXDomain(...args), { force: true });\n\nconst updateViewConfigRowSelection = (selection) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[3].options.rowSelections = DEFAULT_DNA_ACCESSIBILITY_ROW_SELECTION.filter(\n    (rowId, i) => selection[i]\n  );\n  return viewConfig;\n};\n\nconst DnaAccessibility = React.memo(function DnaAccessibility() {\n  const chromInfo = useChromInfo();\n\n  const setHiglassDnaAccess = useSetRecoilState(higlassDnaAccessState);\n\n  const sampleSelection = useRecoilValue(sampleSelectionState);\n  const labelStyle = useRecoilValue(dnaAccessLabelStyleState);\n  const variantYScale = useRecoilValue(variantYScaleState);\n  const variantTracks = useRecoilValue(variantTracksState);\n  const focusGeneStart = useRecoilValue(focusGeneStartWithAssembly(chromInfo));\n  const focusGeneEnd = useRecoilValue(focusGeneEndWithAssembly(chromInfo));\n  const focusVariantPosition = useRecoilValue(\n    focusVariantPositionWithAssembly(chromInfo)\n  );\n\n  const xDomainStartAbsDb = useDebounce(\n    useRecoilValue(xDomainStartAbsWithAssembly(chromInfo)),\n    500\n  );\n  const xDomainEndAbsDb = useDebounce(\n    useRecoilValue(xDomainEndAbsWithAssembly(chromInfo)),\n    500\n  );\n\n  const higlassInitHandler = useCallback(\n    (higlassInstance) => {\n      if (higlassInstance !== null) {\n        setHiglassDnaAccess(higlassInstance.api);\n      }\n    },\n    [setHiglassDnaAccess]\n  );\n\n  const viewConfig = useMemo(\n    () =>\n      pipe(\n        updateViewConfigVariantTracks(variantTracks),\n        updateViewConfigFocusVariant(focusVariantPosition, [2]),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigDnaAccessLabels(labelStyle),\n        updateViewConfigDnaAccessXDomain(\n          focusVariantPosition,\n          focusGeneStart,\n          focusGeneEnd,\n          xDomainStartAbsDb,\n          xDomainEndAbsDb\n        ),\n        updateViewConfigRowSelection(sampleSelection)\n      )(deepClone(DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      variantTracks,\n      focusVariantPosition,\n      focusGeneStart,\n      focusGeneEnd,\n      xDomainStartAbsDb,\n      xDomainEndAbsDb,\n      variantYScale,\n      labelStyle,\n      chromInfo,\n      sampleSelection,\n    ]\n  );\n\n  // On every render\n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"column\" className={classes.root}>\n      <TitleBar\n        id=\"dna-accessibility\"\n        title=\"DNA Accessibility\"\n        useShowInfo={useDnaAccessShowInfos}\n        Info={DnaAccessibilityInfo}\n        Help={DnaAccessibilityHelp}\n        Settings={DnaAccessibilitySettings}\n      />\n      <Grid item container direction=\"column\" className={classes.grow}>\n        <HiGlassComponent\n          ref={higlassInitHandler}\n          viewConfig={viewConfig}\n          options={{\n            sizeMode: 'scroll',\n            pixelPreciseMarginPadding: true,\n            containerPaddingX: 0,\n            containerPaddingY: 0,\n            viewMarginTop: 0,\n            viewMarginBottom: 0,\n            viewMarginLeft: 0,\n            viewMarginRight: 0,\n            viewPaddingTop: 0,\n            viewPaddingBottom: 0,\n            viewPaddingLeft: 0,\n            viewPaddingRight: 16,\n            globalMousePosition: true,\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n});\n\nexport default DnaAccessibility;\n","import React, { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AppSidebar from './AppSidebar';\nimport AppTopbar from './AppTopbar';\nimport EnhancerRegions from './EnhancerRegions';\nimport EnhancerGenes from './EnhancerGenes';\nimport DnaAccessibility from './DnaAccessibility';\nimport ModalProvider from './ModalProvider';\nimport TooltipProvider from './TooltipProvider';\n\nimport {\n  focusGeneOptionState,\n  focusVariantOptionState,\n  useFocusGene,\n  useFocusVariant,\n} from './state';\n\nimport { GENE_SEARCH_URL, VARIANT_SEARCH_URL } from './constants';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  separator: {\n    zIndex: 1,\n    margin: `-${theme.spacing(1)}px 0`,\n    width: 1,\n    background: theme.palette.grey['300'],\n  },\n  enhancerWrapper: {\n    position: 'relative',\n    flexGrow: 1,\n    margin: '-8px 0 -8px -8px',\n  },\n  enhancer: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflowY: 'auto',\n    '&> div': {\n      minHeight: '100%',\n    },\n  },\n  enhancerRegions: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  enhancerGenes: {\n    position: 'relative',\n  },\n  dnaAccessibility: {\n    position: 'relative',\n    width: '20rem',\n    margin: '-8px -8px -8px 0',\n  },\n}));\n\nconst AppMain = React.memo(function AppMain() {\n  const [focusGene, setFocusGene] = useFocusGene();\n  const [focusVariant, setFocusVariant] = useFocusVariant();\n\n  const [focusGeneOption, setFocusGeneOption] = useRecoilState(\n    focusGeneOptionState\n  );\n  const [focusVariantOption, setFocusVariantOption] = useRecoilState(\n    focusVariantOptionState\n  );\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n  };\n\n  const focusGeneChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusGene(newValue.geneName);\n      setFocusGeneOption(newValue);\n    } else {\n      clearFocusGene();\n    }\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    setFocusVariantOption(null);\n  };\n\n  const focusVariantChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusVariant(newValue.geneName);\n      setFocusVariantOption(newValue);\n    } else {\n      clearFocusVariant();\n    }\n  };\n\n  const classes = useStyles();\n\n  // Initialize focus gene/variant options\n  useEffect(\n    () => {\n      (async () => {\n        if (focusGene && !focusGeneOption) {\n          const r = await fetch(`${GENE_SEARCH_URL}&ac=${focusGene}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'gene';\n          focusGeneChangeHandler(results[0]);\n        }\n        if (focusVariant && !focusVariantOption) {\n          const r = await fetch(`${VARIANT_SEARCH_URL}&ac=${focusVariant}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'variant';\n          focusVariantChangeHandler(results[0]);\n        }\n      })();\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return (\n    <div className={classes.root}>\n      <ModalProvider>\n        <CssBaseline />\n        <AppTopbar />\n        <AppSidebar />\n        <TooltipProvider>\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.content}\n            wrap=\"nowrap\"\n          >\n            <div className={classes.toolbar} />\n            <Grid container className={classes.grow} wrap=\"nowrap\">\n              <div className={classes.enhancerWrapper}>\n                <div className={classes.enhancer}>\n                  <Grid container direction=\"column\">\n                    <Grid item className={classes.enhancerRegions}>\n                      <EnhancerRegions />\n                    </Grid>\n                    <Grid item className={classes.enhancerGenes}>\n                      <EnhancerGenes />\n                    </Grid>\n                  </Grid>\n                </div>\n              </div>\n              <div className={classes.separator} />\n              <div className={classes.dnaAccessibility}>\n                <DnaAccessibility />\n              </div>\n            </Grid>\n          </Grid>\n        </TooltipProvider>\n      </ModalProvider>\n    </div>\n  );\n});\n\nexport default AppMain;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { RecoilRoot } from 'recoil';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport ChromInfoProvider from './ChromInfoProvider';\nimport AppMain from './AppMain';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n    secondary: {\n      main: '#000',\n    },\n  },\n});\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const Main = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(AppMain);\n\n  return (\n    <div className=\"App\">\n      <RecoilRoot>\n        <ThemeProvider theme={theme}>\n          <ChromInfoProvider chromInfo={chromInfo}>\n            <Main />\n          </ChromInfoProvider>\n        </ThemeProvider>\n      </RecoilRoot>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createAnnotationOverlayMetaTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  // Services\n  const { pubSub } = HGC.services;\n\n  class AnnotationOverlayMetaTrack {\n    constructor(context, options) {\n      const { definition, getTrackObject, onNewTilesLoaded: animate } = context;\n\n      this.animate = animate;\n      this.options = options;\n\n      this.overlaysTrack = getTrackObject(definition.overlaysTrack);\n\n      if (!this.overlaysTrack) {\n        console.warn(\n          `Overlays track (uid: ${definition.overlaysTrack}) not found`\n        );\n        return;\n      }\n\n      this.annotationTrackIds = new Set();\n      this.annotationTracks = definition.options.annotationTracks\n        .map((uid) => {\n          const track = getTrackObject(uid);\n\n          if (!track) {\n            console.warn(`Child track (uid: ${uid}) not found`);\n          } else {\n            this.annotationTrackIds.add(track.uuid);\n          }\n\n          return track;\n        })\n        .filter((track) => track);\n\n      this.annotationDrawnHandlerBound = this.annotationDrawnHandler.bind(this);\n      this.tilesDrawnEndHandlerBound = this.tilesDrawnEndHandler.bind(this);\n\n      this.drawnAnnotations = new Map();\n      this.tracksDrawingTiles = new Set();\n\n      this.pubSubs = [];\n\n      // Augment annotation tracks\n      this.annotationTracks.forEach((track) => {\n        track.subscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n        track.subscribe('tilesDrawn', this.tilesDrawnEndHandlerBound);\n      });\n    }\n\n    /**\n     * Handles annotation drawn events\n     *\n     * @param  {String}  event.uid  UID of the view that triggered the event.\n     * @param  {Array}  event.viewPos  View position (i.e., [x, y, width, height])\n     *   of the drawn annotation on the screen.\n     * @param  {Array}  event.dataPos  Data position of the drawn annotation. For\n     *   example base pairs (Hi-C), or pixels (gigapixel images), or lng-lat\n     *   (geo json).\n     */\n    annotationDrawnHandler({ xStartAbs, xEndAbs, data }) {\n      this.drawnAnnotations.set(data.uid, [xStartAbs, xEndAbs]);\n    }\n\n    /**\n     * Remove this track.\n     */\n    remove() {\n      this.pubSubs.forEach(pubSub.unsubscribe);\n      this.pubSubs = undefined;\n      this.annotationTracks.forEach((track) => {\n        track.unsubscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n    }\n\n    tilesDrawnEndHandler({ uuid }) {\n      if (!this.annotationTrackIds.has(uuid)) return;\n\n      this.tracksDrawingTiles.add(uuid);\n\n      if (!(this.tracksDrawingTiles.size % this.annotationTracks.length)) {\n        this.updateOverlays();\n      }\n    }\n\n    updateOverlays() {\n      this.overlaysTrack.options.extent = Array.from(\n        this.drawnAnnotations.values()\n      );\n      this.overlaysTrack.draw();\n      this.tracksDrawingTiles.clear();\n    }\n  }\n\n  return new AnnotationOverlayMetaTrack(...args);\n}\n\ncreateAnnotationOverlayMetaTrack.config = {\n  type: 'annotation-overlay',\n  availableOptions: ['annotationTracks'],\n  defaultOptions: {\n    annotationTracks: [],\n  },\n};\n\nexport default createAnnotationOverlayMetaTrack;\n","import {\n  identity,\n  maxNan,\n  maxVector,\n  meanNan,\n  minNan,\n  sumNan,\n} from '@flekschas/utils';\nimport { line } from 'd3';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_COLOR_MAP_DARK,\n} from './constants';\n\nconst FLOAT_BYTES = Float32Array.BYTES_PER_ELEMENT;\n\nconst VS = `precision mediump float;\n\n  attribute vec2 aPrevPosition;\n  attribute vec2 aCurrPosition;\n  attribute vec2 aNextPosition;\n  attribute float aOffsetSign;\n  attribute float aColorIndex;\n\n  uniform sampler2D uAreaColorTex;\n  uniform float uAreaColorTexRes;\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n\n  uniform vec4 uLineColor;\n  uniform vec4 uNaNColor;\n  uniform float uWidth;\n  uniform int uMiter;\n\n  varying vec4 vColor;\n\n  void main(void)\n  {\n    mat3 model = projectionMatrix * translationMatrix;\n\n    if (aColorIndex <= -0.5) {\n      // Render line\n      vColor = vec4(uLineColor.rgb, 1.0);\n\n      vec4 prevGlPos = vec4((model * vec3(aPrevPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 currGlPos = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 nextGlPos = vec4((model * vec3(aNextPosition, 1.0)).xy, 0.0, 1.0);\n\n      // Calculate the direction\n      vec2 dir = vec2(0.0);\n\n      if (currGlPos == prevGlPos) {\n        // start point uses (next - current)\n        dir = normalize(nextGlPos.xy - currGlPos.xy);\n      }\n      else if (currGlPos == nextGlPos) {\n        // end point uses (current - previous)\n        dir = normalize(currGlPos.xy - prevGlPos.xy);\n      }\n      else {\n        // somewhere in middle, needs a join:\n        // get directions from (C - B) and (B - A)\n        vec2 dirA = normalize((currGlPos.xy - prevGlPos.xy));\n        if (uMiter == 1) {\n          vec2 dirB = normalize((nextGlPos.xy - currGlPos.xy));\n          // now compute the miter join normal and length\n          vec2 tangent = normalize(dirA + dirB);\n          vec2 perp = vec2(-dirA.y, dirA.x);\n          vec2 miter = vec2(-tangent.y, tangent.x);\n          dir = tangent;\n        } else {\n          dir = dirA;\n        }\n      }\n\n      float width = (projectionMatrix * vec3(uWidth, 0.0, 0.0)).x / 2.0;\n\n      vec2 normal = vec2(-dir.y, dir.x) * width;\n      // normal.x /= aspectRatio;\n      vec4 offset = vec4(normal * aOffsetSign, 0.0, 0.0);\n      gl_Position = currGlPos + offset;\n    } else {\n      // Render area\n      float colorRowIndex = aColorIndex / uAreaColorTexRes;\n\n      vec2 colorTexIndex = vec2(\n        (aColorIndex / uAreaColorTexRes) - colorRowIndex,\n        colorRowIndex / uAreaColorTexRes\n      );\n      vColor = texture2D(uAreaColorTex, colorTexIndex);\n\n      gl_Position = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n    }\n  }\n`;\n\nconst FS = `precision mediump float;\n\n  varying vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`;\n\nconst TILE_SIZE = 256;\n\nconst COLORMAP_GRAYS = Array(127)\n  .fill()\n  .map((x, i) => {\n    const gray = (1 - i / 127) * 0.5 + 0.5;\n    return [gray, gray, gray, 1];\n  });\n\nconst getMax = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxValue, tile) => Math.max(maxValue, tile.tileData.maxNonZero),\n    -Infinity\n  );\n\nconst getNumRows = (fetchedTiles) =>\n  Object.values(fetchedTiles)[0].tileData.coarseShape[0];\n\nconst getRowMaxs = (fetchedTiles) =>\n  maxVector(\n    Object.values(fetchedTiles).map((tile) => tile.tileData.maxValueByRow)\n  );\n\nconst scaleGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getNumPointsPerRow = (numRows, positions, markArea) =>\n  positions.length / numRows / 4 / (1 + markArea) - 2;\n\nconst createRidgePlotTrack = function createRidgePlotTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { format } = HGC.libraries.d3Format;\n  const { scaleLinear } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const createColorTexture = (colors) => {\n    const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n    const rgba = new Float32Array(colorTexRes ** 2 * 4);\n    colors.forEach((color, i) => {\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4] = color[0]; // r\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 1] = color[1]; // g\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 2] = color[2]; // b\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 3] = color[3]; // a\n    });\n\n    return [\n      PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes),\n      colorTexRes,\n    ];\n  };\n\n  class RidgePlotTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n      this.updateOptions();\n\n      this.pLoading = new PIXI.Graphics();\n      this.pLoading.position.x = 0;\n      this.pLoading.position.y = 0;\n      this.pMasked.addChild(this.pLoading);\n\n      this.loadIndicator = new PIXI.Text('Loading data...', {\n        fontSize: this.labelSize || 10,\n        fill: 0x808080,\n      });\n      this.pLoading.addChild(this.loadIndicator);\n    }\n\n    initTile(tile) {\n      this.coarsifyTileValues(tile);\n    }\n\n    destroyTile() {}\n\n    binsPerTile() {\n      return this.tilesetInfo.bins_per_dimension || TILE_SIZE;\n    }\n\n    /**\n     * From HeatmapTiledPixiTrack\n     */\n    getTilePosAndDimensions(zoomLevel, tilePos, binsPerTileIn) {\n      const binsPerTile = binsPerTileIn || this.binsPerTile();\n\n      if (this.tilesetInfo.resolutions) {\n        const sortedResolutions = this.tilesetInfo.resolutions\n          .map((x) => +x)\n          .sort((a, b) => b - a);\n\n        const chosenResolution = sortedResolutions[zoomLevel];\n\n        const tileWidth = chosenResolution * binsPerTile;\n        const tileHeight = tileWidth;\n\n        const tileX = chosenResolution * binsPerTile * tilePos[0];\n        const tileY = chosenResolution * binsPerTile * tilePos[1];\n\n        return {\n          tileX,\n          tileY,\n          tileWidth,\n          tileHeight,\n        };\n      }\n\n      const xTilePos = tilePos[0];\n      const yTilePos = tilePos[1];\n\n      const minX = this.tilesetInfo.min_pos[0];\n      const minY = this.options.reverseYAxis\n        ? -this.tilesetInfo.max_pos[1]\n        : this.tilesetInfo.min_pos[1];\n\n      const tileWidth = this.tilesetInfo.max_width / 2 ** zoomLevel;\n      const tileHeight = this.tilesetInfo.max_width / 2 ** zoomLevel;\n\n      const tileX = minX + xTilePos * tileWidth;\n      const tileY = minY + yTilePos * tileHeight;\n\n      return {\n        tileX,\n        tileY,\n        tileWidth,\n        tileHeight,\n      };\n    }\n\n    updateOptions() {\n      this.selectRowsAggregationMode =\n        this.options.selectRowsAggregationMode || 'mean';\n\n      switch (this.selectRowsAggregationMode) {\n        case 'max':\n          this.selectRowsAggregationFn = maxNan;\n          break;\n\n        case 'min':\n          this.selectRowsAggregationFn = minNan;\n          break;\n\n        case 'sum':\n          this.selectRowsAggregationFn = sumNan;\n          break;\n\n        case 'mean':\n        default:\n          this.selectRowsAggregationFn = meanNan;\n          break;\n      }\n\n      this.markArea = !!this.options.markArea;\n\n      this.markAreaColor = 'grays';\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      [this.markColorTex, this.markColorTexRes] = createColorTexture([\n        ...COLORMAP_GRAYS,\n      ]);\n\n      this.markNumColors = COLORMAP_GRAYS.length;\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      // Number of line segments\n      const oldMarkResolution = this.markResolution;\n      this.markResolution = Math.max(\n        1,\n        Math.min(TILE_SIZE, this.options.markResolution || TILE_SIZE / 4)\n      );\n      // Given 100 (rows) x 256 (tile size). At a resolution of 1 we need:\n      // 100 x (256 / 4) x 4 = 25,600 vertices\n\n      const oldRowHeight = this.rowHeight;\n      this.rowHeight = Number.isNaN(+this.options.rowHeight)\n        ? 'auto'\n        : +this.options.rowHeight;\n\n      const oldRowPadding = this.rowPadding;\n      this.rowPadding =\n        this.rowHeight === 'auto' ? 0 : this.options.rowPadding || 0;\n\n      const oldRowNormalization = this.rowNormalization;\n      this.rowNormalization = this.options.rowNormalization || false;\n\n      const oldRowSelections = this.rowSelections;\n      this.rowSelections =\n        this.options.rowSelections || this.rowSelections || [];\n\n      const oldShowRowLabels = this.showRowLabels;\n      this.showRowLabels = this.options.showRowLabels;\n\n      if (\n        oldMarkResolution !== this.markResolution ||\n        oldRowSelections !== this.rowSelections\n      ) {\n        this.updateTiles();\n        this.updateRowLabels();\n        this.drawLabel();\n      }\n\n      if (\n        oldRowHeight !== this.rowHeight ||\n        oldRowPadding !== this.rowPadding ||\n        oldRowNormalization !== this.rowNormalization\n      ) {\n        this.updateScales();\n      }\n\n      if (oldShowRowLabels !== this.showRowLabels) {\n        this.updateRowLabels();\n        this.drawLabel();\n      }\n\n      this.rowLabelAlign = this.options.rowLabelAlign || 'left';\n      this.rowLabelSize = this.options.rowLabelSize || 12;\n\n      this.rowCategories = this.options.rowCategories || {};\n      this.rowIdToCategory = (id) => id.substring(0, id.length - 14);\n      this.rowIdToCategory = this.options.rowIdToCategory\n        ? (id) =>\n            id[this.options.rowIdToCategory.fn](\n              ...this.options.rowIdToCategory.args\n            )\n        : identity;\n    }\n\n    removeRowLabels() {\n      while (this.pAxis.children.length) {\n        this.pAxis.removeChildAt(0);\n      }\n      if (this.rowLabels) {\n        this.rowLabels.forEach((rowLabel) => {\n          rowLabel.destroy();\n        });\n        this.rowLabels = undefined;\n      }\n    }\n\n    updateRowLabels() {\n      if (!this.tilesetInfo || !this.tilesetInfo.row_infos) return;\n\n      const labels = this.rowSelections.length\n        ? this.rowSelections.map((rowIndex) =>\n            this.tilesetInfo.row_infos[rowIndex] === undefined\n              ? '?'\n              : this.rowIdToCategory(this.tilesetInfo.row_infos[rowIndex].id)\n          )\n        : this.tilesetInfo.row_infos.map(({ id }) => this.rowIdToCategory(id));\n\n      this.removeRowLabels();\n\n      if (this.showRowLabels === 'indicator') {\n        this.rowLabels = labels.map((label) => {\n          const indicator = new PIXI.Sprite(PIXI.Texture.WHITE);\n          indicator.width = this.rowLabelSize / 2;\n          indicator.height = this.rowLabelSize;\n          indicator.tint = this.rowCategories[label]\n            ? HGC.utils.colorToHex(\n                this.rowCategories[label].axisLabelColor ||\n                  DEFAULT_COLOR_MAP[\n                    this.rowCategories[label].index % DEFAULT_COLOR_MAP.length\n                  ]\n              )\n            : 0x808080;\n          return indicator;\n        });\n      } else if (this.showRowLabels) {\n        this.rowLabels = labels.map(\n          (label) =>\n            new PIXI.Text(label, {\n              fontSize: this.rowLabelSize,\n              align: this.rowLabelAlign === 'right' ? 'right' : 'left',\n              fill: this.rowCategories[label]\n                ? HGC.utils.colorToHex(\n                    this.rowCategories[label].axisLabelColor ||\n                      DEFAULT_COLOR_MAP_DARK[\n                        this.rowCategories[label].index %\n                          DEFAULT_COLOR_MAP_DARK.length\n                      ]\n                  )\n                : 0x808080,\n            })\n        );\n      }\n    }\n\n    drawLabel() {\n      if (!this.showRowLabels) {\n        if (this.rowLabels) {\n          while (this.pAxis.children.length) {\n            this.pAxis.removeChildAt(0);\n          }\n        }\n        return;\n      }\n      if (this.showRowLabels && !this.rowLabels) this.updateRowLabels();\n      if (!this.rowLabels) return;\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const [, rowStepHeight] = this.getRowHeight();\n      const rowStepYCenter = rowStepHeight / 2;\n\n      this.rowLabels.forEach((label, i) => {\n        label.x = xLabelOffset;\n        label.y = yStart - this.rowPadding + rowStepYCenter;\n        label.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        label.anchor.y = 0.5;\n\n        yStart += rowStepHeight;\n\n        this.pAxis.addChild(label);\n      });\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    coarsifyTileValues(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const [numRows] = tile.tileData.shape;\n      const binSizePx = Math.floor(TILE_SIZE / this.markResolution);\n      const binSizeBp = tileWidth / this.markResolution;\n      const binSizeBpHalf = binSizeBp / 2;\n\n      // Determine bin boundaries\n      tile.tileData.binXPos = Array(this.markResolution).fill();\n      for (let i = 0; i <= this.markResolution; i++) {\n        tile.tileData.binXPos[i] = tileX + binSizeBp * i + binSizeBpHalf;\n      }\n\n      // 1. Coarsify the dense matrix according to `this.markResolution`\n      tile.tileData.valuesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      tile.tileData.maxValueByRow = Array(numRows).fill(-Infinity);\n\n      for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < TILE_SIZE; j += binSizePx) {\n          const meanValue = meanNan(\n            tile.tileData.dense.subarray(\n              i * TILE_SIZE + j,\n              i * TILE_SIZE + j + binSizePx\n            )\n          );\n          tile.tileData.valuesByRow[i].push(meanValue);\n          tile.tileData.maxValueByRow[i] =\n            meanValue > tile.tileData.maxValueByRow[i]\n              ? meanValue\n              : tile.tileData.maxValueByRow[i];\n        }\n      }\n\n      // 2. Sort rows\n      if (this.rowSelections.length) {\n        tile.tileData.valuesByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.valuesByRow[rowIdx])\n          .filter(identity);\n        tile.tileData.maxValueByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.maxValueByRow[rowIdx])\n          .filter(identity);\n      }\n\n      // 3. Set out shape\n      tile.tileData.coarseShape = [\n        tile.tileData.valuesByRow.length,\n        this.markResolution,\n      ];\n    }\n\n    updateTiles() {\n      Object.values(this.fetchedTiles).forEach(\n        this.coarsifyTileValues.bind(this)\n      );\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const numRows = getNumRows(fetchedTiles);\n\n      const [rowHeight] = this.getRowHeight();\n\n      const actualTrackHeight = this.getTrackHeight(numRows, rowHeight);\n\n      const globalMax = getMax(this.fetchedTiles);\n\n      this.valueScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([rowHeight, 0]);\n      this.colorIndexScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([0, this.markNumColors])\n        .clamp(true);\n\n      if (this.rowNormalization) {\n        const rowMaxs = getRowMaxs(this.fetchedTiles);\n        this.rowValueScales = {};\n        this.rowColorIndexScales = {};\n        for (let i = 0; i < numRows; i++) {\n          this.rowValueScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([rowHeight, 0]);\n          this.rowColorIndexScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([0, this.markNumColors])\n            .clamp(true);\n        }\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.rowValueScales[row](value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.rowColorIndexScales[row](value);\n      } else {\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.valueScale(value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.colorIndexScale(value);\n      }\n\n      this.rowScale = scaleLinear()\n        .domain([0, numRows])\n        .range([0, actualTrackHeight + this.rowPadding]);\n    }\n\n    tilesToData(tiles, { markArea, maxRows = Infinity, rowHeight } = {}) {\n      if (!tiles.length) return [];\n\n      const numRows = Math.min(maxRows, getNumRows(tiles));\n\n      const positionsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const colorIndicesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const offsetSignsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n\n      tiles.forEach((tile) => {\n        tile.tileData.valuesByRow.forEach((values, i) => {\n          if (i >= maxRows) return;\n          values.forEach((value, j) => {\n            const x = this._xScale(tile.tileData.binXPos[j]);\n            const yStart = this.rowScale(i);\n            const y = yStart + this.valueScaleByRow(value, i);\n            // We're duplicating the point as for every point on the line we\n            // need two x,y vertices to render triangles.\n            positionsByRow[i].push(x, y, x, y);\n            colorIndicesByRow[i].push(-1, -1); // -1 refers to the line color\n            offsetSignsByRow[i].push(1, -1);\n\n            if (markArea) {\n              positionsByRow[i].push(x, y, x, yStart + rowHeight);\n              colorIndicesByRow[i].push(this.colorIndexScaleByRow(value, i), 0);\n              offsetSignsByRow[i].push(0, 0);\n            }\n          });\n        });\n      });\n\n      const size2d = markArea ? 8 : 4;\n      const size1d = markArea ? 4 : 2;\n\n      // For each row, duplicate the first and last point\n      for (let i = 0; i < numRows; i++) {\n        // Add first point pair to the beginning of the array\n        positionsByRow[i].unshift(...positionsByRow[i].slice(0, size2d));\n\n        // The very first duplicated point positions do not matter as\n        // we offset the buffer reading. Subsequent dupliations need to be\n        // taken into account though.\n        if (i > 0) {\n          colorIndicesByRow[i].unshift(\n            ...colorIndicesByRow[i].slice(0, size1d)\n          );\n          offsetSignsByRow[i].unshift(...offsetSignsByRow[i].slice(0, size1d));\n        }\n\n        // Add last point pair to the end of the array\n        positionsByRow[i].push(...positionsByRow[i].slice(-size2d));\n        colorIndicesByRow[i].push(...colorIndicesByRow[i].slice(-size1d));\n        offsetSignsByRow[i].push(...offsetSignsByRow[i].slice(-size1d));\n      }\n\n      return [\n        new Float32Array(positionsByRow.flatMap(identity)),\n        new Float32Array(colorIndicesByRow.flatMap(identity)),\n        new Float32Array(offsetSignsByRow.flatMap(identity)),\n      ];\n    }\n\n    toLineIndices(numRows, numPointsPerRow, markArea) {\n      const verticesPerLine = markArea ? 12 : 6;\n      const verticesPerPoint = markArea ? 4 : 2;\n      const indices = new Uint32Array(\n        (numPointsPerRow - 1) * numRows * verticesPerLine\n      );\n      let k = 0;\n\n      if (markArea) {\n        // Draw a line and area\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p1c = p1a + 2;\n            const p1d = p1a + 3;\n            const p2a = p1a + 4;\n            const p2b = p1a + 5;\n            const p2c = p1a + 6;\n            const p2d = p1a + 7;\n\n            const indexOffset = k * verticesPerLine;\n            // Area\n            indices[indexOffset] = p1c;\n            indices[indexOffset + 1] = p1d;\n            indices[indexOffset + 2] = p2c;\n            indices[indexOffset + 3] = p2c;\n            indices[indexOffset + 4] = p1d;\n            indices[indexOffset + 5] = p2d;\n            // Line\n            indices[indexOffset + 6] = p1a;\n            indices[indexOffset + 7] = p1b;\n            indices[indexOffset + 8] = p2a;\n            indices[indexOffset + 9] = p2a;\n            indices[indexOffset + 10] = p1b;\n            indices[indexOffset + 11] = p2b;\n\n            k++;\n          }\n        }\n      } else {\n        // Just draw a line\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p2a = p1a + 2;\n            const p2b = p1a + 3;\n\n            const indexOffset = k * verticesPerLine;\n            indices[indexOffset] = p1a;\n            indices[indexOffset + 1] = p1b;\n            indices[indexOffset + 2] = p2a;\n            indices[indexOffset + 3] = p2a;\n            indices[indexOffset + 4] = p1b;\n            indices[indexOffset + 5] = p2b;\n\n            k++;\n          }\n        }\n      }\n\n      return indices;\n    }\n\n    getRowHeight(numRows) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? [\n            Math.floor(visibleTrackHeight / numRows),\n            Math.floor(visibleTrackHeight / numRows),\n          ]\n        : [this.rowHeight, this.rowHeight + this.rowPadding];\n    }\n\n    getTrackHeight(numRows, rowHeight) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? visibleTrackHeight\n        : rowHeight * numRows + this.rowPadding * (numRows - 1);\n    }\n\n    renderLines() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n\n      const [positions, colorIndices, offsetSigns] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const numPointsPerRow = getNumPointsPerRow(\n        numRows,\n        positions,\n        this.markArea\n      );\n\n      const indices = this.toLineIndices(\n        numRows,\n        numPointsPerRow,\n        this.markArea\n      );\n\n      const uniforms = new PIXI.UniformGroup({\n        uLineColor: [...this.markColorRgbNorm, 1.0],\n        uNaNColor: [1.0, 1.0, 1.0, 1.0],\n        uAreaColorTex: this.markColorTex,\n        uAreaColorTexRes: this.markColorTexRes,\n        uWidth: 0.25,\n        uMiter: 1,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      const numCoords = 2;\n      const numVerticesPoint = this.markArea ? 4 : 2;\n      geometry.addAttribute(\n        'aPrevPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        0 // offset/start\n      );\n      geometry.addAttribute(\n        'aCurrPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        // note that each point is duplicated, hence we need to skip over the first two\n        FLOAT_BYTES * numCoords * numVerticesPoint // offset/start\n      );\n      geometry.addAttribute(\n        'aNextPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * 2, // stride\n        // note that each point is duplicated, hence we need to skip over the first four\n        FLOAT_BYTES * numCoords * numVerticesPoint * 2 // offset/start\n      );\n      geometry.addAttribute('aOffsetSign', offsetSigns, 1);\n      geometry.addAttribute('aColorIndex', colorIndices, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.lineGraphics) {\n        this.pMain.removeChild(this.lineGraphics);\n        this.lineGraphics.destroy();\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.lineGraphics = newGraphics;\n\n      scaleGraphics(this.lineGraphics, this._xScale, this.drawnAtScale);\n\n      this.draw();\n      this.animate();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateLoadIndicator();\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.renderLines();\n    }\n\n    updateLoadIndicator() {\n      const [left, top] = this.position;\n      this.pLoading.position.x = left + 6;\n      this.pLoading.position.y = top + 6;\n\n      if (this.fetching.size) {\n        this.pLoading.addChild(this.loadIndicator);\n      } else {\n        this.pLoading.removeChild(this.loadIndicator);\n      }\n    }\n\n    refreshTiles() {\n      super.refreshTiles();\n      this.updateLoadIndicator();\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.lineGraphics) {\n        scaleGraphics(this.lineGraphics, newXScale, this.drawnAtScale);\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Return the data currently visible at position X and Y\n     *\n     * @param {Number} trackX: The x position relative to the track's start and end\n     * @param {Number} trakcY: The y position relative to the track's start and end\n     */\n    getVisibleData(trackX, trackY) {\n      if (!this.hasFetchedTiles()) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n\n      const numRows = getNumRows(this.fetchedTiles);\n      const [, rowStepHeight] = this.getRowHeight(numRows);\n\n      // the width of the tile in base pairs\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tilePos = this._xScale.invert(trackX) / tileWidth;\n\n      // the position of query within the tile\n      let posInTileX =\n        this.tilesetInfo.tile_size * (tilePos - Math.floor(tilePos));\n      // const posInTileYNormalized = trackY / this.dimensions[1];\n      // The first track doesn't apply padding so we have to shift padding\n      // to the mouse position once\n      const rowIndex = Math.floor(\n        Math.max(0, (trackY + this.rowPadding) / rowStepHeight)\n      );\n      const rowSelection = this.rowSelections[rowIndex];\n      const tileId = this.tileToLocalId([zoomLevel, Math.floor(tilePos)]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      let text = '';\n      let value = '<em>unknown</em>';\n\n      if (rowSelection === undefined) return text;\n\n      if (fetchedTile) {\n        if (!this.tilesetInfo.shape) {\n          posInTileX =\n            fetchedTile.tileData.dense.length * (tilePos - Math.floor(tilePos));\n        }\n\n        let index = null;\n        if (this.tilesetInfo.shape) {\n          // Accomodate data from vector sources\n          if (\n            Array.isArray(rowSelection) &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            // Need to aggregate, so `index` will actually be an array.\n            index = rowSelection.map(\n              (rowI) =>\n                this.tilesetInfo.shape[0] * rowI + Math.floor(posInTileX)\n            );\n          } else if (\n            rowSelection &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            index =\n              this.tilesetInfo.shape[0] * rowSelection + Math.floor(posInTileX);\n          } else {\n            // No need to aggregate, `index` will contain a single item.\n            index =\n              this.tilesetInfo.shape[0] * rowIndex + Math.floor(posInTileX);\n          }\n        } else {\n          index =\n            fetchedTile.tileData.dense.length * rowIndex +\n            Math.floor(posInTileX);\n        }\n\n        if (Array.isArray(index)) {\n          const values = index.map((i) => fetchedTile.tileData.dense[i]);\n          value = format('.3f')(this.selectRowsAggregationFn(values));\n          text = value;\n\n          text += '<br/>';\n          text += `${index.length}-item ${this.options.selectRowsAggregationMode}`;\n        } else {\n          value = format('.3f')(fetchedTile.tileData.dense[index]);\n          text = value;\n\n          if (Array.isArray(rowSelection)) {\n            value += '<br/>';\n            value += `${rowSelection.length}-item ${this.options.selectRowsAggregationMode}`;\n          }\n        }\n      }\n\n      // add information about the row\n      if (this.tilesetInfo.row_infos) {\n        let rowInfo = '';\n\n        if (rowSelection !== undefined) {\n          rowInfo = this.tilesetInfo.row_infos[rowSelection];\n        }\n\n        const label =\n          typeof rowInfo === 'object'\n            ? this.rowIdToCategory(rowInfo.id)\n            : rowInfo;\n\n        const color = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_DARK[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_DARK.length\n            ]\n          : '#666666';\n\n        const background = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_LIGHT[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_LIGHT.length\n            ]\n          : '#ffffff';\n\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${background}\"><strong style=\"color: ${color};\">${label}:</strong> ${value}</div>`;\n      }\n\n      return text;\n    }\n\n    /**\n     * Get some information to display when the mouse is over this\n     * track\n     *\n     * @param {Number} trackX: the x position of the mouse over the track\n     * @param {Number} trackY: the y position of the mouse over the track\n     *\n     * @return {string}: A HTML string containing the information to display\n     *\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      return this.getVisibleData(trackX, trackY);\n    }\n\n    exportSVG() {\n      const svgns = 'http://www.w3.org/2000/svg';\n\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'ridge-plot-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]}, ${this.position[1]})`\n      );\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n      const stride = this.markArea ? 8 : 4;\n\n      const [positions] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const createLine = line()\n        .x((d) => d[0])\n        .y((d) => d[1]);\n\n      const posPerRow = positions.length / numRows;\n\n      const posToPoints = (pos) => {\n        const arr = [];\n        const start = stride;\n        const end = pos.length - stride;\n\n        for (let i = start; i < end; i += stride) {\n          arr.push([pos[i], pos[i + 1]]);\n        }\n\n        return arr;\n      };\n\n      let fill = this.markArea\n        ? (this.options.colorRange && this.options.colorRange[0]) || '#ffffff'\n        : 'none';\n      if (this.markArea && this.options.colorRange) {\n        const numColors = this.options.colorRange.length;\n        const defs = document.createElementNS(svgns, 'defs');\n        const linearGradient = document.createElementNS(\n          svgns,\n          'linearGradient'\n        );\n        linearGradient.setAttribute('id', 'RidgePlotGradient');\n        linearGradient.setAttribute('x1', '0');\n        linearGradient.setAttribute('y1', '1');\n        linearGradient.setAttribute('x2', '0');\n        linearGradient.setAttribute('y2', '0');\n        this.options.colorRange.forEach((color, i) => {\n          const stop = document.createElementNS(svgns, 'stop');\n          stop.setAttribute(\n            'offset',\n            `${Math.round((i / (numColors - 1)) * 100)}%`\n          );\n          stop.setAttribute('stop-color', color);\n          linearGradient.appendChild(stop);\n        });\n        defs.appendChild(linearGradient);\n        base.insertBefore(defs, base.firstChild);\n        fill = 'url(#RidgePlotGradient)';\n      }\n\n      for (let i = 0; i < numRows; i++) {\n        const arr = posToPoints(\n          positions.subarray(i * posPerRow, (i + 1) * posPerRow)\n        );\n\n        const l = document.createElement('path');\n        let d = createLine(arr);\n\n        const y0 = this.rowScale(i) + this.valueScaleByRow(0, i);\n\n        // We extend the line a little to the left and right and anchor them at\n        // y = 0 to avoid weird glitches with the fill.\n        const firstComma = d.indexOf(',');\n        const firstX = +d.substring(1, firstComma);\n        const firstY = +d.substring(firstComma + 1, d.indexOf('L'));\n        d = `M${firstX - 1},${y0}L${firstX - 1},${firstY}L${d.substring(1)}`;\n        const lastComma = d.lastIndexOf(',');\n        const lastX = +d.substring(d.lastIndexOf('L') + 1, lastComma);\n        const lastY = +d.substring(lastComma + 1);\n        d += `L${lastX + 1},${lastY}L${lastX + 1},${y0}`;\n\n        l.setAttribute('d', d);\n        l.setAttribute('fill', fill);\n        l.setAttribute('stroke', this.options.markColor || 'black');\n        l.setAttribute('stroke-width', (this.options.markSize || 2) / 8);\n\n        output.appendChild(l);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new RidgePlotTrack(...args);\n};\n\ncreateRidgePlotTrack.config = {\n  type: 'ridge-plot',\n  datatype: ['multivec'],\n  orientation: '1d',\n  name: 'RidgePlot',\n};\n\nexport default createRidgePlotTrack;\n","import createIntervalTree from 'interval-tree-1d';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n  EPS,\n} from './constants';\nimport { contains, dashedXLineTo, toFixed } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aHighlight;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main(void)\n  {\n    vHighlight = aHighlight;\n    vOpacity = aOpacity;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n\n  uniform vec4 uColor;\n  uniform vec4 uColorHighlight;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main() {\n    float isNotFocused = 1.0 - vHighlight;\n\n    float r = uColor.r * isNotFocused + uColorHighlight.r * vHighlight;\n    float g = uColor.g * isNotFocused + uColorHighlight.g * vHighlight;\n    float b = uColor.b * isNotFocused + uColorHighlight.b * vHighlight;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [pt.opacity, pt.opacity, pt.opacity, pt.opacity];\n\nconst pointToHighlight = (pt) => [\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n];\n\nconst getItemDistance = (item) =>\n  Math.abs(\n    +item.fields[1] +\n      (+item.fields[2] - +item.fields[1]) / 2 -\n      (+item.fields[4] + (+item.fields[4] - +item.fields[5]) / 2)\n  );\n\nconst getMaxDistance = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxDist, tile) =>\n      Math.max(\n        maxDist,\n        tile.tileData.reduce(\n          (maxDistItem, item) => Math.max(maxDistItem, item.distance),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getRegionId = (item) =>\n  `${item.fields[0]}:${item.fields[1]}-${item.fields[2]}`;\n\nconst createStratifiedBedTrack = function createStratifiedBedTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { MAX_CLICK_DELAY } = HGC.configs;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class StratifiedBedTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.pLegend = new PIXI.Graphics();\n      this.pMasked.addChild(this.pLegend);\n\n      this.legendMin = Infinity;\n      this.legendMax = -Infinity;\n\n      // Needed for interaction tracking because interaction tracking on the\n      // mesh causes errors...\n      this.bg = new PIXI.Sprite(PIXI.Texture.WHITE);\n      [this.bg.width, this.bg.height] = this.dimensions;\n      this.bg.interactive = true;\n      this.bg.interactiveChildren = false;\n      this.bg.alpha = 0;\n\n      let mousedownTime = performance.now();\n      this.bg.mousedown = () => {\n        mousedownTime = performance.now();\n      };\n      this.bg.mouseup = (e) => {\n        if (performance.now() - mousedownTime < MAX_CLICK_DELAY)\n          this.clickHandler(e);\n      };\n\n      this.updateOptions();\n\n      this.pLoading = new PIXI.Graphics();\n      this.pLoading.position.x = 0;\n      this.pLoading.position.y = 0;\n      this.pMasked.addChild(this.pLoading);\n\n      this.loadIndicator = new PIXI.Text('Loading data...', {\n        fontSize: this.labelSize || 10,\n        fill: 0x808080,\n      });\n      this.pLoading.addChild(this.loadIndicator);\n    }\n\n    initTile(tile) {\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.distance = getItemDistance(item) || -1;\n        item.cX = item.xStart + (item.xEnd - item.xStart) / 2;\n        item.regionId = getRegionId(item);\n        item.isLeftToRight = item.xStart < item.xEnd;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorHighlight = HGC.utils.colorToHex(\n        this.options.markColorHighlight || 'red'\n      );\n\n      this.markColorHighlightRgbNorm = this.options.markColorHighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorHighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markColorDehighlight = HGC.utils.colorToHex(\n        this.options.markColorDehighlight || '#999999'\n      );\n\n      this.markColorDehighlightRgbNorm = this.options.markColorDehighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorDehighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0.6, 0.6, 0.6];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.distance;\n\n      this.opacityEncoding = this.options.opacityEncoding || 'solid';\n\n      switch (this.opacityEncoding) {\n        case 'frequency':\n          this.opacityScale = () => 0.1;\n          break;\n\n        case 'highestImportance':\n        case 'closestImportance': {\n          const importanceDomain = this.options.importanceDomain || [1, 1000];\n          const opacityLinearScale = scaleLinear()\n            .domain(importanceDomain)\n            .range([1, 10]);\n          this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n          break;\n        }\n\n        case 'solid':\n        default:\n          this.opacityScale = () => 1;\n          break;\n      }\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.getRegion = this.options.focusRegion\n        ? (item) => [item.xStart, item.xEnd]\n        : undefined;\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.focusStyle = this.options.focusStyle\n        ? this.options.focusStyle.toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxDist = getMaxDistance(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item, isHighlighting) {\n      return {\n        cX: this._xScale(item.cX),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        highlight: isHighlighting && item.__focus,\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n        __item: item,\n      };\n    }\n\n    isItemInFocus() {\n      if (\n        this.getGene &&\n        this.focusGene &&\n        this.getRegion &&\n        this.focusRegion\n      ) {\n        return (item) => {\n          item.__focus =\n            this.getGene(item) === this.focusGene &&\n            contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      if (this.getGene && this.focusGene) {\n        return (item) => {\n          item.__focus = this.getGene(item) === this.focusGene;\n          return item.__focus;\n        };\n      }\n\n      if (this.getRegion && this.focusRegion) {\n        return (item) => {\n          item.__focus = contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      return (item) => {\n        item.__focus = false;\n        // If no focus was defined, we include all intervals\n        return true;\n      };\n    }\n\n    itemToIndicatorReducer(filterFn, addFn) {\n      if (this.focusStyle === 'highlighting') {\n        return (filteredItems, item) => {\n          filterFn(item);\n          addFn(filteredItems, item);\n          return filteredItems;\n        };\n      }\n\n      return (filteredItems, item) => {\n        if (filterFn(item)) addFn(filteredItems, item);\n        return filteredItems;\n      };\n    }\n\n    getPoints(isHighlighting) {\n      let reducerVar = [];\n      let addFn = (accumulator, item) =>\n        accumulator.push(this.itemToIndicatorCategory(item, isHighlighting));\n\n      if (this.opacityEncoding === 'highestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (accumulator[item.regionId]) {\n            const i1 = this.getImportance(accumulator[item.regionId].__item);\n            const i2 = this.getImportance(item);\n            if (i2 > i1) {\n              accumulator[item.regionId] = this.itemToIndicatorCategory(\n                item,\n                isHighlighting\n              );\n            }\n          } else {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      } else if (this.opacityEncoding === 'closestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (\n            !accumulator[item.regionId] ||\n            item.distance < accumulator[item.regionId].__item.distance\n          ) {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      }\n\n      const filterFn = this.isItemInFocus();\n      const dataToPoint = this.itemToIndicatorReducer(filterFn, addFn);\n\n      return Object.values(this.fetchedTiles).flatMap((tile) =>\n        Object.values(tile.tileData.reduce(dataToPoint, reducerVar))\n      );\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const highlights = new Float32Array(points.flatMap(pointToHighlight));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: isHighlighting\n          ? [...this.markColorDehighlightRgbNorm, this.markOpacity]\n          : [...this.markColorRgbNorm, this.markOpacity],\n        uColorHighlight: [...this.markColorHighlightRgbNorm, this.markOpacity],\n        uHighlighting: isHighlighting,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aHighlight', highlights, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(this.bg);\n      newGraphics.addChild(mesh);\n\n      [this.bg.width, this.bg.height] = this.dimensions;\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.indicatorPointGraphics.removeChild(this.bg);\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (this.options.focusStyle === 'highlighting') {\n          this.pAxis.beginFill(0xffffff, 0.66);\n        } else {\n          this.pAxis.beginFill(this.groupToColor.get(i)[1], 0.66);\n        }\n\n        this.pAxis.lineStyle(0);\n        if (this.axisAlign === 'right') {\n          this.pAxis.drawRect(\n            labelPixiText.x - labelPixiText.width,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        } else {\n          this.pAxis.drawRect(\n            labelPixiText.x,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        }\n        this.pAxis.endFill();\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    renderIndicatorLegend() {\n      this.pLegend.clear();\n\n      if (this.opacityEncoding.indexOf('Importance') === -1) {\n        if (this.legendMinText) {\n          this.pLegend.removeChild(this.legendMinText);\n          this.legendMinText.destroy();\n          this.legendMinText = undefined;\n        }\n        if (this.legendMaxText) {\n          this.pLegend.removeChild(this.legendMaxText);\n          this.legendMaxText.destroy();\n          this.legendMaxText = undefined;\n        }\n        return;\n      }\n\n      const padding = 6;\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n      const [, y] = this.categoryHeightScale.range();\n      const isRightAligned = this.options.legendAlign === 'right';\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      this.pLegend.position.x = isRightAligned ? left + width : left;\n\n      const [minValue, maxValue] = this.options.importanceDomain || [1, 1000];\n\n      if (Math.abs(minValue - this.legendMin) > EPS) {\n        if (this.legendMinText) {\n          this.pLegend.removeChild(this.legendMinText);\n          this.legendMinText.destroy();\n        }\n        this.legendMinText = new PIXI.Text(toFixed(minValue, 3), {\n          fontSize: this.labelSize,\n          align: isRightAligned ? 'right' : 'left',\n          fill: 0x808080,\n        });\n        this.legendMinText.x = 0;\n        this.legendMinText.y = padding / 2;\n        this.legendMinText.anchor.x = isRightAligned ? 1 : 0;\n        this.pLegend.addChild(this.legendMinText);\n      }\n\n      if (Math.abs(maxValue - this.legendMax) > EPS) {\n        if (this.legendMaxText) {\n          this.pLegend.removeChild(this.legendMaxText);\n          this.legendMaxText.destroy();\n        }\n        this.legendMaxText = new PIXI.Text(toFixed(maxValue, 3), {\n          fontSize: this.labelSize,\n          align: isRightAligned ? 'right' : 'left',\n          fill: 0x808080,\n        });\n        this.legendMaxText.x = 0;\n        this.legendMaxText.y = padding / 2;\n        this.legendMaxText.anchor.x = isRightAligned ? 1 : 0;\n        this.pLegend.addChild(this.legendMaxText);\n      }\n\n      const legendRectWidth = 42;\n      const minTextWidth = this.legendMinText.getBounds().width;\n      const maxTextWidth = this.legendMaxText.getBounds().width;\n      const offset = isRightAligned\n        ? -(maxTextWidth + legendRectWidth + padding)\n        : minTextWidth + 2 * padding;\n\n      const rectHeight = 18 + (isHighlighting * padding) / 2;\n\n      this.pLegend.beginFill(0xffffff);\n      this.pLegend.lineStyle(1, 0xcccccc);\n      if (isRightAligned) {\n        this.legendMinText.x = offset - padding;\n        this.pLegend.drawRoundedRect(\n          -(legendRectWidth + minTextWidth + maxTextWidth + 3 * padding + 0.5),\n          0,\n          legendRectWidth + minTextWidth + maxTextWidth + 3 * padding,\n          rectHeight,\n          3\n        );\n      } else {\n        this.legendMaxText.x = offset + legendRectWidth + 2 * padding;\n        this.pLegend.drawRoundedRect(\n          0.5,\n          0,\n          legendRectWidth + minTextWidth + maxTextWidth + 3 * padding,\n          18 + (isHighlighting * padding) / 2,\n          3\n        );\n      }\n      this.pLegend.endFill();\n      this.pLegend.lineStyle(0);\n\n      for (let i = 0; i < 5; i++) {\n        const opacity = this.opacityScale(minValue + (i / 4) * maxValue);\n\n        this.pLegend.beginFill(this.markColor, opacity);\n        this.pLegend.drawRect(\n          i * 9 + offset,\n          padding / 2 + !isHighlighting * 3,\n          6,\n          6\n        );\n        this.pLegend.endFill();\n\n        if (isHighlighting) {\n          this.pLegend.beginFill(this.markColorHighlight, opacity);\n          this.pLegend.drawRect(i * 9 + offset, padding / 2 + 9, 6, 6);\n          this.pLegend.endFill();\n        }\n      }\n\n      if (isRightAligned) {\n        this.legendMinText.x = offset - padding;\n        this.legendMaxText.x = -padding / 2;\n      } else {\n        this.legendMinText.x = padding / 2;\n        this.legendMaxText.x = offset + legendRectWidth + padding;\n      }\n\n      this.pLegend.position.y = top + y - padding - rectHeight;\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis();\n      this.renderIndicatorLegend();\n      this.renderIndicatorPoints();\n    }\n\n    updateLoadIndicator() {\n      const [left, top] = this.position;\n      this.pLoading.position.x = left + 6;\n      this.pLoading.position.y = top + 6;\n\n      if (this.fetching.size) {\n        this.pLoading.addChild(this.loadIndicator);\n      } else {\n        this.pLoading.removeChild(this.loadIndicator);\n      }\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateLoadIndicator();\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile) {\n      tile.graphics.clear();\n\n      this.updateLoadIndicator();\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    getElementAtPosition(relX, relY) {\n      if (!this.tilesetInfo) return undefined;\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(relX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return undefined;\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(relY))\n      );\n\n      const xAbsLo = this._xScale.invert(relX - 1);\n      const xAbsHi = this._xScale.invert(relX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      return {\n        item: foundItem,\n        category,\n        tileId,\n      };\n    }\n\n    getMouseOverHtml(relX, relY) {\n      const element = this.getElementAtPosition(relX, relY);\n\n      if (!element) return '';\n\n      const { item, category } = element;\n\n      if (item) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(item).toFixed(2);\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    clickHandler(event) {\n      const [offsetX, offsetY] = this.position;\n      const relX = event.data.global.x - offsetX;\n      const relY = event.data.global.y - offsetY;\n\n      const element = this.getElementAtPosition(relX, relY);\n\n      if (element) {\n        this.pubSub.publish('app.click', {\n          type: 'annotation',\n          event,\n          payload: element,\n        });\n      }\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    refreshTiles() {\n      super.refreshTiles();\n      this.updateLoadIndicator();\n    }\n\n    renderIndicatorCategoryAxisAsSvg() {\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.pAxis.position.x}, ${this.pAxis.position.y})`\n      );\n\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n\n      const createRect = (x, y, w, h, f, o) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', x);\n        r.setAttribute('y', y);\n        r.setAttribute('width', w);\n        r.setAttribute('height', h);\n        r.setAttribute('fill', f);\n        r.setAttribute('fill-opacity', o);\n        r.setAttribute('stroke-width', 0);\n\n        return r;\n      };\n\n      const createText = (pixiText) => {\n        const t = document.createElement('text');\n\n        t.setAttribute('x', pixiText.x);\n        t.setAttribute('y', pixiText.y + pixiText.height / (4 / 1));\n        t.setAttribute('fill', pixiText._style._fill);\n        t.setAttribute(\n          'text-anchor',\n          pixiText._style._align === 'right' ? 'end' : 'start'\n        );\n        t.setAttribute('style', `font: ${pixiText._font};`);\n\n        t.textContent = pixiText.text;\n\n        return t;\n      };\n\n      const createLine = ({\n        stroke = '#000000',\n        strokeWidth = 1,\n        strokeDasharray = null,\n      } = {}) => (x1, y1, x2, y2) => {\n        const l = document.createElement('line');\n\n        l.setAttribute('x1', x1);\n        l.setAttribute('y1', y1);\n        l.setAttribute('x2', x2);\n        l.setAttribute('y2', y2);\n        l.setAttribute('stroke', stroke);\n        l.setAttribute('stroke-width', strokeWidth);\n\n        if (strokeDasharray)\n          l.setAttribute('stroke-dasharray', strokeDasharray);\n\n        return l;\n      };\n\n      const createDashedLine = createLine({ strokeDasharray: '5' });\n\n      const isHighlighting = this.options.focusStyle === 'highlighting';\n      const backgroundOpacity = 0.66;\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n\n        // Background color\n        const backgroundColor = isHighlighting\n          ? '#ffffff'\n          : `#${this.groupToColor.get(i)[1].toString(16)}`;\n\n        if (this.axisAlign === 'right') {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x - labelPixiText.width,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        } else {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        }\n\n        gAxis.appendChild(createText(labelPixiText));\n\n        gAxis.appendChild(createLine()(0, yStart, xTickOffset, yStart));\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          gAxis.appendChild(createDashedLine(0, yStart, xTickEnd, yStart));\n        }\n\n        yStart = yEnd;\n      });\n\n      gAxis.appendChild(createLine()(0, 0, 0, yEnd));\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        gAxis.appendChild(createDashedLine(0, yEnd, xTickEnd, yEnd));\n      }\n\n      return gAxis;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stratified-bed-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n      const color = isHighlighting\n        ? this.options.markColorDehighlight || '#999999'\n        : this.options.markColor || 'black';\n      const colorHighlight = this.options.markColorHighlight || 'red';\n\n      points.forEach(({ cX, y, widthHalf, opacity, highlight, height }, i) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', cX - widthHalf);\n        r.setAttribute('y', y);\n        r.setAttribute('width', widthHalf * 2);\n        r.setAttribute('height', height);\n        r.setAttribute('fill', highlight ? colorHighlight : color);\n        r.setAttribute('fill-opacity', opacity);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      base.appendChild(this.renderIndicatorCategoryAxisAsSvg());\n\n      return [base, track];\n    }\n  }\n\n  return new StratifiedBedTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStratifiedBedTrack.config = {\n  type: 'stratified-bed',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStratifiedBedTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n\n      return [circleDraws, circleFocusDraws];\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo || !this.options.toolTip || !this.valueScale)\n        return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'exported-snp-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles()\n        .filter((tile) => tile.plusStrandRows)\n        .forEach((tile) => {\n          // call drawTile with storePolyStr = true so that\n          // we record path strings to use in the SVG\n          const [circles, focusedCircles] = this.renderRows(\n            tile,\n            tile.plusStrandRows,\n            tile.plusStrandRows.length,\n            0,\n            this.dimensions[1],\n            'blue'\n          );\n\n          circles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColor || 'black');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacity || 0.33);\n            c.setAttribute('r', this.options.markSize);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n\n          focusedCircles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColorFocus || 'red');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacityFocus || 0.66);\n            c.setAttribute('r', this.options.markSize + 1);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n        });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n} from './constants';\nimport { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n\n      this.pLoading = new PIXI.Graphics();\n      this.pLoading.position.x = 0;\n      this.pLoading.position.y = 0;\n      this.pMasked.addChild(this.pLoading);\n\n      this.loadIndicator = new PIXI.Text('Loading data...', {\n        fontSize: this.labelSize || 10,\n        fill: 0x808080,\n      });\n      this.pLoading.addChild(this.loadIndicator);\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n      tile.histogram2dNumPred = new Uint8Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      const categoryBinHash = new Map();\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const category = this.getCategory(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          const binHash = categoryBinHash.get(category) || {};\n\n          // Make sure we count multiple enhancer predictions of the same biosample and bin only once (i.e., summing up)\n          if (!binHash[bin]) {\n            binHash[bin] = binHash[bin] || score > 0;\n            tile.histogram2dNumPred[histIdx] += binHash[bin];\n            categoryBinHash.set(category, binHash);\n          }\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    updateLoadIndicator() {\n      const [left, top] = this.position;\n      this.pLoading.position.x = left + 6;\n      this.pLoading.position.y = top + 6;\n\n      if (this.fetching.size) {\n        this.pLoading.addChild(this.loadIndicator);\n      } else {\n        this.pLoading.removeChild(this.loadIndicator);\n      }\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      this.updateLoadIndicator();\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateLoadIndicator();\n      if (!this.hasFetchedTiles()) return;\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const rowCumSum = [];\n      const rowNumPred = [];\n      let totalPred = 0;\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        const numPred =\n          fetchedTile.histogram2dNumPred[i * this.numBins + binXPos];\n        rowNumPred.push(numPred);\n        totalPred += numPred;\n        rowCumSum.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = rowCumSum.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value =\n          fetchedTile.histogram2dNumPred[group * this.numBins + binXPos];\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value} of ${totalPred} samples</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stacked-bar-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      segments.forEach(({ xStart, xEnd, yStart, yEnd, colorIdx }) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', xEnd);\n        r.setAttribute('y', yEnd);\n        r.setAttribute('width', Math.abs(xEnd - xStart));\n        r.setAttribute('height', Math.abs(yEnd - yStart));\n        r.setAttribute('fill', this.colorMap[colorIdx]);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Advanced Stacked Bars Track',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import createPubSub from 'pub-sub-es';\n\nfunction createTssTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  class TssTrack extends HGC.tracks.BedLikeTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      const { publish, subscribe, unsubscribe } = createPubSub();\n      this.publish = publish;\n      this.subscribe = subscribe;\n      this.unsubscribe = unsubscribe;\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = 1;\n      const radius = 2;\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = {\n              xStartScreen: xStartPos,\n              xEndScreen: xEndPos,\n              xStartAbs: txStart,\n              xEndAbs: txEnd,\n              data: td,\n            };\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        circleDraws.forEach((circleDraw) => {\n          this.publish('annotationDrawn', circleDraw);\n        });\n      }\n    }\n\n    rerender() {\n      // Monkey patch because TiledPixiTrack doesn't always fire correctly\n      this.draw();\n      this.publish('tilesDrawn', { uuid: this.uuid });\n    }\n\n    updateExistingGraphics() {\n      super.updateExistingGraphics();\n      this.publish('tilesDrawn', { uuid: this.uuid });\n    }\n\n    getMouseOverHtml() {\n      return '';\n    }\n  }\n\n  return new TssTrack(...args);\n}\n\ncreateTssTrack.config = {\n  type: 'tss',\n  datatype: ['bedlike'],\n};\n\nexport default createTssTrack;\n","import { globalPubSub } from 'pub-sub-es';\n\n// Timeout requests after 10 seconds\nconst T_TIMEOUT = 10000;\n\nconst LocalCsvDataFetcher = function LocalCsvDataFetcher(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const createRandomId = () => Math.random().toString(36).substring(2);\n\n  class LocalBedDataFetcherClass {\n    constructor(dataConfig) {\n      this.dataConfig = dataConfig;\n    }\n\n    tilesetInfo(callback) {\n      this.tilesetInfoLoading = true;\n\n      if (!this.tilesetInfoData) {\n        this.tilesetInfoData = new Promise((resolve, reject) => {\n          const requestId = createRandomId();\n          const timeoutId = setTimeout(\n            () =>\n              reject(\n                new Error(\n                  `Could not load tileset info for ${this.dataConfig.id}`\n                )\n              ),\n            T_TIMEOUT\n          );\n          globalPubSub.subscribe(\n            `localBed:tilesetInfo:${requestId}`,\n            (tilesetInfo) => {\n              clearTimeout(timeoutId);\n              this.tilesetInfoLoading = false;\n              resolve(tilesetInfo);\n            },\n            1\n          );\n          globalPubSub.publish('localBed:requestTilesetInfo', {\n            fileId: this.dataConfig.id,\n            requestId,\n          });\n        });\n      }\n\n      this.tilesetInfoData.then((tilesetInfoData) => {\n        callback(tilesetInfoData);\n      });\n    }\n\n    /** We expect there to be a tilesetUid in the provided tilesetInfo\n     * and tiles data since tileResponseToData needs it\n     *\n     * It is also easier for users to paste in request responses for debugging.\n     */\n    fetchTilesDebounced(loadHandler, tileIds) {\n      Promise.all(tileIds.map((tileId) => this.tile(tileId.split('.')))).then(\n        (tiles) => {\n          loadHandler(\n            tiles.reduce((response, tile, i) => {\n              response[tileIds[i]] = tile;\n              return response;\n            }, {})\n          );\n        }\n      );\n    }\n\n    tile([z, x]) {\n      return new Promise((resolve, reject) => {\n        const requestId = createRandomId();\n        const timeoutId = setTimeout(\n          () =>\n            reject(\n              new Error(\n                `Could not load tile ${z}.${x} for ${this.dataConfig.id} (request: ${requestId})`\n              )\n            ),\n          T_TIMEOUT\n        );\n        globalPubSub.subscribe(\n          `localBed:tile:${requestId}`,\n          (tile) => {\n            clearTimeout(timeoutId);\n            resolve(tile);\n          },\n          1\n        );\n        globalPubSub.publish('localBed:requestTile', {\n          fileId: this.dataConfig.id,\n          z: +z,\n          x: +x,\n          requestId,\n        });\n      });\n    }\n  }\n\n  return new LocalBedDataFetcherClass(...args);\n};\n\nLocalCsvDataFetcher.config = {\n  type: 'localBed',\n};\n\nexport default LocalCsvDataFetcher;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAnnotationOverlayMetaTrack from './annotation-overlay-meta-track';\nimport createRidgePlotTrack from './ridge-plot-track';\nimport createStratifiedBedTrack from './stratified-bed-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\nimport createTssTrack from './tss-track';\n\nimport createLocalBedDataFetcher from './local-bed-data-fetcher';\n\nimport './index.css';\n\nregister(\n  {\n    dataFetcher: createLocalBedDataFetcher,\n    config: createLocalBedDataFetcher.config,\n  },\n  { pluginType: 'dataFetcher' }\n);\n\nregister({\n  track: createRidgePlotTrack,\n  config: createRidgePlotTrack.config,\n});\n\nregister({\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  track: createStratifiedBedTrack,\n  config: createStratifiedBedTrack.config,\n});\n\nregister({\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nregister({\n  track: createTssTrack,\n  config: createTssTrack.config,\n});\n\nregister({\n  track: createAnnotationOverlayMetaTrack,\n  config: createAnnotationOverlayMetaTrack.config,\n  isMetaTrack: true,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}