{"version":3,"sources":["AppInitializing.js","AppError.js","radio.js","utils.js","Viewer.js","with-either.js","App.js","serviceWorker.js","bed-matrix-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","index.js"],"names":["AppInitializing","className","RadioGroupContext","createContext","RadioGroup","children","name","onChange","useState","value","setState","event","target","type","useRadioButtons","inputProps","Provider","RadioButton","props","context","useContext","label","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","length","rgba","Float32Array","forEach","color","i","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","y","dashSize","diff","direction","sign","width","abs","stepSize","numSteps","moveTo","lineTo","DEFAULT_VIEW_CONFIG","editable","trackSourceServers","views","uid","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","visible","chromInfoPath","tracks","top","options","stroke","fontSize","fontIsLeftAligned","showMousePosition","mousePositionColor","tilesetUid","height","server","labelColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","focusRegion","toolTip","field","numDecimals","other","binSize","axisAlign","labelPosition","arcStyle","indicatorStyle","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","categoryField","axisShowGroupSeparator","groups","categories","markMinWidth","markHeight","rowHeight","overlays","includes","extent","minWidth","fill","fillOpacity","strokeWidth","outline","outlineOpacity","outlineWidth","outlinePos","layout","w","h","x","initialXDomain","initialYDomain","DEFAULT_HIGLASS_OPTIONS","sizeMode","Viewer","focusGene","setFocusGene","focusVariant","setFocusVariant","variantYScale","setVariantYScale","viewConfig","setViewConfig","higlassApi","useRef","updateFocusGeneInHiglass","start","end","newViewConfig","JSON","parse","stringify","n","updateFocusVariantInHiglass","variant","deepClone","absPosition","position","chromInfo","indexOf","split","chrom","pos","chrPositions","toAbsPosition","Number","isNaN","updateFocusVariantInHiglassDb","debounce","higlassClickHandler","payload","fields","higlassInitHandler","useCallback","higlassInstance","current","api","on","htmlFor","id","readOnly","disabled","placeholder","onClick","yScale","updateVariantYScaleInHiglass","checked","ref","withEither","ifEitherFn","EitherComponent","Component","App","setChromInfo","useEffect","ChromosomeInfo","then","_chromInfo","undefined","totalLength","catch","AppViewer","pipe","AppError","Boolean","window","location","hostname","match","VS","FS","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","pointToPosition","pt","cX","widthHalf","pointToIndex","base","pointToOpacity","opacity","pointToFocused","focused","getIs2d","tile","tileData","yStart","get1dItemWidth","item","get2dItemWidth","yEnd","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","fetchedTiles","Object","values","reduce","maxWidth","maxWidthItem","scaleScalableGraphics","xScale","drawnAtScale","tileK","domain","posOffset","map","scale","createBedMatrixTrack","HGC","Error","libraries","d3Scale","scaleLinear","scaleLog","tileProxy","services","opacityLogScale","range","clamp","BedMatrixTrack","updateOptions","is2d","getItemWidth","getStart","getEnd","intervals","isLeftToRight","push","intervalTree","createIntervalTree","this","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","toLowerCase","Map","categoryToY","yToCategory","groupSizes","group","groupSize","k","set","utils","colorToHex","backgroundColor","category","j","cat","groupLabelsPixiText","Text","labelSize","align","axisLabelColor","markColorRgbNorm","colorToRgba","slice","min","markColorFocusRgbNorm","getImportance","opacityLinearScale","opacityScale","Infinity","getGene","minImportance","updateStratificationOption","newOptions","updateExistingGraphics","dimensions","heightScale","categoryHeightScale","valueScale","valueScaleInverted","_xScale","get","mapFn","filteredItems","dataToPoint","itemToIndicatorReducer","itemToIndicatorCategory","bind","points","flatMap","positions","indices","Uint16Array","opacities","uniforms","UniformGroup","uColor","uColorFocused","shader","Shader","from","geometry","Geometry","addAttribute","addIndex","mesh","Mesh","newGraphics","Graphics","addChild","pMain","indicatorPointGraphics","removeChild","draw","animate","drawAxis","left","pAxis","clear","xTickOffset","xTickEnd","xLabelOffset","numAxisLabels","lineStyle","labelPixiText","anchor","renderIndicatorCategoryAxis","renderIndicatorPoints","updateScales","updateIndicators","storePolyStr","axisNoGroupColor","size","beginFill","drawRect","endFill","trackX","trackY","tilesetInfo","zoomLevel","calculateZoomLevel","tileWidth","calculateTileWidth","tile_size","tileId","tileToLocalId","floor","invert","fetchedTile","foundItem","xAbsLo","xAbsHi","queryInterval","interval","bg","colorHex","toString","bgHex","toFixed","newPosition","newXScale","newYScale","refreshTiles","track","setAttribute","output","document","createElement","appendChild","visibleAndFetchedTiles","polys","drawTile","polyStr","g","HorizontalLine1DPixiTrack","args","config","datatype","orientation","thumbnail","DOMParser","parseFromString","documentElement","availableOptions","defaultOptions","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","createScalableArcs1dTrack","ScalableArcs1dTrack","numBins","pointSize","widthHistogramLeft","Uint32Array","widthHistogramRight","bin","round","histPos","widthHistogramMax","updateTileWidthHistogram","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","vertexShader","fragmentShader","drawTriangles","uPointSize","State","DRAW_MODES","TRIANGLES","POINTS","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","startsWith","drawCircle","drawEllipse","x1","x2","trackWidth","trackHeight","d","r","cx","cy","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","createSnpTrack","d3Array","scaleBand","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","radius","rectGraphics","finalDotYPos","rows","maxRows","initialize","rowScale","paddingInner","circleDraws","circleFocusDraws","td","geneInfo","chrOffset","txStart","txEnd","yMiddle","step","drawnRects","circleDraw","drawPoly","interactive","buttonMode","mouseup","hoveringSnp","pubSub","publish","relTilePos","tilePos","minDist","dist","itemY","importance","MAX_RADIUS","otherStr","v","substr","BedLikeTrack","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","getTilePosAndDimensions","tileX","binXPos","histogram1d","histogram2d","maxBinId","binStart","binEnd","score","histIdx","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","row","sum","relYPos","findIndex","register","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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gBACA,sBACA,0DACA,sBACA,+BACA,2DACA,gCACA,qBACA,+EACA,4DACA,wBACA,uCACA,iFACA,0DACA,qBACA,OACA,iCACA,iFACA,gBACA,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACErF,MAAO,UACPqF,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACErF,MAAO,UACPqF,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACErF,MAAO,6BACPqF,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACErF,MAAO,cACPqF,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACErF,MAAO,aACPqF,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCACA,0BACA,qDACA,gBACA,0BACA,wBACA,aACA,0BACA,qDACA,2BACA,uCACA,QACA,4CACA,gBACA,uBACA,mCACA,kCACA,gDACA,iBACA,kCAGJ,CACErF,MAAO,QACPqF,WAAY,CACV,wBACA,kBACA,oBACA,yBACA,2BACA,yBACA,gBACA,8BACA,gCACA,yBACA,mBACA,eACA,cACA,yBACA,6BACA,oBACA,wDACA,6CACA,QACA,2DACA,uBACA,iEACA,wEAOZ,CACE7F,KAAM,aAGN8D,OAAQ,2BACRF,WAAY,yBACZC,OAAQ,IACRjB,IAAK,uBACLU,QAAS,CACP0B,UAAW,QACXC,cAAe,SACfb,UAAW,QACXC,eAAgB,UAChBC,SAAU,EACVwB,aAAc,EACdC,WAAY,EACZC,UAAW,EACXzB,YAAa,IACbW,SAAU,YACVC,eAAgB,gBAChBpB,WAAY,QACZqB,iBAAkB,EAClBC,iBAAkB,QAClBC,UAAW,EACXC,gBAAiB,EACjBC,iBAAkB,CAAC,EAAG,GAKtB/F,KAAM,cACN0E,uBAAwB,QACxBsB,eAAgB,CACdC,cAAe,GACfC,wBAAwB,EAExBC,OAAQ,CACN,CACEpF,MAAO,yBACPqF,WAAY,CACV,wBACA,qBACA,2DACA,0DACA,4DACA,gBACA,sBACA,0DACA,sBACA,+BACA,2DACA,gCACA,qBACA,+EACA,4DACA,wBACA,uCACA,iFACA,0DACA,qBACA,OACA,iCACA,iFACA,gBACA,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACErF,MAAO,UACPqF,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACErF,MAAO,UACPqF,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACErF,MAAO,6BACPqF,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACErF,MAAO,cACPqF,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACErF,MAAO,aACPqF,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCACA,0BACA,qDACA,gBACA,0BACA,wBACA,aACA,0BACA,qDACA,2BACA,uCACA,QACA,4CACA,gBACA,uBACA,mCACA,kCACA,gDACA,iBACA,kCAGJ,CACErF,MAAO,QACPqF,WAAY,CACV,wBACA,kBACA,oBACA,yBACA,2BACA,yBACA,gBACA,8BACA,gCACA,yBACA,mBACA,eACA,cACA,yBACA,6BACA,oBACA,wDACA,6CACA,QACA,2DACA,uBACA,iEACA,0EAShBI,SAAU,CACR,CACErD,IAAK,eACLsD,SAAU,CACR,SACA,QACA,WACA,YAIA,eACA,wBAEF5C,QAAS,CACP6C,OAAQ,CAAC,CAAC,WAAuB,aACjC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","file":"static/js/main.fabea71a.chunk.js","sourcesContent":["import React from 'react';\nimport './AppInitializing.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-initializing\">\n    <span>Initializing...</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import React, { createContext, useState, useContext } from 'react';\n\nimport './radio.css';\n\nconst useRadioButtons = (name, onChange) => {\n  const [value, setState] = useState(null);\n\n  const handleChange = (event) => {\n    setState(event.target.value);\n    if (onChange) onChange(event);\n  };\n\n  const inputProps = {\n    onChange: handleChange,\n    name,\n    type: 'radio',\n  };\n\n  return [value, inputProps];\n};\n\nconst RadioGroupContext = createContext();\n\nconst RadioGroup = ({ children, name, onChange }) => {\n  const [, inputProps] = useRadioButtons(name, onChange);\n  return (\n    <RadioGroupContext.Provider value={inputProps}>\n      {children}\n    </RadioGroupContext.Provider>\n  );\n};\n\nconst RadioButton = (props) => {\n  const context = useContext(RadioGroupContext);\n  return (\n    <label className=\"fb fb-align-center radio-button\">\n      <input {...props} {...context} />\n      {props.label}\n    </label>\n  );\n};\n\nexport { RadioButton, RadioGroup };\n","const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nconst dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nconst toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n\nexport { createColorTexture, dashedXLineTo, toAbsPosition };\n","import React, { useCallback, useRef, useState } from 'react';\nimport { HiGlassComponent } from 'higlass';\nimport { debounce, deepClone } from '@flekschas/utils';\n\nimport { RadioButton, RadioGroup } from './radio';\nimport { toAbsPosition } from './utils';\n\nimport 'higlass/dist/hglib.css';\nimport './Viewer.css';\n\nconst DEFAULT_VIEW_CONFIG = {\n  editable: true,\n  trackSourceServers: [\n    '//higlass.io/api/v1',\n    'https://resgen.io/api/v1/gt/paper-data',\n  ],\n  views: [\n    {\n      uid: 'view1',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'horizontal-chromosome-labels',\n            options: {\n              // tickPositions: 'ends',\n              color: '#999999',\n              stroke: 'white',\n              fontSize: 10,\n              fontIsLeftAligned: true,\n              showMousePosition: false,\n              mousePositionColor: '#000000',\n            },\n            tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n            height: 12,\n            server: 'https://resgen.io/api/v1',\n            uid: 'chroms',\n          },\n          {\n            type: 'horizontal-gene-annotations',\n            uid: 'genes',\n            height: 48,\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n            options: {\n              fontSize: 9,\n              labelColor: 'black',\n              geneAnnotationHeight: 12,\n              geneLabelPosition: 'outside',\n              geneStrandSpacing: 2,\n            },\n          },\n          {\n            type: 'point-annotation',\n            uid: 'ibd-snps',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 36,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          // {\n          //   type: 'horizontal-bar',\n          //   uid: 'microglia',\n          //   server: 'https://resgen.io/api/v1',\n          //   tilesetUid: 'V3eSdmpsQqquMuV-gX8lPw',\n          //   height: 36,\n          //   options: {\n          //     barFillColor: 'black',\n          //     align: 'bottom',\n          //     labelColor: '[glyph-color]',\n          //     labelPosition: 'topLeft',\n          //     labelLeftMargin: 0,\n          //     labelRightMargin: 0,\n          //     labelTopMargin: 0,\n          //     labelBottomMargin: 0,\n          //     labelShowResolution: false,\n          //     axisLabelFormatting: 'scientific',\n          //     axisPositionHorizontal: 'right',\n          //     valueScaling: 'linear',\n          //     trackBorderWidth: 0,\n          //     trackBorderColor: 'black',\n          //     labelTextOpacity: 0.4,\n          //     barOpacity: 1,\n          //     name: 'microglia_H3K27ac_pooled',\n          //   },\n          // },\n          {\n            type: 'stacked-bar',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2chr10',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ',\n            height: 96,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: {\n                categoryField: 10,\n                axisShowGroupSeparator: true,\n                // axisNoGroupColor: true,\n                groups: [\n                  {\n                    label: 'Mononuclear Phagocytes',\n                    categories: [\n                      'THP1_LPS_4hr-Engreitz',\n                      'THP_pmaLPS_ATAC_6h',\n                      'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n                      'THP1-Engreitz',\n                      'THP_pmaLPS_ATAC_96h',\n                      'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n                      'THP_pmaLPS_ATAC_72h',\n                      'THP-1_monocyte-VanBortle2017',\n                      'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n                      'CD14-positive_monocyte-ENCODE',\n                      'THP_pmaLPS_ATAC_2h',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n                      'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n                      'U937_LPS_4hr-Engreitz',\n                      'CD14-positive_monocyte-Novakovic2016',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n                      'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n                      'THP_pmaLPS_ATAC_0h',\n                      'HAP1',\n                      'THP-1_macrophage-VanBortle2017',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n                      'U937-Engreitz',\n                      'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n                      'THP_pmaLPS_ATAC_24h',\n                      'THP_pmaLPS_ATAC_1h',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n                      'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n                      'THP_pmaLPS_ATAC_120h',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n                      'THP_pmaLPS_ATAC_48h',\n                      'CD14-positive_monocytes-Roadmap',\n                      'THP_pmaLPS_ATAC_12h', // monoctye\n                    ],\n                  },\n                  {\n                    label: 'B Cells',\n                    categories: [\n                      'Karpas-422-ENCODE', // b-cell cell line\n                      'BJAB-Engreitz',\n                      'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n                      'B_cell-ENCODE',\n                      'OCI-LY7-ENCODE',\n                      'GM12878-Roadmap',\n                      'MM.1S-ENCODE',\n                      'CD19-positive_B_cell-Roadmap',\n                      'CD8-positive_alpha-beta_T_cell-ENCODE',\n                    ],\n                  },\n                  {\n                    label: 'T Cells',\n                    categories: [\n                      'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n                      'Jurkat-Engreitz',\n                      'CD3-positive_T_cell-Roadmap',\n                      'CD4-positive_helper_T_cell-ENCODE',\n                      'CD8-positive_alpha-beta_T_cell-Corces2016',\n                      'thymus_fetal-Roadmap',\n                      'CD4-positive_helper_T_cell-Corces2016',\n                      'T-cell-ENCODE',\n                    ],\n                  },\n                  {\n                    label: 'Other haematopoietic cells',\n                    categories: [\n                      'spleen-ENCODE',\n                      'K562-Roadmap',\n                      'CD56-positive_natural_killer_cells-Roadmap',\n                      'erythroblast-Corces2016',\n                      'CD34-positive_mobilized-Roadmap',\n                      'megakaryocyte-erythroid_progenitor-Corces2016',\n                      'natural_killer_cell-Corces2016',\n                      'IMR90-Roadmap',\n                    ],\n                  },\n                  {\n                    label: 'Fibroblasts',\n                    categories: [\n                      'foreskin_fibroblast-Roadmap',\n                      'fibroblast_of_dermis-Roadmap',\n                      'fibroblast_of_arm-ENCODE',\n                      'astrocyte-ENCODE',\n                      'fibroblast_of_lung-Roadmap',\n                    ],\n                  },\n                  {\n                    label: 'Epithelial',\n                    categories: [\n                      'small_intestine_fetal-Roadmap',\n                      'epithelial_cell_of_prostate-ENCODE',\n                      'HCT116-ENCODE',\n                      'MCF-7-ENCODE',\n                      'adrenal_gland_fetal-ENCODE',\n                      'H7',\n                      'keratinocyte-Roadmap',\n                      'MCF10A-Ji2017',\n                      'pancreas-Roadmap',\n                      'mammary_epithelial_cell-Roadmap',\n                      'stomach-Roadmap',\n                      'LoVo',\n                      'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n                      'PC-9-ENCODE',\n                      'H1-hESC-Roadmap',\n                      'thyroid_gland-ENCODE',\n                      'HT29',\n                      'MDA-MB-231',\n                      'iPS_DF_19.11_Cell_Line-Roadmap',\n                      'large_intestine_fetal-Roadmap',\n                      'Panc1-ENCODE',\n                      'adrenal_gland-ENCODE',\n                      'MCF10A_treated_with_TAM24hr-Ji2017',\n                      'trophoblast_cell-ENCODE',\n                      'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n                      'uterus-ENCODE',\n                      'body_of_pancreas-ENCODE',\n                      'stomach_fetal-Roadmap',\n                      'H9-Roadmap',\n                      'transverse_colon-ENCODE',\n                      'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n                      'breast_epithelium-ENCODE',\n                      'induced_pluripotent_stem_cell-ENCODE',\n                      'LNCAP',\n                      'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n                      'ovary-Roadmap',\n                      'sigmoid_colon-ENCODE',\n                      'skeletal_muscle_myoblast-Roadmap',\n                      'bipolar_neuron_from_iPSC-ENCODE',\n                      'coronary_artery_smooth_muscle_cell-Miller2016',\n                      'SK-N-SH-ENCODE',\n                      'muscle_of_trunk_fetal-Roadmap',\n                    ],\n                  },\n                  {\n                    label: 'Other',\n                    categories: [\n                      'adipose_tissue-ENCODE',\n                      'HeLa-S3-Roadmap',\n                      'hepatocyte-ENCODE',\n                      'heart_ventricle-ENCODE',\n                      'spinal_cord_fetal-ENCODE',\n                      'coronary_artery-ENCODE',\n                      'HepG2-Roadmap',\n                      'muscle_of_leg_fetal-Roadmap',\n                      'gastrocnemius_medialis-ENCODE',\n                      'brite_adipose-Loft2014',\n                      'placenta-Roadmap',\n                      'liver-ENCODE',\n                      'A673-ENCODE',\n                      'white_adipose-Loft2014',\n                      'cardiac_muscle_cell-ENCODE',\n                      'osteoblast-ENCODE',\n                      'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n                      'endothelial_cell_of_umbilical_vein-Roadmap',\n                      'NCCIT',\n                      'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n                      'psoas_muscle-Roadmap',\n                      'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n                      'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n                    ],\n                  },\n                ],\n              },\n            },\n          },\n          {\n            type: 'bed-matrix',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2chr10',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ',\n            height: 403,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: {\n                categoryField: 10,\n                axisShowGroupSeparator: true,\n                // axisNoGroupColor: true,\n                groups: [\n                  {\n                    label: 'Mononuclear Phagocytes',\n                    categories: [\n                      'THP1_LPS_4hr-Engreitz',\n                      'THP_pmaLPS_ATAC_6h',\n                      'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n                      'THP1-Engreitz',\n                      'THP_pmaLPS_ATAC_96h',\n                      'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n                      'THP_pmaLPS_ATAC_72h',\n                      'THP-1_monocyte-VanBortle2017',\n                      'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n                      'CD14-positive_monocyte-ENCODE',\n                      'THP_pmaLPS_ATAC_2h',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n                      'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n                      'U937_LPS_4hr-Engreitz',\n                      'CD14-positive_monocyte-Novakovic2016',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n                      'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n                      'THP_pmaLPS_ATAC_0h',\n                      'HAP1',\n                      'THP-1_macrophage-VanBortle2017',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n                      'U937-Engreitz',\n                      'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n                      'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n                      'THP_pmaLPS_ATAC_24h',\n                      'THP_pmaLPS_ATAC_1h',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n                      'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n                      'THP_pmaLPS_ATAC_120h',\n                      'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n                      'THP_pmaLPS_ATAC_48h',\n                      'CD14-positive_monocytes-Roadmap',\n                      'THP_pmaLPS_ATAC_12h', // monoctye\n                    ],\n                  },\n                  {\n                    label: 'B Cells',\n                    categories: [\n                      'Karpas-422-ENCODE', // b-cell cell line\n                      'BJAB-Engreitz',\n                      'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n                      'B_cell-ENCODE',\n                      'OCI-LY7-ENCODE',\n                      'GM12878-Roadmap',\n                      'MM.1S-ENCODE',\n                      'CD19-positive_B_cell-Roadmap',\n                      'CD8-positive_alpha-beta_T_cell-ENCODE',\n                    ],\n                  },\n                  {\n                    label: 'T Cells',\n                    categories: [\n                      'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n                      'Jurkat-Engreitz',\n                      'CD3-positive_T_cell-Roadmap',\n                      'CD4-positive_helper_T_cell-ENCODE',\n                      'CD8-positive_alpha-beta_T_cell-Corces2016',\n                      'thymus_fetal-Roadmap',\n                      'CD4-positive_helper_T_cell-Corces2016',\n                      'T-cell-ENCODE',\n                    ],\n                  },\n                  {\n                    label: 'Other haematopoietic cells',\n                    categories: [\n                      'spleen-ENCODE',\n                      'K562-Roadmap',\n                      'CD56-positive_natural_killer_cells-Roadmap',\n                      'erythroblast-Corces2016',\n                      'CD34-positive_mobilized-Roadmap',\n                      'megakaryocyte-erythroid_progenitor-Corces2016',\n                      'natural_killer_cell-Corces2016',\n                      'IMR90-Roadmap',\n                    ],\n                  },\n                  {\n                    label: 'Fibroblasts',\n                    categories: [\n                      'foreskin_fibroblast-Roadmap',\n                      'fibroblast_of_dermis-Roadmap',\n                      'fibroblast_of_arm-ENCODE',\n                      'astrocyte-ENCODE',\n                      'fibroblast_of_lung-Roadmap',\n                    ],\n                  },\n                  {\n                    label: 'Epithelial',\n                    categories: [\n                      'small_intestine_fetal-Roadmap',\n                      'epithelial_cell_of_prostate-ENCODE',\n                      'HCT116-ENCODE',\n                      'MCF-7-ENCODE',\n                      'adrenal_gland_fetal-ENCODE',\n                      'H7',\n                      'keratinocyte-Roadmap',\n                      'MCF10A-Ji2017',\n                      'pancreas-Roadmap',\n                      'mammary_epithelial_cell-Roadmap',\n                      'stomach-Roadmap',\n                      'LoVo',\n                      'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n                      'PC-9-ENCODE',\n                      'H1-hESC-Roadmap',\n                      'thyroid_gland-ENCODE',\n                      'HT29',\n                      'MDA-MB-231',\n                      'iPS_DF_19.11_Cell_Line-Roadmap',\n                      'large_intestine_fetal-Roadmap',\n                      'Panc1-ENCODE',\n                      'adrenal_gland-ENCODE',\n                      'MCF10A_treated_with_TAM24hr-Ji2017',\n                      'trophoblast_cell-ENCODE',\n                      'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n                      'uterus-ENCODE',\n                      'body_of_pancreas-ENCODE',\n                      'stomach_fetal-Roadmap',\n                      'H9-Roadmap',\n                      'transverse_colon-ENCODE',\n                      'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n                      'breast_epithelium-ENCODE',\n                      'induced_pluripotent_stem_cell-ENCODE',\n                      'LNCAP',\n                      'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n                      'ovary-Roadmap',\n                      'sigmoid_colon-ENCODE',\n                      'skeletal_muscle_myoblast-Roadmap',\n                      'bipolar_neuron_from_iPSC-ENCODE',\n                      'coronary_artery_smooth_muscle_cell-Miller2016',\n                      'SK-N-SH-ENCODE',\n                      'muscle_of_trunk_fetal-Roadmap',\n                    ],\n                  },\n                  {\n                    label: 'Other',\n                    categories: [\n                      'adipose_tissue-ENCODE',\n                      'HeLa-S3-Roadmap',\n                      'hepatocyte-ENCODE',\n                      'heart_ventricle-ENCODE',\n                      'spinal_cord_fetal-ENCODE',\n                      'coronary_artery-ENCODE',\n                      'HepG2-Roadmap',\n                      'muscle_of_leg_fetal-Roadmap',\n                      'gastrocnemius_medialis-ENCODE',\n                      'brite_adipose-Loft2014',\n                      'placenta-Roadmap',\n                      'liver-ENCODE',\n                      'A673-ENCODE',\n                      'white_adipose-Loft2014',\n                      'cardiac_muscle_cell-ENCODE',\n                      'osteoblast-ENCODE',\n                      'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n                      'endothelial_cell_of_umbilical_vein-Roadmap',\n                      'NCCIT',\n                      'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n                      'psoas_muscle-Roadmap',\n                      'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n                      'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n                    ],\n                  },\n                ],\n              },\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms',\n            'genes',\n            'ibd-snps',\n            'microglia',\n            // 'indicatorStart',\n            // 'indicatorEnd',\n            // 'arcs',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 1,\n            outlineWidth: 0,\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [1761366260, 1761603836],\n      initialYDomain: [1761257024, 1761318261],\n    },\n  ],\n};\n\nconst DEFAULT_HIGLASS_OPTIONS = {\n  sizeMode: 'bounded',\n};\n\nconst Viewer = (props) => {\n  const [focusGene, setFocusGene] = useState('');\n  const [focusVariant, setFocusVariant] = useState('chr10:81046453');\n  const [variantYScale, setVariantYScale] = useState('pValue');\n  const [options, setOptions] = useState(DEFAULT_HIGLASS_OPTIONS);\n  const [viewConfig, setViewConfig] = useState(DEFAULT_VIEW_CONFIG);\n  const higlassApi = useRef(null);\n\n  const updateFocusGeneInHiglass = (name, start, end) => {\n    const newViewConfig = JSON.parse(JSON.stringify(viewConfig));\n    const n = newViewConfig.views[0].tracks.top.length;\n\n    if (name) {\n      newViewConfig.views[0].tracks.top[n - 1].options.focusGene = name;\n      newViewConfig.views[0].overlays[1].options.extent = [[start, end]];\n    } else {\n      delete newViewConfig.views[0].tracks.top[n - 1].options.focusGene;\n      delete newViewConfig.views[0].overlays[1].options.extent;\n    }\n\n    setViewConfig(newViewConfig);\n  };\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    updateFocusGeneInHiglass();\n  };\n\n  const updateFocusVariantInHiglass = (variant) => {\n    const newViewConfig = deepClone(viewConfig);\n    // const n = newViewConfig.views.length;\n\n    const absPosition = toAbsPosition(variant, props.chromInfo);\n    const focusRegion = Number.isNaN(+absPosition)\n      ? []\n      : [absPosition - 0.5, absPosition + 0.5];\n\n    newViewConfig.views[0].tracks.top[2].options.focusRegion = focusRegion;\n    newViewConfig.views[0].tracks.top[4].options.focusRegion = focusRegion;\n    // newViewConfig.views[0].tracks.top[n - 1].options.focusRegion = focusRegion;\n    newViewConfig.views[0].overlays[0].options.extent = [focusRegion];\n\n    setViewConfig(newViewConfig);\n  };\n\n  const updateFocusVariantInHiglassDb = debounce(\n    updateFocusVariantInHiglass,\n    500\n  );\n\n  const focusVariantChangeHandler = (event) => {\n    setFocusVariant(event.target.value);\n    updateFocusVariantInHiglassDb(event.target.value);\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    updateFocusVariantInHiglass('');\n  };\n\n  const updateVariantYScaleInHiglass = (yScale) => {\n    const newViewConfig = deepClone(viewConfig);\n\n    newViewConfig.views[0].tracks.top[2].options.valueColumn =\n      yScale === 'pValue' ? 7 : 8;\n\n    setViewConfig(newViewConfig);\n  };\n\n  const variantYScaleChangeHandler = (event) => {\n    setVariantYScale(event.target.value);\n    updateVariantYScaleInHiglass(event.target.value);\n  };\n\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      updateFocusGeneInHiglass(\n        event.payload.name,\n        event.payload.xStart,\n        event.payload.xEnd\n      );\n    } else if (event.type === 'snp') {\n      setFocusVariant(`${event.payload.fields[0]}:${event.payload.fields[1]}`);\n      updateFocusVariantInHiglass(event.payload.xStart);\n    }\n  };\n\n  const higlassInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassApi.current = higlassInstance.api;\n      higlassInstance.api.on('click', higlassClickHandler);\n    }\n  }, []);\n\n  return (\n    <div className=\"Viewer\">\n      <aside>\n        <div>\n          <label htmlFor=\"focus-gene\" className=\"main-label\">\n            Focus gene:\n          </label>\n          <div className=\"flex-box\">\n            <input\n              type=\"text\"\n              id=\"focus-gene\"\n              value={focusGene}\n              readOnly\n              disabled\n              placeholder=\"Click on a gene\"\n            />\n            <button onClick={clearFocusGene}>clear</button>\n          </div>\n        </div>\n        <div>\n          <label htmlFor=\"focus-variant\" className=\"main-label\">\n            Focus variant:\n          </label>\n          <div className=\"flex-box\">\n            <input\n              type=\"text\"\n              id=\"focus-variant\"\n              value={focusVariant}\n              onChange={focusVariantChangeHandler}\n              placeholder=\"chr10:81046453\"\n            />\n            <button onClick={clearFocusVariant}>clear</button>\n          </div>\n        </div>\n        <div>\n          <label className=\"main-label\">Variant y-scale:</label>\n          <RadioGroup\n            name=\"variantYScale\"\n            onChange={variantYScaleChangeHandler}\n          >\n            <RadioButton\n              label=\"p-value\"\n              value=\"pValue\"\n              checked={variantYScale === 'pValue'}\n            />\n            <RadioButton\n              label=\"Posterior probability\"\n              value=\"posteriorProbability\"\n              checked={variantYScale === 'posteriorProbability'}\n            />\n          </RadioGroup>\n        </div>\n      </aside>\n      <div className=\"higlass-container\">\n        <HiGlassComponent\n          ref={higlassInitHandler}\n          viewConfig={viewConfig}\n          options={options}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Viewer;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport Viewer from './Viewer';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const AppViewer = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(Viewer);\n\n  return (\n    <div className=\"App\">\n      <AppViewer chromInfo={chromInfo} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import createIntervalTree from 'interval-tree-1d';\nimport { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [\n  pt.opacity,\n  pt.opacity,\n  pt.opacity,\n  pt.opacity,\n  // pt.opacity,\n  // pt.opacity,\n];\n\nconst pointToFocused = (pt) => [\n  pt.focused,\n  pt.focused,\n  pt.focused,\n  pt.focused,\n  // pt.focused,\n  // pt.focused,\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createBedMatrixTrack = function createBedMatrixTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class BedMatrixTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const dataToPoint = this.itemToIndicatorReducer(\n        this.itemToIndicatorCategory.bind(this)\n      );\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      this.renderIndicatorPoints();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(trackX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(trackY))\n      );\n\n      const xAbsLo = this._xScale.invert(trackX - 1);\n      const xAbsHi = this._xScale.invert(trackX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      if (foundItem) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(foundItem).toFixed(2);\n        return `<div style=\"margin: 0 -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new BedMatrixTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateBedMatrixTrack.config = {\n  type: 'bed-matrix',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createBedMatrixTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo && !this.options.toolTip) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst DEFAULT_COLOR_MAP = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const row = [];\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        row.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = row.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = row[group].toFixed(2);\n        return `<div style=\"margin: 0 -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createBedMatrixTrack from './bed-matrix-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\n\nregister({\n  name: 'ScalableArcs1dTrack',\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  name: 'BedMatrixTrack',\n  track: createBedMatrixTrack,\n  config: createBedMatrixTrack.config,\n});\n\nregister({\n  name: 'SnpTrack',\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  name: 'StackedBarTrack',\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}