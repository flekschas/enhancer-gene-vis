{"version":3,"sources":["AppInitializing.js","AppError.js","use-debounce.js","CheckboxList.js","constants.js","utils.js","use-previous.js","EnhancerGenePlot.js","Logo.js","SearchField.js","Welcome.js","use-query-string.js","Viewer.js","with-either.js","App.js","serviceWorker.js","annotation-overlay-meta-track.js","ridge-plot-track.js","stratified-bed-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","tss-track.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","backgroundColor","AppInitializing","classes","className","Backdrop","open","CircularProgress","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","root","position","checkbox","marginTop","marginBottom","checkboxLabel","fontSize","marginLeft","nestedCheckbox","CheckboxList","options","groupColorsDark","groupColorsLight","optionGroupChecked","setOptionGroupChecked","optionsChecked","setOptionsChecked","optionsFiltered","setOptionsFiltered","filter","setFilter","debouncedFilter","isNested","useMemo","length","nestedOptions","reduce","out","optionGroup","name","flattenedOptions","flatMap","f","toLowerCase","o","option","indexOf","optionGroupChangeHandler","useCallback","event","newOptionsChecked","target","forEach","checked","optionChangeHandler","filterChangeHandler","noFilter","FormControl","variant","margin","fullWidth","InputLabel","htmlFor","Grid","container","direction","alignItems","style","OutlinedInput","id","label","onChange","FormGroup","map","i","Fragment","key","FormControlLabel","control","Checkbox","icon","checkedIcon","Typography","noWrap","EPS","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","GENE_SEARCH_URL","VARIANT_SEARCH_URL","DEFAULT_STRATIFICATION","categoryField","axisShowGroupSeparator","axisNoGroupColor","groups","categories","DEFAULT_VIEW_CONFIG_ENHANCER","editable","trackSourceServers","views","uid","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","visible","chromInfoPath","tracks","top","type","height","contents","stroke","fontIsLeftAligned","showMousePosition","mousePositionColor","tilesetUid","server","fromViewUid","projectionFillColor","projectionStrokeColor","projectionFillOpacity","projectionStrokeOpacity","strokeWidth","plusStrandColor","minusStrandColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","showGlobalMousePosition","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","focusRegion","labelPosition","labelColor","toolTip","field","numDecimals","other","binSize","axisAlign","arcStyle","indicatorStyle","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","legendAlign","markColorHighlight","markColorDehighlight","markMinWidth","markHeight","rowHeight","overlays","includes","extent","minWidth","fill","fillOpacity","outline","outlineOpacity","outlineWidth","outlinePos","metaTracks","overlaysTrack","annotationTracks","layout","w","h","x","y","initialXDomain","initialYDomain","DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY","zoomFixed","labelShowResolution","labelShowAssembly","markArea","markResolution","valueScaling","colorRange","rowPadding","rowNormalization","rowSelections","rowIdToCategory","fn","args","rowCategories","row","group","index","category","axisLabelColor","background","axisLabelBackground","sample","showRowLabels","rowLabelSize","contains","a","b","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","rgba","Float32Array","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","dashSize","diff","sign","width","abs","stepSize","numSteps","moveTo","lineTo","getQueryStringValue","decoder","identity","queryString","parse","window","location","search","setQueryStringValue","encoder","values","newQsValue","stringify","strict","url","origin","pathname","history","pushState","path","toAbsPosition","chromInfo","absPosition","split","chrom","pos","chrPositions","toFixed","number","decimals","forced","string","substring","scaleBand","domain","fixedBandwidth","bandwidth","range","rangeSize","paddingInner","paddingInnerZeroBased","totalWidth","sum","getBandwidth","update","totalPaddingInner","scale","v","idx","slice","newDomain","newRange","newFixedBandwidth","newPaddingInner","newPaddingInnerZeroBased","usePrevious","ref","useRef","current","palette","grey","minHeight","plot","flexGrow","plotSvg","useTooltipStyles","arrow","tooltip","boxShadow","padding","borderRadius","uuid","fetchTile","tileId","fetch","response","json","samples","size","j","getTileWidth","tilesetInfo","max_width","max_zoom","filterByPosition","tile","entry","dodge","data","radius","yScale","radius2","circles","d","sort","head","tail","intersects","next","Infinity","plotEnhancerGeneConnections","node","geneCellEncoding","prevGeneCellEncoding","genePadding","openTooltip","closeTooltip","tooltipClasses","svg","select","paddingTop","paddingBottom","circleRadius","circlePadding","geneLabelPadding","beeswarmPadding","distanceBarWidth","distPaddingRange","Object","attr","maxCatgorySize","categoryAggregation","cat","numEnhancers","categorySizeScale","scaleLog","clamp","percentScale","scaleLinear","circleYScalePre","circleYScalePost","circleYScale","geneContainerWidth","maxGenes","floor","genesUpstream","genesUpstreamByDist","reverse","genesDownstream","genesDownstreamByDist","minMax","gene","min","relDistance","minRelDistance","maxRelDistance","paddingScale","genesUpstreamPadding","round","genesUpstreamScale","genesDownstreamPadding","genesDownstreamScale","genesUpstreamLeftPad","minVisibleAbsDist","minDist","absDistance","maxVisibleAbsDist","maxDist","distanceHeightScale","plotBeeswarm","selection","isRightAligned","selectAll","join","getArrayNumCols","genes","maxSize","samplesByCategory","plotArray","numCols","instanceCache","onMouseEnter","onMouseLeave","tooltipTitleGetter","cellSize","indexToX","indexToY","on","bBox","getBoundingClientRect","title","placement","sampleCategory","arrayTooltipTitleGetter","geneArrayInstances","upstream","downstream","geneArrayInstanceMouseEnterHandler","dHovering","opacity","geneArrayInstanceMouseLeaveHandler","plotBox","valueScale","valueGetter","cellWidth","fillColor","textColor","showText","showZero","showTooltip","bg","text","boxTooltipTitleGetter","enhancerG","enhancerGCellG","genesUpstreamG","geneLabelX","geneLabelY","genesUpstreamGCellG","item","remove","genesDownstreamG","genesDownstreamGCellG","distRange","distStep","tickValues","Array","call","axisRight","tickSize","tickFormat","s","this","parentNode","nextSibling","g","EnhancerGenePlot","relPosition","fullPosition","styles","svgRef","plotEl","setPlotEl","setTile","isLoadingTile","setIsLoadingTile","setTilesetInfo","setWidth","prevWidth","active","tileWidth","tileXPos","then","_tile","plotElRef","isInit","maxScore","minAbsDistance","maxAbsDistance","entries","distComparator","TinyQueue","geneName","fields","relGenePos","distance","isDownstream","push","importance","genesDownstreamByDistArr","pop","genesUpstreamByDistArr","prevGene","results","useLayoutEffect","measure","requestAnimationFrame","currWidth","addEventListener","removeEventListener","justify","defaultProps","logo","lineHeight","fontWeight","logoAbc","letterSpacing","paddingRight","logoEnhancer","Logo","props","inputRoot","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","transition","focused","input","textFieldRoot","transform","fetchJsonFromUrl","query","result","GeneIcon","SvgIcon","viewBox","GeneOption","VariantOption","Option","SearchField","setOpen","setOptions","inputValue","searchQuery","setSearchQuery","debouncedSearchQuery","loading","autocompleteClasses","customSearch","searchUrl","whenResults","isArray","Promise","all","flat","multiple","autocompleteOptions","Autocomplete","larger","newValue","onInputChange","newInputValue","onOpen","onClose","getOptionSelected","_value","getOptionLabel","renderInput","params","TextField","InputProps","endAdornment","renderOption","renderTags","getTagProps","Chip","note","showTutorial","marginRight","startExploring","Welcome","tutorial","setTutorial","align","Button","onClick","infoCloseHandler","disableElevation","component","href","rel","useQueryString","initialValue","undefined","setValue","onSetValue","black","gray","pink","display","right","bottom","left","h1","modal","justifyContent","paper","shadows","maxWidth","maxHeight","overflow","spacing","iconRadio","iconRadioActive","iconRadioLegend","appBar","common","white","flexShrink","drawerGrid","drawerPaper","settings","globalSettingsTitle","settingsContent","textInput","toolbar","mixins","content","flexDirection","grow","fullWidthHeight","higlass","higlassEnhancerContainer","flexWrap","higlassEnhancer","higlassDnaAccessibility","titleBar","titleBarText","titleBarContainer","titleBarTitle","titleBarIcon","titleBarIconActive","titleBarHelpPopeover","infoBarTitle","panZoomTip","animation","userSelect","panZoomTipActive","higlassEnhancerInfoBar","borderTop","borderBottom","higlassEnhancerGenePlot","higlassEnhancerGenePlotPlaceholder","fontStyle","enhancerGeneTooltip","pointerEvents","dnaAccessibilityInfoBar","dnaAccessibilityInfoBarRegion","higlassSeparator","titleBarMiddle","titleBarMiddleContent","toolbarExtra","paddingLeft","globalSettingsFirstBox","chrPosUrlEncoder","chrPos","replace","chrPosUrlDecoder","getFocusGeneRegion","viewConfig","getFocusVariantRegion","updateViewConfigXDomain","newXDomainStart","newXDomainEnd","force","_force","isFunction","xDomain","focusGeneRegion","focusVariantRegion","Number","isNaN","updateViewConfigFocusVariant","trackIdxs","trackIdx","updateViewConfigVariantYScale","extractCoreFromHiGlassSvg","fifthLn","nthIndexOf","lastLn","lastIndexOf","core","locationSearch","match","chr","txStart","txEnd","score","booleanQueryStringDecoder","Viewer","infoOpen","setInfoOpen","focusGene","setFocusGene","focusVariant","setFocusVariant","hideUnfocused","setHideUnfocused","matrixColoring","setMatrixColoring","variantYScale","setVariantYScale","dnaAccessLabels","setDnaAccessLabels","absToChr","xDomainStart","setXDomainStart","xDomainEnd","setXDomainEnd","showEnhancerRegionDetails","setShowEnhancerRegionDetails","showEnhancerGeneDetails","setShowEnhancerGeneDetails","showDnaAccessDetails","setShowDnaAccessDetails","setGenePadding","setGeneCellEncoding","focusGeneOption","setFocusGeneOption","focusVariantOption","setFocusVariantOption","prevFocusGeneOption","prevFocusVariantOption","higlassEnhancerApi","higlassEnhancerMouseDown","higlassDnaAccessApi","enhancerGeneSvgRef","higlassEnhancerHelpAnchorEl","setHiglassEnhancerHelpAnchorEl","dnaAccessHelpAnchorEl","setdnaAccessHelpAnchorEl","enhancerRegionSettingsAnchorEl","setEnhancerRegionSettingsAnchorEl","enhancerGeneSettingsAnchorEl","setEnhancerGeneSettingsAnchorEl","dnaAccessSettingsAnchorEl","setDnaAccessSettingsAnchorEl","show","setEnhancerGeneTooltip","higlassEnhancerMouseOver","setHiglassEnhancerMouseOver","higlassEnhancerFocus","setHiglassEnhancerFocus","higlassEnhancerContainerRef","higlassEnhancerClickSelection","focusGeneVariantOptions","_focusGeneVariant","focusGeneStartPosition","focusGeneEndPosition","focusVariantPosition","focusVariantRelPosition","focusVariantFullPosition","xDomainStartAbs","xDomainEndAbs","xDomainStartAbsDb","xDomainEndAbsDb","shouldSkipUpdatingXDomain","viewConfigEnhancer","pipe","start","end","n","focusStyle","updateViewConfigFocusStyle","coloring","opacityEncoding","deepClone","viewConfigEnhancerHeight","track","viewConfigDnaAccessibility","labels","enhancerViewRange","enhancerViewCenter","midPos","getDnaAccessibilityXDomain","dnaAccessibilityRegionSize","numericalXDomainStart","isString","chrToAbs","numericalXDomainEnd","higlassEnhancerBlockClasses","clearFocusGene","clearFocusVariant","focusVariantChangeHandler","changeVariantYScale","changeMatrixColoring","changeDnaAccessLabels","changeGeneCellEncoding","higlassClickHandler","payload","console","log","higlassLocationChangeHandlerDb","debounce","absPos","r","windowMouseDownClearHandler","e","isParentOf","higlassEnhancerMouseDownHandler","higlassEnhancerInitHandler","higlassInstance","api","getComponent","element","higlassDnaAccessibilityInitHandler","higlassEnhancerHelpOpen","Boolean","higlassEnhancerHelpId","dnaAccessHelpOpen","dnaAccessHelpId","enhancerRegionSettingsOpen","enhancerRegionSettingsId","enhancerGeneSettingsOpen","enhancerGeneSettingsId","dnaAccessSettingsOpen","dnaAccessSettingsId","openEnhancerGeneTooltip","closeEnhancerGeneTooltip","higlassEnhancerFocusHandler","higlassEnhancerBlurHandler","higlassEnhancerContainerMouseEnterHandler","higlassEnhancerContainerMouseLeaveHandler","mergeSvgs","enhancerSvg","dnaAccessSvg","enhancerGeneSvg","enhancerSvgCore","enhancerWidth","enhancerHeight","dnaAccessSvgCore","dnaAccessWidth","dnaAccessHeight","firstSvgClosingBracket","lastSvgOpeningBracket","extractCoreFromStringifiedSvg","enhancerGeneSvgCore","enhancerGeneHeight","actualEnhancerHeight","actualDnaAccessHeight","mergedSvg","enhancerRegionDetailsIconClass","enhancerRegionSettingsIconClass","enhancerGeneDetailsIconClass","enhancerGeneSettingsIconClass","dnaAccessDetailsIconClass","dnaAccessSettingsIconClass","CssBaseline","AppBar","Toolbar","newValues","newFocusElements","warn","Drawer","anchor","ButtonBase","Divider","Box","m","newViewConfig","zoomTo","startIcon","exportAsSvg","XMLSerializer","serializeToString","filename","stringOrBlob","blob","Blob","navigator","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","wrap","IconButton","aria-label","aria-describedby","currentTarget","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Switch","FormLabel","RadioGroup","sizeMode","globalMousePosition","onMouseDown","onFocus","onBlur","tabIndex","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","Tooltip","Modal","aria-labelledby","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","withEither","ifEitherFn","EitherComponent","Component","createMuiTheme","primary","main","secondary","App","setChromInfo","ChromosomeInfo","_chromInfo","totalLength","catch","AppViewer","AppError","ThemeProvider","hostname","createAnnotationOverlayMetaTrack","HGC","Error","pubSub","services","AnnotationOverlayMetaTrack","context","definition","getTrackObject","animate","onNewTilesLoaded","annotationTrackIds","Set","add","annotationDrawnHandlerBound","annotationDrawnHandler","bind","tilesDrawnEndHandlerBound","tilesDrawnEndHandler","drawnAnnotations","Map","tracksDrawingTiles","pubSubs","subscribe","xStartAbs","xEndAbs","set","unsubscribe","has","updateOverlays","from","draw","clear","config","availableOptions","defaultOptions","FLOAT_BYTES","BYTES_PER_ELEMENT","VS","FS","COLORMAP_GRAYS","getMax","fetchedTiles","maxValue","tileData","maxNonZero","getNumRows","coarseShape","getRowMaxs","maxVector","maxValueByRow","scaleGraphics","xScale","drawnAtScale","tileK","posOffset","getNumPointsPerRow","numRows","positions","createRidgePlotTrack","libraries","format","d3Format","d3Scale","tileProxy","RidgePlotTrack","updateOptions","pLoading","Graphics","pMasked","addChild","loadIndicator","Text","labelSize","coarsifyTileValues","bins_per_dimension","zoomLevel","tilePos","binsPerTileIn","binsPerTile","resolutions","chosenResolution","tileHeight","tileX","tileY","xTilePos","yTilePos","minX","min_pos","minY","reverseYAxis","max_pos","selectRowsAggregationMode","selectRowsAggregationFn","maxNan","minNan","sumNan","meanNan","markAreaColor","utils","colorToHex","markColorRgbNorm","colorToRgba","markColorTex","markColorTexRes","markNumColors","oldMarkResolution","TILE_SIZE","oldRowHeight","oldRowPadding","oldRowNormalization","oldRowSelections","updateTiles","updateScales","oldShowRowLabels","updateRowLabels","drawLabel","rowLabelAlign","pAxis","children","removeChildAt","rowLabels","rowLabel","destroy","row_infos","rowIndex","removeRowLabels","indicator","Sprite","WHITE","tint","dimensions","yStart","xLabelOffset","getRowHeight","rowStepHeight","rowStepYCenter","newOptions","updateExistingGraphics","getTilePosAndDimensions","shape","binSizePx","binSizeBp","binSizeBpHalf","binXPos","valuesByRow","meanValue","dense","subarray","rowIdx","actualTrackHeight","getTrackHeight","globalMax","colorIndexScale","rowMaxs","rowValueScales","rowColorIndexScales","valueScaleByRow","colorIndexScaleByRow","rowScale","tiles","maxRows","positionsByRow","colorIndicesByRow","offsetSignsByRow","_xScale","size2d","size1d","unshift","numPointsPerRow","verticesPerLine","verticesPerPoint","indices","Uint32Array","k","p1a","p1b","p1c","p1d","p2a","p2b","p2c","p2d","indexOffset","visibleTrackHeight","tilesToData","colorIndices","offsetSigns","toLineIndices","uniforms","UniformGroup","uLineColor","uNaNColor","uAreaColorTex","uAreaColorTexRes","uWidth","uMiter","shader","Shader","geometry","Geometry","numVerticesPoint","addAttribute","TYPES","FLOAT","addIndex","mesh","Mesh","newGraphics","pMain","lineGraphics","updateLoadIndicator","hasFetchedTiles","renderLines","fetching","newPosition","newXScale","newYScale","refreshTiles","trackX","trackY","calculateZoomLevel","calculateTileWidth","tile_size","invert","posInTileX","rowSelection","tileToLocalId","fetchedTile","selectRowsAggregationMethod","rowI","rowInfo","getVisibleData","svgns","base","setAttribute","output","stride","createLine","line","posPerRow","posToPoints","arr","numColors","defs","createElementNS","linearGradient","stop","insertBefore","firstChild","l","y0","firstComma","firstX","firstY","lastComma","lastX","lastY","HorizontalLine1DPixiTrack","datatype","orientation","pointToPosition","pt","cX","widthHalf","pointToIndex","pointToOpacity","pointToHighlight","highlight","getItemDistance","getMaxDistance","maxDistItem","scaleScalableGraphics","getRegionId","createStratifiedBedTrack","MAX_CLICK_DELAY","configs","opacityLogScale","StratifiedBedTrack","pLegend","legendMin","legendMax","interactive","interactiveChildren","alpha","mousedownTime","performance","now","mousedown","mouseup","clickHandler","intervals","regionId","isLeftToRight","intervalTree","createIntervalTree","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","categoryToY","yToCategory","groupSizes","groupSize","groupLabelsPixiText","markColorHighlightRgbNorm","markColorDehighlightRgbNorm","getImportance","opacityScale","opacityLinearScale","getRegion","getGene","minImportance","updateStratificationOption","heightScale","categoryHeightScale","valueScaleInverted","isHighlighting","get","__focus","__item","filterFn","addFn","filteredItems","reducerVar","accumulator","itemToIndicatorCategory","i1","isItemInFocus","dataToPoint","itemToIndicatorReducer","points","getPoints","Uint16Array","opacities","highlights","uColor","uColorHighlight","uHighlighting","indicatorPointGraphics","yEnd","xTickOffset","xTickEnd","numAxisLabels","lineStyle","labelPixiText","beginFill","drawRect","endFill","legendMinText","legendMaxText","minValue","minTextWidth","getBounds","maxTextWidth","offset","rectHeight","drawRoundedRect","renderIndicatorCategoryAxis","renderIndicatorLegend","renderIndicatorPoints","updateIndicators","relX","relY","foundItem","xAbsLo","xAbsHi","queryInterval","interval","getElementAtPosition","colorHex","toString","bgHex","offsetX","offsetY","global","publish","gAxis","createRect","strokeDasharray","x1","y1","x2","y2","createDashedLine","pixiText","t","_style","_fill","_align","_font","textContent","createText","colorHighlight","renderIndicatorCategoryAxisAsSvg","thumbnail","DOMParser","parseFromString","documentElement","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","getIs2d","get1dItemWidth","get2dItemWidth","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","maxWidthItem","createScalableArcs1dTrack","ScalableArcs1dTrack","is2d","getItemWidth","getStart","getEnd","numBins","pointSize","widthHistogramLeft","widthHistogramRight","bin","histPos","widthHistogramMax","updateTileWidthHistogram","markColorFocusRgbNorm","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","mapFn","pointToFocused","vertexShader","fragmentShader","drawTriangles","uPointSize","uColorFocused","State","DRAW_MODES","TRIANGLES","POINTS","drawAxis","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","storePolyStr","startsWith","drawCircle","drawEllipse","trackWidth","trackHeight","cx","cy","polyStr","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","polys","visibleAndFetchedTiles","drawTile","createSnpTrack","d3Array","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","rectGraphics","finalDotYPos","rows","initialize","circleDraws","circleFocusDraws","td","geneInfo","chrOffset","yMiddle","step","drawnRects","circleDraw","drawPoly","buttonMode","hoveringSnp","relTilePos","dist","itemY","MAX_RADIUS","otherStr","substr","plusStrandRows","renderRows","focusedCircles","c","axis","axisPositionVertical","gDrawnAxis","exportAxisLeftSVG","exportAxisRightSVG","BedLikeTrack","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","histogram1d","histogram2d","histogram2dNumPred","Uint8Array","categoryBinHash","maxBinId","binStart","binEnd","histIdx","binHash","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","rowCumSum","rowNumPred","totalPred","numPred","relYPos","findIndex","createTssTrack","TssTrack","createPubSub","xStartScreen","xEndScreen","register","isMetaTrack","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GACX,8DAEWC,GACX,6DAEWC,GAAyB,CACpCC,cAAe,GACfC,wBAAwB,EACxBC,kBAAkB,EAClBC,OAAQ,CACN,CACExB,MAAO,yBACPyB,WAAY,CACV,wBACA,qBACA,2DACA,0DACA,4DACA,gBACA,sBACA,0DACA,sBACA,+BACA,2DACA,gCACA,qBACA,+EACA,4DACA,wBACA,uCACA,iFACA,0DACA,qBACA,OACA,iCACA,iFACA,gBACA,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACEzB,MAAO,UACPyB,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACEzB,MAAO,UACPyB,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACEzB,MAAO,6BACPyB,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACEzB,MAAO,cACPyB,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACEzB,MAAO,aACPyB,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCACA,0BACA,qDACA,gBACA,0BACA,wBACA,aACA,0BACA,qDACA,2BACA,uCACA,QACA,4CACA,gBACA,uBACA,mCACA,kCACA,gDACA,iBACA,kCAGJ,CACEzB,MAAO,QACPyB,WAAY,CACV,wBACA,kBACA,oBACA,yBACA,2BACA,yBACA,gBACA,8BACA,gCACA,yBACA,mBACA,eACA,cACA,yBACA,6BACA,oBACA,wDACA,6CACA,QACA,2DACA,uBACA,iEACA,sEASKC,GAA+B,CAC1CC,UAAU,EACVC,mBAAoB,CAAC,uBACrBC,MAAO,CACL,CACEC,IAAK,UACLC,wBAAyB,CACvB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","file":"static/js/main.cdd3b186.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#bbb',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst AppInitializing = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"full-wh\">\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport useDebounce from './use-debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n  checkbox: {\n    marginTop: -4,\n    marginBottom: -4,\n  },\n  checkboxLabel: {\n    fontSize: '0.9rem',\n    marginLeft: -4,\n  },\n  nestedCheckbox: {\n    marginLeft: 4,\n  },\n}));\n\nexport default function CheckboxList({\n  options = [],\n  groupColorsDark = [],\n  groupColorsLight = [],\n}) {\n  const [optionGroupChecked, setOptionGroupChecked] = useState({});\n  const [optionsChecked, setOptionsChecked] = useState({});\n  const [optionsFiltered, setOptionsFiltered] = useState({});\n  const [filter, setFilter] = useState('');\n  const debouncedFilter = useDebounce(filter, 250);\n\n  const classes = useStyles();\n\n  const isNested = useMemo(() => options.length > 0 && options[0].options, [\n    options,\n  ]);\n\n  const nestedOptions = useMemo(() => {\n    if (isNested) {\n      return options.reduce((out, optionGroup) => {\n        out[optionGroup.name] = optionGroup.options;\n        return out;\n      }, {});\n    }\n    return null;\n  }, [isNested, options]);\n\n  const flattenedOptions = useMemo(() => {\n    if (isNested) {\n      return [...options.flatMap((optionGroup) => optionGroup.options)];\n    }\n    return options;\n  }, [isNested, options]);\n\n  useEffect(() => {\n    if (debouncedFilter === '') {\n      setOptionsFiltered({});\n      return;\n    }\n    const f = debouncedFilter.toLowerCase();\n    setOptionsFiltered(\n      flattenedOptions.reduce((o, option) => {\n        if (option.toLowerCase().indexOf(f) >= 0) o[option] = true;\n        return o;\n      }, {})\n    );\n  }, [flattenedOptions, debouncedFilter]);\n\n  const optionGroupChangeHandler = useCallback(\n    (event) => {\n      const newOptionsChecked = { ...optionsChecked };\n      nestedOptions[event.target.name].forEach((option) => {\n        newOptionsChecked[option] = event.target.checked;\n      });\n      setOptionGroupChecked({\n        ...optionGroupChecked,\n        [event.target.name]: event.target.checked,\n      });\n      setOptionsChecked(newOptionsChecked);\n    },\n    [nestedOptions, optionsChecked, optionGroupChecked]\n  );\n\n  const optionChangeHandler = useCallback(\n    (event) => {\n      setOptionsChecked({\n        ...optionsChecked,\n        [event.target.name]: event.target.checked,\n      });\n    },\n    [optionsChecked]\n  );\n\n  const filterChangeHandler = useCallback((event) => {\n    setFilter(event.target.value);\n  }, []);\n\n  const noFilter = debouncedFilter === '';\n\n  return (\n    <div className={classes.root}>\n      <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n        <InputLabel htmlFor=\"filter\">\n          <Grid container direction=\"row\" alignItems=\"center\">\n            <FilterListIcon fontSize=\"small\" />\n            <span style={{ marginLeft: 3 }}>Filter</span>\n          </Grid>\n        </InputLabel>\n        <OutlinedInput\n          id=\"filter\"\n          label={\n            <Grid container direction=\"row\" alignItems=\"center\">\n              <FilterListIcon fontSize=\"small\" />\n              <span style={{ marginLeft: 3 }}>Filter</span>\n            </Grid>\n          }\n          onChange={filterChangeHandler}\n          value={filter}\n        />\n      </FormControl>\n      {isNested && (\n        <FormGroup>\n          {options.map((optionGroup, i) => (\n            <React.Fragment key={optionGroup.name}>\n              <FormControlLabel\n                className={classes.checkbox}\n                control={\n                  <Checkbox\n                    style={{\n                      color:\n                        (optionGroupChecked[optionGroup.name]\n                          ? groupColorsDark[i % groupColorsDark.length]\n                          : groupColorsLight[i % groupColorsLight.length]) ||\n                        'inherit',\n                    }}\n                    icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                    checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                    checked={!!optionGroupChecked[optionGroup.name]}\n                    onChange={optionGroupChangeHandler}\n                    name={optionGroup.name}\n                  />\n                }\n                label={\n                  <Typography\n                    className={classes.checkboxLabel}\n                    noWrap\n                    style={{\n                      color:\n                        groupColorsDark[i % groupColorsDark.length] ||\n                        'inherit',\n                    }}\n                  >\n                    <strong>{optionGroup.name}</strong>{' '}\n                    <span>\n                      (\n                      {\n                        optionGroup.options.filter(\n                          (option) => noFilter || optionsFiltered[option]\n                        ).length\n                      }\n                      )\n                    </span>\n                  </Typography>\n                }\n              />\n              {optionGroup.options\n                .filter((option) => noFilter || optionsFiltered[option])\n                .map((option) => (\n                  <FormControlLabel\n                    key={option}\n                    className={`${classes.checkbox} ${classes.nestedCheckbox}`}\n                    control={\n                      <Checkbox\n                        style={{\n                          color:\n                            (optionsChecked[option]\n                              ? groupColorsDark[i % groupColorsDark.length]\n                              : groupColorsLight[\n                                  i % groupColorsLight.length\n                                ]) || 'inherit',\n                        }}\n                        icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n                        checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n                        checked={!!optionsChecked[option]}\n                        onChange={optionChangeHandler}\n                        name={option}\n                      />\n                    }\n                    label={\n                      <Typography\n                        className={classes.checkboxLabel}\n                        noWrap\n                        style={{\n                          color:\n                            groupColorsDark[i % groupColorsDark.length] ||\n                            'inherit',\n                        }}\n                      >\n                        {option}\n                      </Typography>\n                    }\n                  />\n                ))}\n            </React.Fragment>\n          ))}\n        </FormGroup>\n      )}\n    </div>\n  );\n}\n","export const EPS = 1e-6;\n\nexport const SVG_SKELETON = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"_WIDTH_px\" height=\"_HEIGHT_px\">\n    <g id=\"enhancer-plot\">\n    _ENHANCER_\n    </g>\n    <g id=\"enhancer-gene-plot\" transform=\"translate(0, _ENHANCER_GENE_Y_)\">\n    _ENHANCER_GENE_\n    </g>\n    <g id=\"dna-accessibility-plot\" transform=\"translate(_DNA_ACCESS_X_, 0)\">\n    _DNA_ACCESS_\n    </g>\n</svg>`;\n\nexport const DEFAULT_COLOR_MAP = [\n  // '#c17da5', // pink\n  '#c76526', // red\n  '#6fb2e4', // light blue\n  '#eee462', // yellow\n  '#469b76', // green\n  '#3170ad', // dark blue\n  '#dca237', // orange\n  '#000000', // black\n  '#999999', // gray\n];\n\nexport const DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a', // pink\n  '#a65420', // red\n  '#4a7798', // light blue\n  '#999026', // yellow\n  '#3a8162', // green\n  '#295d90', // dark blue\n  '#b7872e', // orange\n  '#000000', // black\n  '#666666', // gray\n];\n\nexport const DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0', // pink\n  '#f6e5db', // red\n  '#e7f2fb', // light blue\n  '#f2eda9', // yellow\n  '#e0eee8', // green\n  '#dde7f1', // dark blue\n  '#f5e4c4', // orange\n  '#d5d5d5', // black\n  '#ffffff', // gray\n];\n\nexport const GENE_SEARCH_URL =\n  'https://higlass.io/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA';\n\nexport const VARIANT_SEARCH_URL =\n  'https://resgen.io/api/v1/suggest/?d=VF5-RDXWTxidGMJU7FeaxA';\n\nexport const DEFAULT_STRATIFICATION = {\n  categoryField: 10,\n  axisShowGroupSeparator: true,\n  axisNoGroupColor: false,\n  groups: [\n    {\n      label: 'Mononuclear Phagocytes',\n      categories: [\n        'THP1_LPS_4hr-Engreitz',\n        'THP_pmaLPS_ATAC_6h',\n        'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n        'THP1-Engreitz',\n        'THP_pmaLPS_ATAC_96h',\n        'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n        'THP_pmaLPS_ATAC_72h',\n        'THP-1_monocyte-VanBortle2017',\n        'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n        'CD14-positive_monocyte-ENCODE',\n        'THP_pmaLPS_ATAC_2h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n        'U937_LPS_4hr-Engreitz',\n        'CD14-positive_monocyte-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n        'THP_pmaLPS_ATAC_0h',\n        'HAP1',\n        'THP-1_macrophage-VanBortle2017',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n        'U937-Engreitz',\n        'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n        'THP_pmaLPS_ATAC_24h',\n        'THP_pmaLPS_ATAC_1h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n        'THP_pmaLPS_ATAC_120h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n        'THP_pmaLPS_ATAC_48h',\n        'CD14-positive_monocytes-Roadmap',\n        'THP_pmaLPS_ATAC_12h', // monoctye\n      ],\n    },\n    {\n      label: 'B Cells',\n      categories: [\n        'Karpas-422-ENCODE', // b-cell cell line\n        'BJAB-Engreitz',\n        'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n        'B_cell-ENCODE',\n        'OCI-LY7-ENCODE',\n        'GM12878-Roadmap',\n        'MM.1S-ENCODE',\n        'CD19-positive_B_cell-Roadmap',\n        'CD8-positive_alpha-beta_T_cell-ENCODE',\n      ],\n    },\n    {\n      label: 'T Cells',\n      categories: [\n        'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n        'Jurkat-Engreitz',\n        'CD3-positive_T_cell-Roadmap',\n        'CD4-positive_helper_T_cell-ENCODE',\n        'CD8-positive_alpha-beta_T_cell-Corces2016',\n        'thymus_fetal-Roadmap',\n        'CD4-positive_helper_T_cell-Corces2016',\n        'T-cell-ENCODE',\n      ],\n    },\n    {\n      label: 'Other haematopoietic cells',\n      categories: [\n        'spleen-ENCODE',\n        'K562-Roadmap',\n        'CD56-positive_natural_killer_cells-Roadmap',\n        'erythroblast-Corces2016',\n        'CD34-positive_mobilized-Roadmap',\n        'megakaryocyte-erythroid_progenitor-Corces2016',\n        'natural_killer_cell-Corces2016',\n        'IMR90-Roadmap',\n      ],\n    },\n    {\n      label: 'Fibroblasts',\n      categories: [\n        'foreskin_fibroblast-Roadmap',\n        'fibroblast_of_dermis-Roadmap',\n        'fibroblast_of_arm-ENCODE',\n        'astrocyte-ENCODE',\n        'fibroblast_of_lung-Roadmap',\n      ],\n    },\n    {\n      label: 'Epithelial',\n      categories: [\n        'small_intestine_fetal-Roadmap',\n        'epithelial_cell_of_prostate-ENCODE',\n        'HCT116-ENCODE',\n        'MCF-7-ENCODE',\n        'adrenal_gland_fetal-ENCODE',\n        'H7',\n        'keratinocyte-Roadmap',\n        'MCF10A-Ji2017',\n        'pancreas-Roadmap',\n        'mammary_epithelial_cell-Roadmap',\n        'stomach-Roadmap',\n        'LoVo',\n        'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n        'PC-9-ENCODE',\n        'H1-hESC-Roadmap',\n        'thyroid_gland-ENCODE',\n        'HT29',\n        'MDA-MB-231',\n        'iPS_DF_19.11_Cell_Line-Roadmap',\n        'large_intestine_fetal-Roadmap',\n        'Panc1-ENCODE',\n        'adrenal_gland-ENCODE',\n        'MCF10A_treated_with_TAM24hr-Ji2017',\n        'trophoblast_cell-ENCODE',\n        'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n        'uterus-ENCODE',\n        'body_of_pancreas-ENCODE',\n        'stomach_fetal-Roadmap',\n        'H9-Roadmap',\n        'transverse_colon-ENCODE',\n        'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n        'breast_epithelium-ENCODE',\n        'induced_pluripotent_stem_cell-ENCODE',\n        'LNCAP',\n        'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n        'ovary-Roadmap',\n        'sigmoid_colon-ENCODE',\n        'skeletal_muscle_myoblast-Roadmap',\n        'bipolar_neuron_from_iPSC-ENCODE',\n        'coronary_artery_smooth_muscle_cell-Miller2016',\n        'SK-N-SH-ENCODE',\n        'muscle_of_trunk_fetal-Roadmap',\n      ],\n    },\n    {\n      label: 'Other',\n      categories: [\n        'adipose_tissue-ENCODE',\n        'HeLa-S3-Roadmap',\n        'hepatocyte-ENCODE',\n        'heart_ventricle-ENCODE',\n        'spinal_cord_fetal-ENCODE',\n        'coronary_artery-ENCODE',\n        'HepG2-Roadmap',\n        'muscle_of_leg_fetal-Roadmap',\n        'gastrocnemius_medialis-ENCODE',\n        'brite_adipose-Loft2014',\n        'placenta-Roadmap',\n        'liver-ENCODE',\n        'A673-ENCODE',\n        'white_adipose-Loft2014',\n        'cardiac_muscle_cell-ENCODE',\n        'osteoblast-ENCODE',\n        'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n        'endothelial_cell_of_umbilical_vein-Roadmap',\n        'NCCIT',\n        'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n        'psoas_muscle-Roadmap',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n      ],\n    },\n  ],\n};\n\nexport const DEFAULT_X_DOMAIN_START = 1761366260;\nexport const DEFAULT_X_DOMAIN_END = 1761603836;\n\nexport const DEFAULT_VIEW_CONFIG_ENHANCER = {\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'context',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'combined',\n            uid: 'chroms-viewport',\n            height: 12,\n            contents: [\n              {\n                type: 'horizontal-chromosome-labels',\n                options: {\n                  // tickPositions: 'ends',\n                  color: '#999999',\n                  stroke: 'white',\n                  fontSize: 10,\n                  fontIsLeftAligned: true,\n                  showMousePosition: false,\n                  mousePositionColor: '#000000',\n                },\n                tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n                height: 12,\n                server: 'https://resgen.io/api/v1',\n                uid: 'chroms',\n              },\n              {\n                uid: 'viewport-details-chroms',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 12,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'genes-tss-viewport',\n            height: 48,\n            contents: [\n              {\n                type: 'horizontal-gene-annotations',\n                uid: 'genes',\n                height: 48,\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 10,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 0.5,\n                  showMousePosition: true,\n                  showGlobalMousePosition: true,\n                  mousePositionColor: 'black',\n                },\n              },\n              {\n                type: 'tss',\n                uid: 'tss',\n                height: 48,\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'RefSeqCurated170308bedCollapsedGeneBoundsTSS500bp',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VMZDLKrtQDmJMSjg7Ds4yA',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                uid: 'viewport-details-genes',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 48,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'point-annotation',\n            uid: 'ibd-snps',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 32,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD Variants',\n              labelPosition: 'topLeft',\n              labelColor: '#757575',\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            type: 'stacked-bar',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 72,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: DEFAULT_STRATIFICATION,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n          {\n            type: 'stratified-bed',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 413,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              legendAlign: 'left',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorHighlight: '#bf0071',\n              markColorDehighlight: '#bbbbbb',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: DEFAULT_STRATIFICATION,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms-viewport',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes-tss-viewport'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 0,\n            outlineWidth: 0,\n          },\n        },\n        {\n          uid: 'tss-overlays',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [],\n            minWidth: 1,\n            fill: 'black',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: 'black',\n            outlineOpacity: 0.1,\n            outlineWidth: 1,\n            outlinePos: ['left'],\n          },\n        },\n      ],\n      metaTracks: [\n        {\n          uid: 'tss-overlays-meta',\n          type: 'annotation-overlay',\n          overlaysTrack: 'tss-overlays',\n          options: {\n            annotationTracks: ['tss'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n      initialYDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n    },\n  ],\n};\n\nexport const DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY = {\n  zoomFixed: false,\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'details',\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            uid: 'chroms',\n            type: 'horizontal-chromosome-labels',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n            height: 17,\n            options: {\n              // tickPositions: 'ends',\n              color: '#999999',\n              stroke: 'white',\n              fontSize: 10,\n              fontIsLeftAligned: true,\n              showMousePosition: false,\n              mousePositionColor: '#000000',\n            },\n          },\n          {\n            uid: 'genes',\n            type: 'horizontal-gene-annotations',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n            height: 48,\n            options: {\n              fontSize: 9,\n              plusStrandColor: 'black',\n              minusStrandColor: 'black',\n              geneAnnotationHeight: 10,\n              geneLabelPosition: 'outside',\n              geneStrandSpacing: 0.5,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n          {\n            uid: 'ibd-snps',\n            type: 'point-annotation',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 32,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD Variants',\n              labelPosition: 'topLeft',\n              labelColor: '#757575',\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            uid: 'dna-accessibility',\n            type: 'ridge-plot',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'test',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'Uz1_tEABQf-uzktblvBKSQ',\n            // height: 403,\n            height: 131 * (24 - 6) + 6,\n            options: {\n              name: 'DNA Accessibility',\n              labelPosition: 'outerBottom',\n              labelShowResolution: false,\n              labelShowAssembly: false,\n              markArea: true,\n              markColor: '#444444',\n              markResolution: 256,\n              valueScaling: 'exponential',\n              colorRange: ['#ffffff', '#000000'],\n              rowHeight: 24,\n              rowPadding: -6,\n              rowNormalization: true,\n              rowSelections: [\n                120,\n                36,\n                54,\n                20,\n                80,\n                35,\n                101,\n                49,\n                44,\n                23,\n                30,\n                66,\n                5,\n                26,\n                15,\n                105,\n                57,\n                56,\n                74,\n                84,\n                79,\n                93,\n                106,\n                107,\n                34,\n                28,\n                25,\n                55,\n                121,\n                94,\n                58,\n                69,\n                67,\n                63,\n                126,\n                71,\n                72,\n                47,\n                11,\n                46,\n                39,\n                113,\n                29,\n                60,\n                45,\n                76,\n                21,\n                103,\n                129,\n                13,\n                128,\n                90,\n                104,\n                32,\n                109,\n                27,\n                9,\n                130,\n                95,\n                86,\n                53,\n                73,\n                50,\n                48,\n                78,\n                14,\n                92,\n                124,\n                31,\n                114,\n                64,\n                88,\n                12,\n                10,\n                38,\n                68,\n                3,\n                111,\n                70,\n                22,\n                61,\n                98,\n                6,\n                123,\n                118,\n                43,\n                37,\n                65,\n                81,\n                62,\n                33,\n                1,\n                24,\n                122,\n                83,\n                75,\n                112,\n                40,\n                97,\n                16,\n                117,\n                87,\n                19,\n                125,\n                7,\n                102,\n                116,\n                77,\n                8,\n                17,\n                82,\n                115,\n                89,\n                119,\n                18,\n                4,\n                108,\n                59,\n                127,\n                91,\n                0,\n                100,\n                85,\n                110,\n                99,\n                2,\n                96,\n                51,\n                41,\n                52,\n                42,\n              ],\n              rowIdToCategory: {\n                fn: 'replace',\n                args: ['.accessibility', ''],\n              },\n              rowCategories: DEFAULT_STRATIFICATION.groups.reduce(\n                (row, group, index) => {\n                  const category = {\n                    label: group.label,\n                    color: group.axisLabelColor,\n                    background: group.axisLabelBackground,\n                    index,\n                  };\n                  group.categories.forEach((sample) => {\n                    row[sample] = category;\n                  });\n                  return row;\n                },\n                {}\n              ),\n              showRowLabels: true,\n              rowLabelSize: 10,\n              showMousePosition: true,\n              showGlobalMousePosition: true,\n              mousePositionColor: 'black',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: ['chroms', 'genes', 'ibd-snps', 'dna-accessibility'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n      initialYDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n    },\n  ],\n};\n","import { identity } from '@flekschas/utils';\nimport queryString from 'query-string';\n\nexport const contains = (a, b) => a[0] <= b[0] && a[1] >= b[1];\n\nexport const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nexport const dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nexport const download = (filename, stringOrBlob) => {\n  const blob =\n    typeof stringOrBlob === 'string'\n      ? new Blob([stringOrBlob], { type: 'application/octet-stream' })\n      : stringOrBlob;\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    const elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n    URL.revokeObjectURL(elem.href);\n  }\n};\n\nexport const getQueryStringValue = (key, decoder = identity) =>\n  decoder(queryString.parse(window.location.search)[key]);\n\nexport const setQueryStringValue = (key, value, encoder = identity) => {\n  const values = queryString.parse(window.location.search);\n  const newQsValue = queryString.stringify(\n    {\n      ...values,\n      [key]: encoder(value),\n    },\n    { strict: false }\n  );\n  const url = `${window.location.origin}${window.location.pathname}?${newQsValue}`;\n  window.history.pushState({ path: url }, '', url);\n};\n\nexport const toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n\nexport const toFixed = (number, decimals, forced) => {\n  let string = number.toFixed(decimals);\n  if (!forced) {\n    while (string[string.length - 1] === '0') {\n      string = string.substring(0, string.length - 1);\n    }\n    if (string[string.length - 1] === '.') {\n      string = string.substring(0, string.length - 1);\n    }\n  }\n  return string;\n};\n\nexport const scaleBand = () => {\n  let domain = [];\n  let fixedBandwidth = null;\n  let bandwidth = 1;\n  let range = [0, 1];\n  let rangeSize = range[1] - range[0];\n  let paddingInner = [];\n  // If `true` the padding will begin before the first bar!\n  let paddingInnerZeroBased = false;\n  let totalWidth = 0;\n\n  const sum = (a, b) => a + b;\n  const getBandwidth = () => fixedBandwidth || bandwidth;\n\n  const update = () => {\n    rangeSize = range[1] - range[0];\n\n    const totalPaddingInner = paddingInner.reduce(sum, 0);\n    bandwidth = (rangeSize - totalPaddingInner) / domain.length;\n    totalWidth = totalPaddingInner + domain.length * getBandwidth();\n  };\n\n  const scale = (v) => {\n    const idx = domain.indexOf(v);\n\n    if (idx === -1) return undefined;\n\n    return (\n      idx * getBandwidth() +\n      paddingInner.slice(0, idx + paddingInnerZeroBased).reduce(sum, 0)\n    );\n  };\n\n  scale.domain = (newDomain) => {\n    if (newDomain) {\n      domain = [...newDomain];\n      update();\n      return scale;\n    }\n\n    return domain;\n  };\n\n  scale.range = (newRange) => {\n    if (newRange) {\n      range = [...newRange];\n      update();\n      return scale;\n    }\n\n    return range;\n  };\n\n  scale.bandwidth = () => getBandwidth();\n\n  scale.fixedBandwidth = (newFixedBandwidth) => {\n    if (newFixedBandwidth) {\n      fixedBandwidth = newFixedBandwidth;\n      update();\n      return scale;\n    }\n\n    return newFixedBandwidth;\n  };\n\n  scale.totalWidth = () => totalWidth;\n\n  scale.rangeSize = () => rangeSize;\n\n  scale.paddingInner = (newPaddingInner) => {\n    if (newPaddingInner) {\n      paddingInner = newPaddingInner;\n      update();\n      return scale;\n    }\n\n    return paddingInner;\n  };\n\n  scale.paddingInnerZeroBased = (newPaddingInnerZeroBased) => {\n    if (newPaddingInnerZeroBased) {\n      paddingInnerZeroBased = newPaddingInnerZeroBased;\n      update();\n      return scale;\n    }\n\n    return paddingInnerZeroBased;\n  };\n\n  return scale;\n};\n\nexport const stringifySvg = (svg) =>\n  new window.XMLSerializer().serializeToString(svg);\n","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import { identity } from '@flekschas/utils';\nimport { axisRight, scaleLinear, scaleLog, select } from 'd3';\nimport PropTypes from 'prop-types';\nimport React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport TinyQueue from 'tinyqueue';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_STRATIFICATION,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n} from './constants';\nimport { scaleBand } from './utils';\nimport usePrevious from './use-previous';\n\nimport './GeneEnhancerPlot.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: theme.palette.grey['300'],\n    minHeight: '6rem',\n  },\n  plot: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  plotSvg: {\n    width: '100%',\n    height: '100%',\n  },\n}));\n\nconst useTooltipStyles = DEFAULT_COLOR_MAP_LIGHT.map((color, i) =>\n  makeStyles((theme) => ({\n    arrow: {\n      color,\n    },\n    tooltip: {\n      color: DEFAULT_COLOR_MAP_DARK[i],\n      backgroundColor: color,\n      boxShadow: '0 0 3px 0 rgba(0, 0, 0, 0.1), 0 0 0 1px rgba(0, 0, 0, 0.05)',\n      '& .value': {\n        color: 'white',\n        background: DEFAULT_COLOR_MAP_DARK[i],\n        padding: '0 0.25em',\n        borderRadius: '0.25rem',\n      },\n    },\n  }))\n);\n\nconst {\n  server,\n  tilesetUid: uuid,\n} = DEFAULT_VIEW_CONFIG_ENHANCER.views[0].tracks.top[3];\n\nconst fetchTile = async (tileId) => {\n  const response = await fetch(`${server}/tiles/?d=${tileId}`);\n  return response.json();\n};\n\nconst categories = {};\nconst samples = {};\n\nDEFAULT_STRATIFICATION.groups.forEach((group, i) => {\n  categories[group.label] = {\n    name: group.label,\n    size: group.categories.length,\n    index: i,\n  };\n\n  group.categories.forEach((category, j) => {\n    samples[category] = {\n      category: categories[group.label],\n      index: j,\n    };\n  });\n});\n\nconst getTileWidth = (tilesetInfo) =>\n  tilesetInfo.max_width / 2 ** tilesetInfo.max_zoom;\n\nconst filterByPosition = (tile, position) =>\n  tile.filter((entry) => position >= entry.xStart && position <= entry.xEnd);\n\n// From https://observablehq.com/@d3/beeswarm\nconst dodge = (data, radius, yScale) => {\n  const radius2 = radius ** 2;\n  const circles = data\n    .map((d) => ({ y: yScale(d.value), data: d }))\n    .sort((a, b) => a.y - b.y);\n  const epsilon = 1e-3;\n  let head = null;\n  let tail = null;\n\n  // Returns true if circle ⟨x,y⟩ intersects with any circle in the queue.\n  function intersects(x, y) {\n    let a = head;\n    while (a) {\n      if (radius2 - epsilon > (a.x - x) ** 2 + (a.y - y) ** 2) {\n        return true;\n      }\n      a = a.next;\n    }\n    return false;\n  }\n\n  // Place each circle sequentially.\n  for (const b of circles) {\n    // Remove circles from the queue that can’t intersect the new circle b.\n    while (head && head.y < b.y - radius2) head = head.next;\n\n    // Choose the minimum non-intersecting tangent.\n    if (intersects((b.x = 0), b.y)) {\n      let a = head;\n      b.x = Infinity;\n      do {\n        const x = a.x + Math.sqrt(radius2 - (a.y - b.y) ** 2);\n        if (x < b.x && !intersects(x, b.y)) b.x = x;\n        a = a.next;\n      } while (a);\n    }\n\n    // Add b to the queue.\n    b.next = null;\n    // eslint-disable-next-line no-multi-assign\n    if (head === null) head = tail = b;\n    // eslint-disable-next-line no-multi-assign\n    else tail = tail.next = b;\n  }\n\n  return circles;\n};\n\nconst plotEnhancerGeneConnections = (\n  node,\n  width,\n  data,\n  {\n    geneCellEncoding = 'distribution',\n    prevGeneCellEncoding,\n    genePadding = false,\n    openTooltip = identity,\n    closeTooltip = identity,\n    tooltipClasses = [],\n    position = '',\n    variant = null,\n  } = {}\n) => {\n  if (!width || !data) return;\n\n  const svg = select(node);\n\n  const paddingTop = 60;\n  const paddingBottom = 60;\n  const circleRadius = 1;\n  const circlePadding = 0.5;\n  const rowHeight = 36;\n  const geneLabelPadding = 3;\n  const beeswarmPadding = 1;\n  const distanceBarWidth = 6;\n  const distPaddingRange = [0, 20];\n  const height =\n    Object.values(categories).length * rowHeight + paddingTop + paddingBottom;\n\n  svg.attr('viewbox', `0 0 ${width} ${height}`).attr('height', height);\n\n  const maxCatgorySize = Object.values(data.categoryAggregation).reduce(\n    (max, cat) => Math.max(max, cat.numEnhancers),\n    0\n  );\n  const categorySizeScale = scaleLog()\n    .domain([1, maxCatgorySize])\n    .range([2, rowHeight])\n    .clamp(true);\n\n  const percentScale = scaleLinear()\n    .domain([0, 1])\n    .range([0, rowHeight])\n    .clamp(true);\n\n  const circleYScalePre = scaleLinear()\n    .domain([0, 1])\n    .range([1, 10])\n    .clamp(true);\n\n  const circleYScalePost = scaleLog()\n    .domain([1, 10])\n    .range([\n      rowHeight - circleRadius - beeswarmPadding,\n      circleRadius + beeswarmPadding,\n    ]);\n\n  const circleYScale = (v) => circleYScalePost(circleYScalePre(v));\n\n  // ---------------------------------------------------------------------------\n  // Gene setup\n  const geneContainerWidth = width / 2 - rowHeight;\n  const maxGenes = Math.floor(geneContainerWidth / rowHeight);\n\n  const genesUpstream = data.genesUpstreamByDist.slice(0, maxGenes).reverse();\n  const genesDownstream = data.genesDownstreamByDist.slice(0, maxGenes);\n\n  const [minRelDistance, maxRelDistance] = [\n    ...genesUpstream,\n    ...genesDownstream,\n  ].reduce(\n    (minMax, gene) => [\n      Math.min(minMax[0], gene.relDistance),\n      Math.max(minMax[1], gene.relDistance),\n    ],\n    [Infinity, 0]\n  );\n\n  const paddingScale = scaleLinear()\n    .domain([minRelDistance, maxRelDistance])\n    .range(distPaddingRange);\n\n  const genesUpstreamPadding = genePadding\n    ? genesUpstream.map((d) => Math.round(paddingScale(d.relDistance)))\n    : [];\n  const genesUpstreamScale = scaleBand()\n    .domain(genesUpstream.map((d) => d.name))\n    .range([0, width / 2 - rowHeight / 2])\n    .paddingInner(genesUpstreamPadding);\n\n  const genesDownstreamPadding = genePadding\n    ? genesDownstream.map((d) => Math.round(paddingScale(d.relDistance)))\n    : [];\n  const genesDownstreamScale = scaleBand()\n    .domain(genesDownstream.map((d) => d.name))\n    .range([0, width / 2 - rowHeight / 2])\n    .paddingInner(genesDownstreamPadding)\n    .paddingInnerZeroBased(true);\n\n  const bandwidth = Math.min(\n    genesUpstreamScale.bandwidth(),\n    genesDownstreamScale.bandwidth()\n  );\n\n  genesUpstreamScale.fixedBandwidth(bandwidth);\n  genesDownstreamScale.fixedBandwidth(bandwidth);\n\n  const genesUpstreamLeftPad = Math.max(\n    0,\n    genesUpstreamScale.rangeSize() - genesUpstreamScale.totalWidth()\n  );\n\n  const minVisibleAbsDist = Math.min(\n    genesUpstream.reduce(\n      (minDist, gene) => Math.min(minDist, gene.absDistance),\n      Infinity\n    ),\n    genesDownstream.reduce(\n      (minDist, gene) => Math.min(minDist, gene.absDistance),\n      Infinity\n    )\n  );\n\n  const maxVisibleAbsDist = Math.max(\n    genesUpstream.reduce(\n      (maxDist, gene) => Math.max(maxDist, gene.absDistance),\n      0\n    ),\n    genesDownstream.reduce(\n      (maxDist, gene) => Math.max(maxDist, gene.absDistance),\n      0\n    )\n  );\n\n  const distanceHeightScale = scaleLinear()\n    .domain([minVisibleAbsDist, maxVisibleAbsDist])\n    .range([2, paddingBottom]);\n\n  const plotBeeswarm = (selection, { isRightAligned = false } = {}) => {\n    selection\n      .attr(\n        'fill',\n        (d, i) => DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n      )\n      .selectAll('circle')\n      .data((d) => dodge(d, circleRadius * 2 + circlePadding, circleYScale))\n      .join('circle')\n      .attr('cx', (d) =>\n        isRightAligned\n          ? genesUpstreamScale.bandwidth() - (d.x + 2 * beeswarmPadding)\n          : d.x + circleRadius + beeswarmPadding\n      )\n      .attr('cy', (d) => d.y)\n      .attr('r', circleRadius);\n  };\n\n  const getArrayNumCols = (genes) => {\n    const maxSize = Object.values(genes[0].samplesByCategory).reduce(\n      (max, cat) => Math.max(max, cat.size),\n      0\n    );\n    return Math.ceil(Math.sqrt((maxSize * bandwidth) / rowHeight));\n  };\n\n  const plotArray = (\n    selection,\n    numCols,\n    {\n      instanceCache = {},\n      onMouseEnter = identity,\n      onMouseLeave = identity,\n      tooltipTitleGetter = null,\n    } = {}\n  ) => {\n    const cellSize = bandwidth / numCols;\n\n    const indexToX = (index) => (index % numCols) * cellSize;\n    const indexToY = (index) => Math.floor(index / numCols) * cellSize;\n\n    instanceCache.current = selection\n      .attr(\n        'fill',\n        (d, i) => DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n      )\n      .selectAll('rect')\n      .data(\n        (d) => d,\n        (d) => `${d.gene}|${d.sample}`\n      )\n      .join('rect')\n      .attr('x', (d) => indexToX(samples[d.sample].index))\n      .attr('y', (d) => indexToY(samples[d.sample].index))\n      .attr('width', cellSize)\n      .attr('height', cellSize)\n      .on('mouseenter', (event, d) => {\n        const bBox = event.target.getBoundingClientRect();\n        const title =\n          (tooltipTitleGetter && tooltipTitleGetter(d)) || d.value.toFixed(3);\n        openTooltip(bBox.x + bBox.width / 2, bBox.y, title, {\n          arrow: true,\n          placement: 'top',\n          classes:\n            tooltipClasses[\n              categories[d.sampleCategory].index % tooltipClasses.length\n            ],\n        });\n        onMouseEnter(d);\n      })\n      .on('mouseleave', (d) => {\n        closeTooltip();\n        onMouseLeave(d);\n      });\n  };\n\n  const arrayTooltipTitleGetter = (d) => (\n    <React.Fragment>\n      The enhancer overlapping <strong>{position}</strong>\n      {variant ? ` (${variant})` : ''} is predicted to regulate{' '}\n      <strong>{d.gene}</strong> in sample <strong>{d.sample}</strong> with a\n      score of <strong className=\"value\">{d.value.toFixed(3)}</strong>.\n    </React.Fragment>\n  );\n\n  const geneArrayInstances = {\n    upstream: { current: null },\n    downstream: { current: null },\n  };\n\n  const geneArrayInstanceMouseEnterHandler = (dHovering) => {\n    const opacity = (d) => (d.sample === dHovering.sample ? 1 : 0.2);\n    geneArrayInstances.upstream.current.attr('opacity', opacity);\n    geneArrayInstances.downstream.current.attr('opacity', opacity);\n  };\n\n  const geneArrayInstanceMouseLeaveHandler = () => {\n    geneArrayInstances.upstream.current.attr('opacity', 1);\n    geneArrayInstances.downstream.current.attr('opacity', 1);\n  };\n\n  const plotBox = (\n    selection,\n    valueScale,\n    valueGetter,\n    {\n      cellWidth = rowHeight,\n      fillColor = DEFAULT_COLOR_MAP_LIGHT,\n      textColor = DEFAULT_COLOR_MAP_DARK,\n      showText = true,\n      showZero = true,\n      showTooltip = false,\n      tooltipTitleGetter = null,\n    } = {}\n  ) => {\n    const bg = selection\n      .selectAll('.bg')\n      .data((d) => [d])\n      .join('rect')\n      .attr('class', 'bg')\n      .attr('fill', (d) => fillColor[d.row % fillColor.length])\n      .attr('x', (d) => (cellWidth - valueScale(valueGetter(d))) / 2)\n      .attr('y', (d) => (rowHeight - valueScale(valueGetter(d))) / 2)\n      .attr('width', (d) => valueScale(valueGetter(d)))\n      .attr('height', (d) => valueScale(valueGetter(d)))\n      .attr('opacity', (d) => +(valueGetter(d) > 0));\n\n    if (showTooltip) {\n      bg.on('mouseenter', (event, d) => {\n        const bBox = event.target.getBoundingClientRect();\n        const title =\n          (tooltipTitleGetter && tooltipTitleGetter(d)) || valueGetter(d);\n        openTooltip(bBox.x + bBox.width / 2, bBox.y, title, {\n          arrow: true,\n          placement: 'top',\n          classes: tooltipClasses[d.row % tooltipClasses.length],\n        });\n      }).on('mouseleave', () => {\n        closeTooltip();\n      });\n    } else {\n      bg.on('mouseenter', null).on('mouseleave', null);\n    }\n\n    if (showText) {\n      selection\n        .selectAll('.box-text')\n        .data((d) => [d])\n        .join('text')\n        .attr('class', 'box-text')\n        .attr('fill', (d) => textColor[d.row % textColor.length])\n        .attr('style', 'font-size: 12px; font-weight: bold;')\n        .attr('dominant-baseline', 'middle')\n        .attr('text-anchor', 'middle')\n        .attr('x', cellWidth / 2)\n        .attr('y', rowHeight / 2)\n        .attr('opacity', (d) => +(valueGetter(d) > 0 || showZero))\n        .text((d) => valueGetter(d));\n    }\n  };\n\n  const boxTooltipTitleGetter = (d) => (\n    <React.Fragment>\n      <strong className=\"value\">{d.length}</strong> out of {d.size}{' '}\n      <em>{Object.values(categories)[d.row].name}</em> samples have predicted\n      enhancer activity.\n    </React.Fragment>\n  );\n\n  // ---------------------------------------------------------------------------\n  // Category summary\n  const enhancerG = svg\n    .select('#enhancers')\n    .attr('transform', `translate(${width / 2 - rowHeight / 2}, 0)`);\n\n  // Draw background\n  const enhancerGCellG = enhancerG\n    .selectAll('.enhancer-gene-aggregate')\n    .data(\n      Object.values(data.categoryAggregation).map((d, i) => {\n        // Little hacky but necessary unfortunately\n        d.row = i;\n        return d;\n      }),\n      (d) => d.category.name\n    )\n    .join('g')\n    .attr('class', 'enhancer-gene-aggregate')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  plotBox(enhancerGCellG, categorySizeScale, (d) => d.numEnhancers);\n\n  // Draw border\n  svg\n    .select('#enhancers')\n    .selectAll('.enhancer-box-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'enhancer-box-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', rowHeight)\n    .attr('height', rowHeight);\n\n  // ---------------------------------------------------------------------------\n  // Draw upstream genes\n\n  const genesUpstreamG = svg\n    .select('#genes-upstream')\n    .selectAll('.gene-upstream')\n    .data(genesUpstream, (d) => d.name)\n    .join('g')\n    .attr('class', 'gene-upstream')\n    .attr(\n      'transform',\n      (d) =>\n        `translate(${genesUpstreamLeftPad + genesUpstreamScale(d.name)}, 0)`\n    );\n\n  // Draw labels\n  const geneLabelX = genesUpstreamScale.bandwidth() / 2;\n  const geneLabelY = paddingTop - geneLabelPadding;\n  genesUpstreamG\n    // the join is needed to avoid appending more and more text elements on\n    // subsequent calls of this function, which would happen if we used\n    // `append()` instead.\n    .selectAll('.gene-upstream-label')\n    .data((d) => [d])\n    .join('text')\n    .attr('class', 'gene-label gene-upstream-label')\n    .attr('style', 'font-size: 9px;')\n    .attr('transform', `translate(${geneLabelX},${geneLabelY}) rotate(-90)`)\n    .attr('fill', 'black')\n    .attr('dominant-baseline', 'middle')\n    .text((d) => d.name);\n\n  // Draw cell\n  const genesUpstreamGCellG = genesUpstreamG\n    .selectAll('.gene-upstream-cell')\n    .data(\n      (d) =>\n        Object.values(d.samplesByCategory).map((item, i) => {\n          // Little hacky but necessary unfortunately\n          item.row = i;\n          return item;\n        }),\n      (d) => d.name\n    )\n    .join('g')\n    .attr('class', 'gene-upstream-cell')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  if (geneCellEncoding !== prevGeneCellEncoding) {\n    genesUpstreamGCellG.selectAll('*').remove();\n  }\n\n  switch (geneCellEncoding) {\n    case 'distribution':\n      plotBeeswarm(genesUpstreamGCellG, { isRightAligned: true });\n      break;\n\n    case 'array':\n      plotArray(genesUpstreamGCellG, getArrayNumCols(genesUpstream), {\n        tooltipTitleGetter: arrayTooltipTitleGetter,\n        instanceCache: geneArrayInstances.upstream,\n        onMouseEnter: geneArrayInstanceMouseEnterHandler,\n        onMouseLeave: geneArrayInstanceMouseLeaveHandler,\n      });\n      break;\n\n    case 'number':\n    case 'percent':\n    default: {\n      const valueScale =\n        geneCellEncoding === 'percent' ? percentScale : categorySizeScale;\n\n      const valueGetter =\n        geneCellEncoding === 'percent'\n          ? (d) => d.length / d.size\n          : (d) => d.length;\n\n      plotBox(genesUpstreamGCellG, valueScale, valueGetter, {\n        showText: false,\n        cellWidth: genesUpstreamScale.bandwidth(),\n        fillColor: DEFAULT_COLOR_MAP,\n        showTooltip: true,\n        tooltipTitleGetter: boxTooltipTitleGetter,\n      });\n\n      break;\n    }\n  }\n\n  // Draw border\n  genesUpstreamG\n    .selectAll('.gene-upstream-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'gene-upstream-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', genesUpstreamScale.bandwidth())\n    .attr('height', rowHeight);\n\n  // Draw distance bars\n  genesUpstreamG\n    // Same reason we're using a join here as for the text labels above\n    .selectAll('.gene-upstream-distance-bar')\n    .data((d) => [d])\n    .join('rect')\n    .attr('class', 'gene-upstream-distance-bar')\n    .attr('fill', '#bbbbbb')\n    .attr('x', genesUpstreamScale.bandwidth() / 2 - distanceBarWidth / 2)\n    .attr('y', Object.values(categories).length * rowHeight + paddingTop)\n    .attr('width', distanceBarWidth)\n    .attr('height', (d) => distanceHeightScale(d.absDistance));\n\n  // ---------------------------------------------------------------------------\n  // Draw downstream genes\n  svg\n    .select('#genes-downstream')\n    .attr('transform', `translate(${width / 2 + rowHeight / 2}, 0)`);\n\n  const genesDownstreamG = svg\n    .select('#genes-downstream')\n    .selectAll('.gene-downstream')\n    .data(genesDownstream, (d) => d.name)\n    .join('g')\n    .attr('class', 'gene-downstream')\n    .attr('transform', (d) => `translate(${genesDownstreamScale(d.name)}, 0)`);\n\n  // Draw labels\n  genesDownstreamG\n    .selectAll('.gene-downstream-label')\n    .data((d) => [d])\n    .join('text')\n    .attr('class', 'gene-label gene-downstream-label')\n    .attr('style', 'font-size: 9px;')\n    .attr('transform', `translate(${geneLabelX},${geneLabelY}) rotate(-90)`)\n    .attr('fill', 'black')\n    .attr('dominant-baseline', 'middle')\n    .text((d) => d.name);\n\n  // Draw cell\n  const genesDownstreamGCellG = genesDownstreamG\n    .selectAll('.gene-downstream-cell')\n    .data(\n      (d) =>\n        Object.values(d.samplesByCategory).map((item, i) => {\n          // Little hacky but necessary unfortunately\n          item.row = i;\n          return item;\n        }),\n      (d) => d.name\n    )\n    .join('g')\n    .attr('class', 'gene-downstream-cell')\n    .attr('transform', (d, i) => `translate(0, ${i * rowHeight + paddingTop})`);\n\n  if (geneCellEncoding !== prevGeneCellEncoding) {\n    genesDownstreamGCellG.selectAll('*').remove();\n  }\n\n  switch (geneCellEncoding) {\n    case 'distribution':\n      plotBeeswarm(genesDownstreamGCellG);\n      break;\n\n    case 'array':\n      plotArray(genesDownstreamGCellG, getArrayNumCols(genesDownstream), {\n        tooltipTitleGetter: arrayTooltipTitleGetter,\n        instanceCache: geneArrayInstances.downstream,\n        onMouseEnter: geneArrayInstanceMouseEnterHandler,\n        onMouseLeave: geneArrayInstanceMouseLeaveHandler,\n      });\n      break;\n\n    case 'number':\n    case 'percent':\n    default: {\n      const valueScale =\n        geneCellEncoding === 'percent' ? percentScale : categorySizeScale;\n\n      const valueGetter =\n        geneCellEncoding === 'percent'\n          ? (d) => d.length / d.size\n          : (d) => d.length;\n\n      plotBox(genesDownstreamGCellG, valueScale, valueGetter, {\n        showText: false,\n        cellWidth: genesDownstreamScale.bandwidth(),\n        fillColor: DEFAULT_COLOR_MAP,\n        showTooltip: true,\n        tooltipTitleGetter: boxTooltipTitleGetter,\n      });\n\n      break;\n    }\n  }\n\n  // Draw border\n  genesDownstreamG\n    .selectAll('.gene-downstream-border')\n    .data(Object.values(categories), (d) => d.name)\n    .join('rect')\n    .attr('class', 'gene-downstream-border')\n    .attr('fill', 'none')\n    .attr(\n      'stroke',\n      (d, i) => DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n    )\n    .attr('stroke-width', '1')\n    .attr('x', 0)\n    .attr('y', (d, i) => i * rowHeight + paddingTop)\n    .attr('width', genesDownstreamScale.bandwidth())\n    .attr('height', rowHeight);\n\n  // Draw distance bars\n  genesDownstreamG\n    // Same reason we're using a join here as for the text labels above\n    .selectAll('.gene-downstream-distance-bar')\n    .data((d) => [d])\n    .join('rect')\n    .attr('class', 'gene-downstream-distance-bar')\n    .attr('fill', '#bbbbbb')\n    .attr('x', genesDownstreamScale.bandwidth() / 2 - distanceBarWidth / 2)\n    .attr('y', Object.values(categories).length * rowHeight + paddingTop)\n    .attr('width', distanceBarWidth)\n    .attr('height', (d) => distanceHeightScale(d.absDistance));\n\n  // ---------------------------------------------------------------------------\n  // Draw gene distance axis\n\n  const distRange = Math.ceil((maxVisibleAbsDist - minVisibleAbsDist) / 1e5);\n  const distStep = Math.ceil(distRange / 4);\n  const tickValues =\n    distRange <= 1\n      ? [minVisibleAbsDist, maxVisibleAbsDist]\n      : Array(4)\n          .fill()\n          .map(\n            (v, i) =>\n              Math.ceil(minVisibleAbsDist / 1e5) * 1e5 + i * (distStep * 1e5)\n          );\n\n  svg\n    .select('#gene-distance-axis')\n    .attr(\n      'transform',\n      `translate(0, ${\n        Object.values(categories).length * rowHeight + paddingTop\n      })`\n    )\n    .call(\n      axisRight(distanceHeightScale)\n        .tickSize(width)\n        .tickFormat(function geneDistanceAxisTickFormat(d) {\n          const s = (d / 1e5).toFixed(0);\n          return this.parentNode.nextSibling\n            ? s\n            : `${s} kbps distance to enhancer`;\n        })\n        .tickValues(tickValues)\n    )\n    .call((g) => g.select('.domain').remove())\n    .call((g) =>\n      g\n        .selectAll('.tick line')\n        .attr('stroke', '#bbbbbb')\n        .attr('stroke-width', 0.5)\n        .attr('stroke-dasharray', '4,4')\n    )\n    .call((g) =>\n      g\n        .selectAll('.tick text')\n        .attr('fill', '#bbbbbb')\n        .attr('x', width / 2)\n        .attr('dy', 1)\n        .attr('text-anchor', 'middle')\n        .attr('dominant-baseline', 'hanging')\n    );\n};\n\nconst EnhancerGenePlot = ({\n  geneCellEncoding,\n  position,\n  relPosition,\n  fullPosition,\n  genePadding,\n  openTooltip,\n  closeTooltip,\n  styles,\n  svgRef,\n  variant,\n} = {}) => {\n  const [plotEl, setPlotEl] = useState(null);\n  const [tile, setTile] = useState(null);\n  const [isLoadingTile, setIsLoadingTile] = useState(null);\n  const [tilesetInfo, setTilesetInfo] = useState(null);\n  const [width, setWidth] = useState(null);\n  const prevWidth = usePrevious(width);\n  const prevGeneCellEncoding = usePrevious(geneCellEncoding);\n\n  useEffect(() => {\n    let active = true;\n\n    if (position === null || tilesetInfo === null) return undefined;\n\n    const tileWidth = getTileWidth(tilesetInfo);\n    const tileXPos = Math.floor(position / tileWidth);\n    const tileId = `${uuid}.${tilesetInfo.max_zoom}.${tileXPos}`;\n\n    setIsLoadingTile(true);\n    fetchTile(tileId).then((_tile) => {\n      if (active) {\n        setIsLoadingTile(false);\n        setTile(filterByPosition(_tile[tileId], position));\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [position, tilesetInfo]);\n\n  const plotElRef = useCallback(\n    (node) => {\n      setPlotEl(node);\n      svgRef.current = node;\n    },\n    [svgRef]\n  );\n\n  // Derived State\n  const isInit = useMemo(() => !!tilesetInfo, [tilesetInfo]);\n\n  const data = useMemo(\n    () => {\n      if (!tile) return undefined;\n\n      let maxScore = 0;\n      let minAbsDistance = Infinity;\n      let maxAbsDistance = 0;\n      const genes = {};\n      const categoryAggregation = {};\n\n      Object.entries(categories).forEach(([name, category]) => {\n        categoryAggregation[name] = {\n          category,\n          numEnhancers: 0,\n        };\n      });\n\n      const distComparator = (a, b) => a.absDistance - b.absDistance;\n      const genesUpstreamByDist = new TinyQueue([], distComparator);\n      const genesDownstreamByDist = new TinyQueue([], distComparator);\n\n      tile.forEach((entry) => {\n        const geneName = entry.fields[6];\n\n        if (!genes[geneName]) {\n          const relGenePos = +entry.fields[4];\n          const distance = relGenePos - relPosition;\n          const isDownstream = distance > 0;\n          const absDistance = Math.abs(distance);\n          genes[geneName] = {\n            name: geneName,\n            position: relGenePos,\n            absDistance,\n            isDownstream,\n            samplesByCategory: {},\n          };\n\n          Object.values(categories).forEach(({ name, size }) => {\n            genes[geneName].samplesByCategory[name] = [];\n            genes[geneName].samplesByCategory[name].size = size;\n          });\n\n          minAbsDistance = Math.min(minAbsDistance, absDistance);\n          maxAbsDistance = Math.max(maxAbsDistance, absDistance);\n\n          if (isDownstream) genesDownstreamByDist.push(genes[geneName]);\n          else genesUpstreamByDist.push(genes[geneName]);\n        }\n\n        const sample = entry.fields[10];\n        genes[geneName].samplesByCategory[samples[sample].category.name].push({\n          gene: geneName,\n          sample,\n          sampleCategory: samples[sample].category.name,\n          value: entry.importance,\n        });\n        maxScore = Math.max(maxScore, entry.importance);\n        categoryAggregation[samples[sample].category.name].numEnhancers++;\n      });\n\n      const genesDownstreamByDistArr = [];\n      while (genesDownstreamByDist.length)\n        genesDownstreamByDistArr.push(genesDownstreamByDist.pop());\n\n      const genesUpstreamByDistArr = [];\n      while (genesUpstreamByDist.length)\n        genesUpstreamByDistArr.push(genesUpstreamByDist.pop());\n\n      genesDownstreamByDistArr.forEach((gene, i) => {\n        const prevGene = genesDownstreamByDistArr[i - 1];\n        gene.relDistance =\n          gene.position - ((prevGene && prevGene.position) || relPosition);\n      });\n\n      genesUpstreamByDistArr.forEach((gene, i) => {\n        const prevGene = genesDownstreamByDistArr[i - 1];\n        gene.relDistance =\n          ((prevGene && prevGene.position) || relPosition) - gene.position;\n      });\n\n      return {\n        minAbsDistance,\n        maxAbsDistance,\n        maxScore,\n        genes,\n        genesDownstreamByDist: genesDownstreamByDistArr,\n        genesUpstreamByDist: genesUpstreamByDistArr,\n        categoryAggregation,\n      };\n    },\n    // `relPosition` is excluded on purpose because `tile` is already updated\n    // when `relPosition` updates\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tile]\n  );\n\n  // Initialization\n  useEffect(\n    () => {\n      (async () => {\n        const response = await fetch(`${server}/tileset_info/?d=${uuid}`);\n        const results = await response.json();\n\n        if (results[uuid]) setTilesetInfo(results[uuid]);\n      })();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  // Rendering\n  const classes = useStyles();\n\n  useLayoutEffect(\n    () => {\n      if (!plotEl) return undefined;\n\n      const measure = () =>\n        window.requestAnimationFrame(() => {\n          const currWidth = plotEl.getBoundingClientRect().width;\n          if (currWidth !== prevWidth) setWidth(currWidth);\n        });\n\n      measure();\n\n      window.addEventListener('resize', measure);\n      window.addEventListener('orientationchange', measure);\n\n      return () => {\n        window.removeEventListener('resize', measure);\n        window.removeEventListener('orientationchange', measure);\n      };\n    },\n    // `prevWidth` is ommitted on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [plotEl]\n  );\n\n  const tooltipClasses = [];\n  for (let i = 0; i < useTooltipStyles.length; i++) {\n    tooltipClasses.push(useTooltipStyles[i]());\n  }\n\n  useEffect(\n    () => {\n      plotEnhancerGeneConnections(plotEl, width, data, {\n        geneCellEncoding,\n        prevGeneCellEncoding,\n        genePadding,\n        openTooltip,\n        closeTooltip,\n        classes,\n        tooltipClasses,\n        position: fullPosition,\n        variant,\n      });\n    },\n    // `prevGeneCellEncoding` is ommitted on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      plotEl,\n      width,\n      data,\n      geneCellEncoding,\n      genePadding,\n      openTooltip,\n      closeTooltip,\n    ]\n  );\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      style={styles}\n    >\n      {isInit && !isLoadingTile ? (\n        <Grid item className={classes.plot}>\n          <svg ref={plotElRef} className={classes.plotSvg}>\n            <g id=\"enhancers\"></g>\n            <g id=\"gene-distance-axis\"></g>\n            <g id=\"genes-upstream\"></g>\n            <g id=\"genes-downstream\"></g>\n          </svg>\n        </Grid>\n      ) : (\n        <CircularProgress color=\"inherit\" />\n      )}\n    </Grid>\n  );\n};\n\nEnhancerGenePlot.defaultProps = {\n  geneCellEncoding: 'distribution',\n  position: null,\n  relPosition: null,\n  fullPosition: null,\n  variant: null,\n  genePadding: false,\n  openTooltip: identity,\n  closeTooltip: identity,\n  styles: {},\n  svgRef: {},\n};\n\nEnhancerGenePlot.propTypes = {\n  geneCellEncoding: PropTypes.oneOf([\n    'number',\n    'percent',\n    'distribution',\n    'array',\n  ]),\n  position: PropTypes.number,\n  relPosition: PropTypes.number,\n  fullPosition: PropTypes.string,\n  variant: PropTypes.string,\n  genePadding: PropTypes.bool,\n  openTooltip: PropTypes.func,\n  closeTooltip: PropTypes.func,\n  styles: PropTypes.object,\n  svgRef: PropTypes.object,\n};\n\nexport default EnhancerGenePlot;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: '100%',\n    padding: '0.1em',\n    alignItems: 'center',\n    fontSize: '1em',\n    lineHeight: '1em',\n    fontWeight: 'bold',\n  },\n  logoAbc: {\n    fontSize: '2.75em',\n    letterSpacing: '-0.075rem',\n    paddingRight: '0.125em',\n    fontWeight: 900,\n  },\n  logoEnhancer: {\n    alignItems: 'flex-start',\n  },\n}));\n\nconst Logo = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.logo} style={props.styles}>\n      <Grid item className={classes.logoAbc}>\n        ABC\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" className={classes.logoEnhancer}>\n          <Grid item>Enhancer-Gene</Grid>\n          <Grid item>Connections</Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nLogo.defaultProps = {\n  styles: {},\n};\n\nLogo.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Logo;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { identity } from '@flekschas/utils';\n\nimport useDebounce from './use-debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    background: 'white !important',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    '&::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 0)',\n      transition: 'boxShadow 0.2s ease',\n    },\n    '&:hover::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n    },\n  },\n  focused: {\n    boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n  },\n  input: {\n    height: 35,\n    padding: '6px 0 6px',\n  },\n  textFieldRoot: {\n    '& .MuiFormLabel-root': {\n      color: 'black',\n      fontWeight: 'bold',\n      transform: 'translate(12px, 21px) scale(1.25)',\n    },\n    '& .MuiInputLabel-shrink': {\n      fontWeight: 'normal',\n    },\n  },\n}));\n\nconst fetchJsonFromUrl = async (url, query) => {\n  if (typeof url === 'string') {\n    const response = await fetch(`${url}&ac=${query || ''}`);\n    return response.json();\n  }\n  const response = await fetch(`${url.url}&ac=${query || ''}`);\n  const results = await response.json();\n  return results.map((result) => {\n    result.type = url.type;\n    return result;\n  });\n};\n\nfunction GeneIcon(props) {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <path d=\"M5.03 14.378A7.33 7.33 0 003.423 16h2.42a7.762 7.762 0 011.281-.774 13.241 13.241 0 01-1.863-1.016c-.078.054-.156.11-.233.168zM5.766 0l.219.174a8.754 8.754 0 001.636.92l.024.008c.797.24 1.507.627 2.023.933.325.18.674.4 1.024.66 1.825 1.363 2.79 3.22 2.79 5.367 0 2.062-.962 3.89-2.782 5.286-.061.048-.125.094-.186.139a10.45 10.45 0 00-1.895-.955 8.17 8.17 0 001.69-1.162h-3.92a6.191 6.191 0 01-1.199-1.15h6.093a4.054 4.054 0 00.603-1.747H3.839c.072.656.307 1.239.636 1.747h.011c.282.438.628.822.991 1.15H5.47l.74.584c.831.588 1.573.893 1.636.92a9.358 9.358 0 012.847 1.504A7.38 7.38 0 0112.3 16H9.879l-.759-.5a7.876 7.876 0 00-1.256-.594 11.833 11.833 0 01-2.07-1.04l.017-.009c-1.567-.999-3.571-2.851-3.571-5.794 0-2.149.964-4.005 2.79-5.367.076-.058.154-.113.231-.167.495.32 1.143.698 1.863 1.015a7.677 7.677 0 00-1.296.786c-.043.032-.083.066-.125.098h3.318c.535.336.999.727 1.364 1.149H4.598a4.215 4.215 0 00-.721 1.748h7.97l-.038-.195a3.527 3.527 0 00-.306-.904 4.417 4.417 0 00-.378-.65l-.01-.007a5.793 5.793 0 00-1.081-1.13l-.14-.109a7.236 7.236 0 00-.722-.48l-.031-.02a7.942 7.942 0 00-1.276-.607 10.278 10.278 0 01-1.257-.57C5.728 2.218 4.31 1.364 3.281 0h2.486zm6.267 0a7.808 7.808 0 01-1.743 1.707A10.443 10.443 0 008.396.752 8.592 8.592 0 009.592 0h2.442z\" />\n    </SvgIcon>\n  );\n}\n\nfunction GeneOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <GeneIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction VariantOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <FlashOnIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction Option(props) {\n  if (props.option.type === 'gene') return <GeneOption option={props.option} />;\n  if (props.option.type === 'variant')\n    return <VariantOption option={props.option} />;\n  return <div>{props.option.geneName}</div>;\n}\n\nexport default function SearchField(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(props.inputValue);\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const loading = open && options.length === 0;\n  const classes = useStyles();\n  const autocompleteClasses = { ...classes };\n  delete autocompleteClasses.textFieldRoot;\n\n  const { customSearch, searchUrl } = props;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!open) return undefined;\n\n    setOptions([]);\n\n    const whenResults = Array.isArray(searchUrl)\n      ? searchUrl.map((url) => fetchJsonFromUrl(url, debouncedSearchQuery))\n      : [fetchJsonFromUrl(searchUrl, debouncedSearchQuery)];\n\n    if (customSearch) whenResults.push(customSearch(debouncedSearchQuery));\n\n    Promise.all(whenResults).then((results) => {\n      if (active) setOptions(results.flat().filter(identity));\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [searchUrl, customSearch, open, debouncedSearchQuery]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const value =\n    props.multiple && !Array.isArray(props.value) ? [props.value] : props.value;\n\n  let autocompleteOptions = value && options.length === 0 ? value : options;\n  autocompleteOptions = Array.isArray(autocompleteOptions)\n    ? autocompleteOptions\n    : [autocompleteOptions];\n\n  return (\n    <Autocomplete\n      classes={props.larger ? autocompleteClasses : {}}\n      multiple={props.multiple}\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      value={value}\n      onInputChange={(event, newInputValue) => {\n        if (event) setSearchQuery(newInputValue);\n      }}\n      fullWidth={props.fullWidth}\n      style={{ width: props.fullWidth ? 'auto' : props.width }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, _value) =>\n        option.geneName === _value.geneName\n      }\n      getOptionLabel={(option) => (option ? option.geneName : '')}\n      options={autocompleteOptions}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          className={props.larger ? classes.textFieldRoot : ''}\n          id={props.id}\n          label={props.label}\n          variant={props.variant}\n          size={props.size}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n      renderOption={(option) => <Option option={option} />}\n      renderTags={(v, getTagProps) =>\n        v.map((option, index) => (\n          <Chip\n            icon={option.type === 'gene' ? <GeneIcon /> : <FlashOnIcon />}\n            key={option.geneName}\n            label={option.geneName}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n    />\n  );\n}\n\nSearchField.defaultProps = {\n  fullWidth: true,\n  id: '',\n  label: '',\n  multiple: false,\n  onChange: identity,\n  size: 'small',\n  value: null,\n  variant: 'outlined',\n  width: '10rem',\n};\n\nSearchField.propTypes = {\n  customSearch: PropTypes.func,\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  searchUrl: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          url: PropTypes.string,\n          type: PropTypes.string,\n        }),\n        PropTypes.string,\n      ])\n    ),\n    PropTypes.string,\n  ]).isRequired,\n  size: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  variant: PropTypes.string,\n  width: PropTypes.string,\n};\n","import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Logo from './Logo';\n\nconst useStyles = makeStyles((theme) => ({\n  note: {\n    color: theme.palette.grey['400'],\n    marginTop: '1em',\n  },\n  showTutorial: {\n    minWidth: '10.5rem',\n    marginRight: '0.5rem',\n  },\n  startExploring: {\n    minWidth: '10.5rem',\n    marginLeft: '0.5rem',\n    color: 'white',\n    background: '#cc0078 linear-gradient(45deg, #cc0078 30%, #cc0066 90%)',\n    boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .3)',\n    '&:hover': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n      background: '#d90080 linear-gradient(45deg, #d90080 30%, #d9006c 90%)',\n    },\n    '&:focus': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n    },\n  },\n}));\n\nconst Welcome = (props) => {\n  const [tutorial, setTutorial] = useState(false);\n\n  const classes = useStyles();\n\n  if (tutorial)\n    return (\n      <React.Fragment>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <p>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </p>\n        <Typography align=\"center\">\n          <Button\n            className={classes.startExploring}\n            onClick={props.infoCloseHandler}\n            variant=\"contained\"\n            disableElevation\n          >\n            Start Exploring!\n          </Button>\n        </Typography>\n        <Typography align=\"center\" className={classes.note}>\n          <em>\n            You can reopen this tutorial by clicking on \"ABC Enhancer-Gene\n            Connections\" in the upper left corner!\n          </em>\n        </Typography>\n      </React.Fragment>\n    );\n\n  return (\n    <React.Fragment>\n      <Typography\n        id=\"info-title\"\n        align=\"center\"\n        variant=\"h5\"\n        component=\"h2\"\n        noWrap\n      >\n        <Logo\n          styles={{\n            width: 'auto',\n          }}\n        />\n      </Typography>\n      <p id=\"info-description\">\n        This web application visualizes genome-wide enhancer-gene interactions\n        that were predicted with the <em>Activity-By-Contact</em> (ABC) model.\n        You can interactively browse the entire human genome and filter\n        enhancers by gene and containing variant.\n      </p>\n      <p>\n        For information regarding the ABC model please refer to our initial\n        publication:{' '}\n        <a\n          href=\"https://www.nature.com/articles/s41588-019-0538-0\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Fulco et al., Activity-by-contact model of enhancer–promoter\n          regulation from thousands of CRISPR perturbations,{' '}\n          <em>Nature Genetics</em> (2019)\n        </a>\n        .\n      </p>\n      <Typography align=\"center\">\n        <Button\n          className={classes.showTutorial}\n          onClick={() => setTutorial(true)}\n          variant=\"contained\"\n          disableElevation\n        >\n          Show Tutorial\n        </Button>\n        <Button\n          className={classes.startExploring}\n          onClick={props.infoCloseHandler}\n          variant=\"contained\"\n          disableElevation\n        >\n          Start Exploring!\n        </Button>\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nWelcome.propTypes = {\n  infoCloseHandler: PropTypes.func.isRequired,\n};\n\nexport default Welcome;\n","import { useState, useCallback } from 'react';\nimport { getQueryStringValue, setQueryStringValue } from './utils';\n\nfunction useQueryString(key, initialValue, { encoder, decoder } = {}) {\n  const [value, setValue] = useState(\n    getQueryStringValue(key, decoder) === undefined\n      ? initialValue\n      : getQueryStringValue(key, decoder)\n  );\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n\nexport default useQueryString;\n","import PropTypes from 'prop-types';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { HiGlassComponent } from 'higlass';\nimport {\n  debounce,\n  deepClone,\n  isFunction,\n  isParentOf,\n  isString,\n  nthIndexOf,\n  pipe,\n} from '@flekschas/utils';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fade from '@material-ui/core/Fade';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Modal from '@material-ui/core/Modal';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Popover from '@material-ui/core/Popover';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfoIcon from '@material-ui/icons/Info';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport CheckboxList from './CheckboxList';\nimport EnhancerGenePlot from './EnhancerGenePlot';\nimport Logo from './Logo';\nimport SearchField from './SearchField';\nimport Welcome from './Welcome';\n\nimport useDebounce from './use-debounce';\nimport useQueryString from './use-query-string';\nimport usePrevious from './use-previous';\nimport { download, stringifySvg, toAbsPosition, toFixed } from './utils';\nimport {\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_STRATIFICATION,\n  DEFAULT_X_DOMAIN_START,\n  DEFAULT_X_DOMAIN_END,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n  DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY,\n  GENE_SEARCH_URL,\n  VARIANT_SEARCH_URL,\n  SVG_SKELETON,\n} from './constants';\n\nimport 'higlass/dist/hglib.css';\nimport './Viewer.css';\n\nconst samples = DEFAULT_STRATIFICATION.groups.map((group) => ({\n  name: group.label,\n  options: group.categories,\n}));\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  black: {\n    color: 'black',\n  },\n  gray: {\n    color: theme.palette.grey['400'],\n  },\n  pink: {\n    color: '#cc0078',\n  },\n  root: {\n    position: 'absolute',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  h1: {\n    height: '100%',\n    margin: '0',\n    padding: '0',\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    fontWeight: 'bold',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '4rem',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '0.25rem',\n    boxShadow: theme.shadows[4],\n    maxWidth: '60rem',\n    maxHeight: 'calc(100vh - 8rem)',\n    overflow: 'auto',\n    padding: theme.spacing(2, 4),\n    outline: 0,\n    '&>h2': {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: theme.spacing(2, 0, 3),\n    },\n    '&>p': {\n      fontSize: '1.125em',\n    },\n  },\n  iconRadio: {\n    padding: theme.spacing(0.5, 0),\n    marginLeft: -theme.spacing(1) / 2,\n    '& .MuiFormControlLabel-label': {\n      lineHeight: 1.2,\n    },\n  },\n  iconRadioActive: {\n    color: 'black',\n  },\n  iconRadioLegend: {\n    margin: theme.spacing(2, 0, 0.25, 0),\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    boxShadow: `0 1px 0 0 ${theme.palette.grey['300']}`,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerGrid: {\n    height: '100%',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  settings: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  globalSettingsTitle: {\n    padding: '3px 8px 4px 8px',\n    margin: 0,\n    '& h6': {\n      fontSize: '0.8rem',\n      fontWeight: 'bold',\n    },\n  },\n  settingsContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden auto',\n  },\n  textInput: {\n    minWidth: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fullWidthHeight: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  higlass: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  higlassEnhancerContainer: {\n    flexWrap: 'nowrap',\n    minHeight: '100%',\n  },\n  higlassEnhancer: {\n    flexGrow: 1,\n    margin: '-8px 0 -8px -8px',\n  },\n  higlassDnaAccessibility: {\n    width: '20rem',\n    margin: '-8px -8px -8px 0',\n  },\n  titleBar: {\n    position: 'relative',\n    padding: '2px',\n    fontSize: '0.8rem',\n    background: theme.palette.grey['100'],\n  },\n  titleBarText: {\n    fontSize: '0.8rem',\n  },\n  titleBarContainer: {\n    width: 'auto',\n  },\n  titleBarTitle: {\n    padding: '0 2px',\n    fontWeight: 900,\n  },\n  titleBarIcon: {\n    color: theme.palette.grey['400'],\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  titleBarIconActive: {\n    color: 'black',\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  titleBarHelpPopeover: {\n    maxWidth: '20rem',\n    padding: '0.5rem',\n    fontSize: '0.8rem',\n    '&+p': {\n      paddingTop: 0,\n    },\n  },\n  infoBarTitle: {\n    display: 'block',\n    color: theme.palette.grey['800'],\n    fontSize: '0.8rem',\n    fontWeight: 'bold',\n    '&::after': {\n      content: ':',\n    },\n  },\n  panZoomTip: {\n    fontSize: '0.8rem',\n    color: theme.palette.grey['600'],\n    opacity: 1,\n    animation: '0.75s ease 2s 1 running forwards fadeout',\n    '-webkit-touch-callout': 'none',\n    '-webkit-user-select': 'none',\n    '-khtml-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    '&.show': {\n      opacity: 1,\n      animation: '',\n    },\n  },\n  panZoomTipActive: {\n    fontWeight: 'bold',\n    fontSize: '0.8rem',\n    color: '#cc0078',\n    opacity: 1,\n    animation: '0.75s ease 2s 1 running forwards fadeout',\n    '-webkit-touch-callout': 'none',\n    '-webkit-user-select': 'none',\n    '-khtml-user-select': 'none',\n    '-moz-user-select': 'none',\n    '-ms-user-select': 'none',\n    userSelect: 'none',\n    '&.show': {\n      opacity: 1,\n      animation: '',\n    },\n  },\n  higlassEnhancerInfoBar: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    minHeight: 'min-content',\n    padding: '0 4px',\n    color: theme.palette.grey['600'],\n    borderTop: `1px solid ${theme.palette.grey['300']}`,\n    '&:first-child': {\n      borderTop: 0,\n    },\n    '& >*:first-child': {\n      paddingTop: 2,\n    },\n    '& >*:last-child': {\n      paddingBottom: 2,\n      borderBottom: `1px dotted ${theme.palette.grey['300']}`,\n    },\n  },\n  higlassEnhancerGenePlot: {\n    minHeight: '6rem',\n  },\n  higlassEnhancerGenePlotPlaceholder: {\n    minHeight: '6rem',\n    fontStyle: 'italic',\n    color: theme.palette.grey['600'],\n    background: theme.palette.grey['100'],\n  },\n  enhancerGeneTooltip: {\n    position: 'fixed',\n    zIndex: 10,\n    width: 1,\n    height: 1,\n    background: 'black',\n    fontWeight: 'normal',\n    pointerEvents: 'none',\n    '& strong': {\n      fontWeight: 'bold',\n    },\n  },\n  dnaAccessibilityInfoBar: {\n    color: theme.palette.grey['600'],\n    padding: '2px 4px',\n    borderBottom: `1px dotted ${theme.palette.grey['300']}`,\n  },\n  dnaAccessibilityInfoBarRegion: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  higlassSeparator: {\n    zIndex: 1,\n    margin: `-${theme.spacing(1)}px 0`,\n    width: 1,\n    background: theme.palette.grey['300'],\n  },\n  titleBarMiddle: {\n    position: 'relative',\n    flexGrow: 1,\n    height: '100%',\n  },\n  titleBarMiddleContent: {\n    height: '100%',\n  },\n  toolbarExtra: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    alignItems: 'flex-end',\n  },\n  globalSettingsFirstBox: {\n    margin: theme.spacing(0, 1, 1, 1),\n  },\n}));\n\nconst chrPosUrlEncoder = (chrPos) =>\n  chrPos ? chrPos.replace(':', '.') : chrPos;\n\nconst chrPosUrlDecoder = (chrPos) =>\n  chrPos ? chrPos.replace('.', ':') : chrPos;\n\nconst getFocusGeneRegion = (viewConfig) => {\n  return viewConfig.views[0].overlays[1] &&\n    viewConfig.views[0].overlays[1].options.extent &&\n    viewConfig.views[0].overlays[1].options.extent.length\n    ? [...viewConfig.views[0].overlays[1].options.extent[0]]\n    : null;\n};\n\nconst getFocusVariantRegion = (viewConfig) =>\n  viewConfig.views[0].tracks.top[2].options.focusRegion\n    ? [...viewConfig.views[0].tracks.top[2].options.focusRegion]\n    : null;\n\nconst updateViewConfigXDomain = (\n  newXDomainStart,\n  newXDomainEnd,\n  { force = false } = {}\n) => (viewConfig) => {\n  const _force = force === true || (isFunction(force) && force());\n\n  const xDomain = [...viewConfig.views[0].initialXDomain];\n  const focusGeneRegion = getFocusGeneRegion(viewConfig);\n  const focusVariantRegion = getFocusVariantRegion(viewConfig);\n\n  if (!Number.isNaN(+newXDomainStart)) {\n    xDomain[0] = newXDomainStart;\n  }\n  if (!Number.isNaN(+newXDomainEnd)) {\n    xDomain[1] = newXDomainEnd;\n  }\n\n  if (focusGeneRegion && !_force) {\n    xDomain[0] = focusGeneRegion[0] - 100000;\n    xDomain[1] = focusGeneRegion[1] + 100000;\n  }\n\n  if (focusVariantRegion && !_force) {\n    xDomain[0] = Math.min(xDomain[0], focusVariantRegion[0] - 100000);\n    xDomain[1] = Math.max(xDomain[1], focusVariantRegion[1] + 100000);\n  }\n\n  viewConfig.views[0].initialXDomain = xDomain;\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusGene = (gene, start, end) => (viewConfig) => {\n  const n = viewConfig.views[0].tracks.top.length;\n\n  if (gene) {\n    viewConfig.views[0].tracks.top[n - 1].options.focusGene = gene;\n    viewConfig.views[0].overlays[1].options.extent = [[start, end]];\n  } else {\n    delete viewConfig.views[0].tracks.top[n - 1].options.focusGene;\n    delete viewConfig.views[0].overlays[1].options.extent;\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusVariant = (position, trackIdxs = []) => (\n  viewConfig\n) => {\n  if (Number.isNaN(+position) || position === null) {\n    trackIdxs.forEach((trackIdx) => {\n      delete viewConfig.views[0].tracks.top[trackIdx].options.focusRegion;\n    });\n    viewConfig.views[0].overlays[0].options.extent = [];\n  } else {\n    const focusRegion = [position - 0.5, position + 0.5];\n    trackIdxs.forEach((trackIdx) => {\n      viewConfig.views[0].tracks.top[\n        trackIdx\n      ].options.focusRegion = focusRegion;\n    });\n\n    viewConfig.views[0].overlays[0].options.extent = [focusRegion];\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusStyle = (hideUnfocused) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.focusStyle = hideUnfocused\n    ? 'filtering'\n    : 'highlighting';\n  viewConfig.views[0].tracks.top[4].options.stratification.axisNoGroupColor = !hideUnfocused;\n\n  return viewConfig;\n};\n\nconst updateViewConfigVariantYScale = (yScale) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[2].options.valueColumn =\n    yScale === 'pValue' ? 7 : 8;\n\n  return viewConfig;\n};\n\nconst updateViewConfigMatrixColoring = (coloring) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.opacityEncoding = coloring;\n  return viewConfig;\n};\n\nconst updateViewConfigDnaAccessLabels = (labels) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[3].options.showRowLabels =\n    !labels || labels === 'hidden' ? false : labels;\n  return viewConfig;\n};\n\nconst extractCoreFromHiGlassSvg = (svg) => {\n  const fifthLn = nthIndexOf(svg, '\\n', 4);\n  const lastLn = svg.lastIndexOf('\\n');\n  const width = +svg.substring(\n    svg.indexOf('width=\"') + 7,\n    svg.indexOf('px', svg.indexOf('width=\"') + 7)\n  );\n  const height = +svg.substring(\n    svg.indexOf('height=\"') + 8,\n    svg.indexOf('px', svg.indexOf('height=\"') + 8)\n  );\n  return {\n    core: svg.substring(fifthLn + 1, lastLn),\n    width,\n    height,\n  };\n};\n\nconst extractCoreFromStringifiedSvg = (svg) => {\n  const firstSvgClosingBracket = svg.indexOf('>');\n  const lastSvgOpeningBracket = svg.lastIndexOf('</svg>');\n  const [width, height] = svg\n    .substring(\n      svg.indexOf('viewbox=\"') + 9,\n      svg.indexOf('\"', svg.indexOf('viewbox=\"') + 9)\n    )\n    .split(' ')\n    .slice(2);\n  return {\n    core: svg.substring(firstSvgClosingBracket + 1, lastSvgOpeningBracket),\n    width: +width,\n    height: +height,\n  };\n};\n\nconst locationSearch = async (query) => {\n  if (!query) return undefined;\n\n  const match = query.match(/^chr(\\d+):(\\d)+$/);\n  if (\n    match &&\n    ((+match[1] > 0 && +match[1] < 23) ||\n      +match[1].toLowerCase() === 'x' ||\n      +match[1].toLowerCase() === 'y')\n  ) {\n    return [\n      {\n        chr: `chr${match[1]}`,\n        txStart: +match[2],\n        txEnd: +match[2] + 1,\n        score: 0,\n        geneName: query,\n        type: 'nucleotide',\n      },\n    ];\n  }\n\n  return undefined;\n};\n\nconst booleanQueryStringDecoder = (v) =>\n  v === undefined ? undefined : v === 'true';\n\nconst Viewer = (props) => {\n  const [infoOpen, setInfoOpen] = useQueryString('i', true, {\n    decoder: booleanQueryStringDecoder,\n  });\n  const [focusGene, setFocusGene] = useQueryString('g', '');\n  const [focusVariant, setFocusVariant] = useQueryString('v', 'rs1250566');\n  const [hideUnfocused, setHideUnfocused] = useQueryString(\n    'hide-unfocused',\n    false,\n    {\n      decoder: booleanQueryStringDecoder,\n    }\n  );\n  const [matrixColoring, setMatrixColoring] = useQueryString('mc', 'solid');\n  const [variantYScale, setVariantYScale] = useQueryString('vs', 'pValue');\n  const [dnaAccessLabels, setDnaAccessLabels] = useQueryString(\n    'al',\n    'indicator'\n  );\n  const [xDomainStart, setXDomainStart] = useQueryString(\n    's',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_START).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [xDomainEnd, setXDomainEnd] = useQueryString(\n    'e',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_END).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [\n    showEnhancerRegionDetails,\n    setShowEnhancerRegionDetails,\n  ] = useQueryString('erd', true, {\n    decoder: booleanQueryStringDecoder,\n  });\n  const [showEnhancerGeneDetails, setShowEnhancerGeneDetails] = useQueryString(\n    'egd',\n    true,\n    {\n      decoder: booleanQueryStringDecoder,\n    }\n  );\n  const [showDnaAccessDetails, setShowDnaAccessDetails] = useQueryString(\n    'ad',\n    true,\n    {\n      decoder: booleanQueryStringDecoder,\n    }\n  );\n  const [genePadding, setGenePadding] = useQueryString('gp', true, {\n    decoder: booleanQueryStringDecoder,\n  });\n  const [geneCellEncoding, setGeneCellEncoding] = useQueryString(\n    'gce',\n    'distribution'\n  );\n\n  const [focusGeneOption, setFocusGeneOption] = useState(null);\n  const [focusVariantOption, setFocusVariantOption] = useState(null);\n  const prevFocusGeneOption = usePrevious(focusGeneOption);\n  const prevFocusVariantOption = usePrevious(focusVariantOption);\n  const higlassEnhancerApi = useRef(null);\n  const higlassEnhancerMouseDown = useRef(false);\n  const higlassDnaAccessApi = useRef(null);\n  const enhancerGeneSvgRef = useRef(null);\n  const [\n    higlassEnhancerHelpAnchorEl,\n    setHiglassEnhancerHelpAnchorEl,\n  ] = useState(null);\n  const [dnaAccessHelpAnchorEl, setdnaAccessHelpAnchorEl] = useState(null);\n  const [\n    enhancerRegionSettingsAnchorEl,\n    setEnhancerRegionSettingsAnchorEl,\n  ] = useState(null);\n  const [\n    enhancerGeneSettingsAnchorEl,\n    setEnhancerGeneSettingsAnchorEl,\n  ] = useState(null);\n  const [dnaAccessSettingsAnchorEl, setDnaAccessSettingsAnchorEl] = useState(\n    null\n  );\n  const [enhancerGeneTooltip, setEnhancerGeneTooltip] = useState({\n    show: false,\n    title: '',\n    x: 0,\n    y: 0,\n    arrow: true,\n    placement: 'bottom',\n    classes: {},\n  });\n  const [higlassEnhancerMouseOver, setHiglassEnhancerMouseOver] = useState(\n    false\n  );\n  const [higlassEnhancerFocus, setHiglassEnhancerFocus] = useState(false);\n  const higlassEnhancerContainerRef = useRef(null);\n  const higlassEnhancerClickSelection = useRef(null);\n\n  // Derived State\n  const focusGeneVariantOptions = useMemo(\n    () => {\n      const _focusGeneVariant = [];\n      // Add the focus element that has not changed first!\n      if (focusGeneOption && focusGeneOption === prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption === prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      // Now add the focused element that has changed!\n      if (focusGeneOption && focusGeneOption !== prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption !== prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      return _focusGeneVariant;\n    },\n    // `prevFocusGeneOption` and `prevFocusVariantOption` are ommitted\n    // on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [focusGeneOption, focusVariantOption]\n  );\n\n  const focusGeneStartPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusGeneEndPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txEnd}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusVariantPosition = useMemo(\n    () =>\n      focusVariantOption\n        ? toAbsPosition(\n            `${focusVariantOption.chr}:${focusVariantOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusVariantOption, props.chromInfo]\n  );\n\n  const focusVariantRelPosition = useMemo(\n    () => (focusVariantOption ? +focusVariantOption.txStart : null),\n    [focusVariantOption]\n  );\n\n  const focusVariantFullPosition = useMemo(\n    () =>\n      focusVariantOption\n        ? `${focusVariantOption.chr}:${focusVariantOption.txStart}`\n        : null,\n    [focusVariantOption]\n  );\n\n  const xDomainStartAbs = useMemo(\n    () => toAbsPosition(xDomainStart, props.chromInfo),\n    [xDomainStart, props.chromInfo]\n  );\n\n  const xDomainEndAbs = useMemo(\n    () => toAbsPosition(xDomainEnd, props.chromInfo),\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const xDomainStartAbsDb = useDebounce(xDomainStartAbs, 500);\n  const xDomainEndAbsDb = useDebounce(xDomainEndAbs, 500);\n\n  const shouldSkipUpdatingXDomain = useCallback(() => {\n    if (higlassEnhancerClickSelection.current) {\n      higlassEnhancerClickSelection.current = false;\n      return true;\n    }\n    return false;\n  }, []);\n\n  const viewConfigEnhancer = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusGene(\n          focusGeneOption ? focusGeneOption.geneName : null,\n          focusGeneStartPosition,\n          focusGeneEndPosition\n        ),\n        updateViewConfigFocusVariant(focusVariantPosition, [2, 4]),\n        updateViewConfigFocusStyle(hideUnfocused),\n        updateViewConfigMatrixColoring(matrixColoring),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigXDomain(xDomainStartAbs, xDomainEndAbs, {\n          force: shouldSkipUpdatingXDomain,\n        })\n      )(deepClone(DEFAULT_VIEW_CONFIG_ENHANCER)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusGeneOption,\n      focusGeneStartPosition,\n      focusGeneEndPosition,\n      focusVariantPosition,\n      hideUnfocused,\n      matrixColoring,\n      variantYScale,\n    ]\n  );\n\n  const viewConfigEnhancerHeight = useMemo(\n    () =>\n      viewConfigEnhancer.views[0].tracks.top.reduce(\n        (height, track) => height + track.height,\n        0\n      ),\n    [viewConfigEnhancer]\n  );\n\n  const getDnaAccessibilityXDomain = () => {\n    const enhancerViewRange = xDomainEndAbs - xDomainStartAbs;\n    const enhancerViewCenter = xDomainStartAbs + enhancerViewRange / 2;\n\n    if (focusVariantPosition) {\n      if (\n        enhancerViewRange < 5000 &&\n        Math.abs(enhancerViewCenter - focusVariantPosition) < 1000\n      ) {\n        return [xDomainStartAbs, xDomainEndAbs];\n      }\n      return [focusVariantPosition - 2500, focusVariantPosition + 2500];\n    }\n\n    if (focusGeneStartPosition && focusGeneEndPosition) {\n      const midPos =\n        focusGeneStartPosition +\n        (focusGeneEndPosition - focusGeneStartPosition) / 2;\n\n      if (\n        enhancerViewRange < 5000 &&\n        enhancerViewCenter > focusGeneStartPosition &&\n        enhancerViewCenter < focusGeneEndPosition\n      ) {\n        return [xDomainStartAbs, xDomainEndAbs];\n      }\n\n      return [midPos - 2500, midPos + 2500];\n    }\n\n    return [xDomainStartAbs, xDomainEndAbs];\n  };\n\n  const viewConfigDnaAccessibility = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusVariant(focusVariantPosition, [2]),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigDnaAccessLabels(dnaAccessLabels),\n        updateViewConfigXDomain(\n          ...getDnaAccessibilityXDomain(\n            focusVariantPosition,\n            focusGeneStartPosition,\n            focusGeneEndPosition,\n            xDomainStartAbsDb,\n            xDomainEndAbsDb\n          ),\n          { force: true }\n        )\n      )(deepClone(DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusVariantPosition,\n      focusGeneStartPosition,\n      focusGeneEndPosition,\n      xDomainStartAbsDb,\n      xDomainEndAbsDb,\n      variantYScale,\n      dnaAccessLabels,\n      props.chromInfo,\n    ]\n  );\n\n  const dnaAccessibilityRegionSize = useMemo(\n    () =>\n      focusVariantPosition\n        ? 5\n        : Math.round((xDomainEndAbs - xDomainStartAbs) / 1000),\n    [focusVariantPosition, xDomainStartAbs, xDomainEndAbs]\n  );\n\n  const numericalXDomainStart = useMemo(\n    () =>\n      isString(xDomainStart) && xDomainStart.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainStart.split(':')[0],\n            +xDomainStart.split(':')[1],\n          ])\n        : +xDomainStart,\n    [xDomainStart, props.chromInfo]\n  );\n\n  const numericalXDomainEnd = useMemo(\n    () =>\n      isString(xDomainEnd) && xDomainEnd.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainEnd.split(':')[0],\n            +xDomainEnd.split(':')[1],\n          ])\n        : +xDomainEnd,\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const higlassEnhancerBlockClasses = useMemo(\n    () => (higlassEnhancerFocus ? 'higlass-block focus' : 'higlass-block'),\n    [higlassEnhancerFocus]\n  );\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n  };\n\n  const focusGeneChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusGene(newValue.geneName);\n      setFocusGeneOption(newValue);\n    } else {\n      clearFocusGene();\n    }\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    setFocusVariantOption(null);\n  };\n\n  const focusVariantChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusVariant(newValue.geneName);\n      setFocusVariantOption(newValue);\n    } else {\n      clearFocusVariant();\n    }\n  };\n\n  const focusGeneVariantChangeHandler = (newValues) => {\n    if (newValues.length) {\n      const newFocusElements = {};\n      // We only allow exactly two selections\n      newValues.slice(newValues.length - 2).forEach((newValue) => {\n        switch (newValue.type) {\n          case 'gene':\n            newFocusElements.gene = newValue;\n            if (focusGene !== newValue.geneName) {\n              setFocusGene(newValue.geneName);\n              setFocusGeneOption(newValue);\n            }\n            break;\n\n          case 'variant':\n            newFocusElements.variant = newValue;\n            if (focusVariant !== newValue.geneName) {\n              setFocusVariant(newValue.geneName);\n              setFocusVariantOption(newValue);\n            }\n            break;\n\n          default:\n            // eslint-disable-next-line no-console\n            console.warn('Unknown focus element', newValue);\n            break;\n        }\n      });\n      // Unset focus elements\n      if (focusGene && !newFocusElements.gene) clearFocusGene();\n      if (focusVariant && !newFocusElements.variant) clearFocusVariant();\n    } else {\n      clearFocusGene();\n      clearFocusVariant();\n    }\n  };\n\n  const hideUnfocusedChangeHandler = (event) => {\n    setHideUnfocused(event.target.checked);\n  };\n\n  const genePaddingChangeHandler = (event) => {\n    setGenePadding(event.target.checked);\n  };\n\n  const changeVariantYScale = (value) => () => {\n    setVariantYScale(value);\n  };\n\n  const changeMatrixColoring = (value) => () => {\n    setMatrixColoring(value);\n  };\n\n  const changeDnaAccessLabels = (value) => () => {\n    setDnaAccessLabels(value);\n  };\n\n  const changeGeneCellEncoding = (value) => () => {\n    setGeneCellEncoding(value);\n  };\n\n  const xDomainStartChangeHandler = (event) => {\n    setXDomainStart(event.target.value);\n  };\n\n  const xDomainEndChangeHandler = (event) => {\n    setXDomainEnd(event.target.value);\n  };\n\n  // HiGlass Functions\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      higlassEnhancerClickSelection.current = true;\n      setFocusGeneOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        type: 'gene',\n      });\n    } else if (event.type === 'snp') {\n      setFocusVariant(event.payload.name);\n      higlassEnhancerClickSelection.current = true;\n      setFocusVariantOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        score: event.payload.importance,\n        type: 'variant',\n      });\n    } else if (event.type === 'annotation') {\n      console.log('clicked on annotation', event.payload);\n    }\n  };\n\n  const higlassLocationChangeHandler = (event) => {\n    const [newXDomainStart, newXDomainEnd] = event.xDomain.map((absPos) =>\n      props.chromInfo.absToChr(absPos).slice(0, 2).join(':')\n    );\n    setXDomainStart(newXDomainStart);\n    setXDomainEnd(newXDomainEnd);\n  };\n  const higlassLocationChangeHandlerDb = debounce(\n    higlassLocationChangeHandler,\n    250\n  );\n\n  const higlassEnhancerZoomToXDomain = (event) => {\n    if (!higlassEnhancerApi.current) return;\n\n    const newViewConfig = deepClone(viewConfigEnhancer);\n\n    const xDomain = [...newViewConfig.views[0].initialXDomain];\n\n    if (!Number.isNaN(+numericalXDomainStart)) {\n      xDomain[0] = numericalXDomainStart;\n    }\n    if (!Number.isNaN(+numericalXDomainEnd)) {\n      xDomain[1] = numericalXDomainEnd;\n    }\n\n    higlassEnhancerApi.current.zoomTo(\n      'context',\n      xDomain[0],\n      xDomain[1],\n      xDomain[0],\n      xDomain[1],\n      2000\n    );\n  };\n\n  // Initializations\n  useEffect(\n    () => {\n      (async () => {\n        if (focusGene && !focusGeneOption) {\n          const r = await fetch(`${GENE_SEARCH_URL}&ac=${focusGene}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'gene';\n          focusGeneChangeHandler(results[0]);\n        }\n        if (focusVariant && !focusVariantOption) {\n          const r = await fetch(`${VARIANT_SEARCH_URL}&ac=${focusVariant}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'variant';\n          focusVariantChangeHandler(results[0]);\n        }\n      })();\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const windowMouseDownClearHandler = useCallback((e) => {\n    if (!isParentOf(e.target, higlassEnhancerContainerRef.current)) {\n      setHiglassEnhancerFocus(false);\n    }\n    higlassEnhancerMouseDown.current = false;\n  }, []);\n\n  useEffect(\n    () => {\n      window.addEventListener('mouseup', windowMouseDownClearHandler);\n      window.addEventListener('blur', windowMouseDownClearHandler);\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassEnhancerMouseDownHandler = useCallback(() => {\n    higlassEnhancerMouseDown.current = true;\n  }, []);\n\n  const higlassEnhancerInitHandler = useCallback(\n    (higlassInstance) => {\n      if (higlassInstance !== null) {\n        higlassEnhancerApi.current = higlassInstance.api;\n        higlassInstance.api.on('click', higlassClickHandler);\n        higlassInstance.api.on(\n          'location',\n          higlassLocationChangeHandlerDb,\n          'context'\n        );\n        higlassEnhancerApi.current\n          .getComponent()\n          .element.addEventListener(\n            'mousedown',\n            higlassEnhancerMouseDownHandler\n          );\n      }\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassDnaAccessibilityInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassDnaAccessApi.current = higlassInstance.api;\n    }\n  }, []);\n\n  const higlassEnhancerHelpClickHandler = (event) => {\n    setHiglassEnhancerHelpAnchorEl(event.currentTarget);\n  };\n\n  const higlassEnhancerHelpCloseHandler = () => {\n    setHiglassEnhancerHelpAnchorEl(null);\n  };\n\n  const dnaAccessHelpClickHandler = (event) => {\n    setdnaAccessHelpAnchorEl(event.currentTarget);\n  };\n\n  const dnaAccessHelpCloseHandler = () => {\n    setdnaAccessHelpAnchorEl(null);\n  };\n\n  const higlassEnhancerHelpOpen = Boolean(higlassEnhancerHelpAnchorEl);\n  const higlassEnhancerHelpId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const dnaAccessHelpOpen = Boolean(dnaAccessHelpAnchorEl);\n  const dnaAccessHelpId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const enhancerRegionSettingsOpenHandler = (event) => {\n    setEnhancerRegionSettingsAnchorEl(event.currentTarget);\n  };\n\n  const enhancerRegionSettingsCloseHandler = () => {\n    setEnhancerRegionSettingsAnchorEl(null);\n  };\n\n  const enhancerGeneSettingsOpenHandler = (event) => {\n    setEnhancerGeneSettingsAnchorEl(event.currentTarget);\n  };\n\n  const enhancerGeneSettingsCloseHandler = () => {\n    setEnhancerGeneSettingsAnchorEl(null);\n  };\n\n  const dnaAccessSettingsOpenHandler = (event) => {\n    setDnaAccessSettingsAnchorEl(event.currentTarget);\n  };\n\n  const dnaAccessSettingsCloseHandler = () => {\n    setDnaAccessSettingsAnchorEl(null);\n  };\n\n  const enhancerRegionSettingsOpen = Boolean(enhancerRegionSettingsAnchorEl);\n  const enhancerRegionSettingsId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const enhancerGeneSettingsOpen = Boolean(enhancerGeneSettingsAnchorEl);\n  const enhancerGeneSettingsId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const dnaAccessSettingsOpen = Boolean(dnaAccessSettingsAnchorEl);\n  const dnaAccessSettingsId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const infoOpenHandler = () => {\n    setInfoOpen(true);\n  };\n\n  const infoCloseHandler = () => {\n    setInfoOpen(false);\n  };\n\n  const enhancerRegionDetailsClickHandler = () => {\n    setShowEnhancerRegionDetails(!showEnhancerRegionDetails);\n  };\n\n  const higlassEnhancerGeneDetailsClickHandler = () => {\n    setShowEnhancerGeneDetails(!showEnhancerGeneDetails);\n  };\n\n  const dnaAccessDetailsClickHandler = () => {\n    setShowDnaAccessDetails(!showDnaAccessDetails);\n  };\n\n  const openEnhancerGeneTooltip = useCallback(\n    (\n      x,\n      y,\n      title,\n      { arrow = false, placement = 'bottom', classes = {} } = {}\n    ) => {\n      setEnhancerGeneTooltip({\n        show: true,\n        x,\n        y,\n        title,\n        arrow,\n        placement,\n        classes,\n      });\n    },\n    []\n  );\n\n  const closeEnhancerGeneTooltip = useCallback(() => {\n    setEnhancerGeneTooltip({\n      show: false,\n      title: '',\n      x: 0,\n      y: 0,\n      arrow: true,\n      placement: 'bottom',\n      classes: {},\n    });\n  }, []);\n\n  const higlassEnhancerFocusHandler = useCallback(() => {\n    setHiglassEnhancerFocus(true);\n  }, []);\n\n  const higlassEnhancerBlurHandler = useCallback(() => {\n    if (!higlassEnhancerMouseDown.current) {\n      setHiglassEnhancerFocus(false);\n    }\n  }, [higlassEnhancerMouseDown]);\n\n  const higlassEnhancerContainerMouseEnterHandler = useCallback(() => {\n    setHiglassEnhancerMouseOver(true);\n  }, []);\n\n  const higlassEnhancerContainerMouseLeaveHandler = useCallback(() => {\n    setHiglassEnhancerMouseOver(false);\n  }, []);\n\n  const mergeSvgs = (enhancerSvg, dnaAccessSvg, enhancerGeneSvg) => {\n    const {\n      core: enhancerSvgCore,\n      width: enhancerWidth,\n      height: enhancerHeight,\n    } = extractCoreFromHiGlassSvg(enhancerSvg);\n    const {\n      core: dnaAccessSvgCore,\n      width: dnaAccessWidth,\n      height: dnaAccessHeight,\n    } = extractCoreFromHiGlassSvg(dnaAccessSvg);\n    const {\n      core: enhancerGeneSvgCore,\n      height: enhancerGeneHeight,\n    } = extractCoreFromStringifiedSvg(enhancerGeneSvg);\n\n    const actualEnhancerHeight = viewConfigEnhancer.views[0].tracks.top.reduce(\n      (height, track) => height + track.height,\n      0\n    );\n    const actualDnaAccessHeight = viewConfigDnaAccessibility.views[0].tracks.top.reduce(\n      (height, track) => height + track.height,\n      0\n    );\n    const padding = 24;\n\n    let mergedSvg = SVG_SKELETON;\n    mergedSvg = mergedSvg.replace(\n      '_WIDTH_',\n      enhancerWidth + dnaAccessWidth + padding\n    );\n    mergedSvg = mergedSvg.replace(\n      '_HEIGHT_',\n      Math.max(\n        enhancerHeight + enhancerGeneHeight + padding,\n        dnaAccessHeight,\n        actualEnhancerHeight + enhancerGeneHeight + padding,\n        actualDnaAccessHeight\n      )\n    );\n    mergedSvg = mergedSvg.replace('_ENHANCER_', enhancerSvgCore);\n    mergedSvg = mergedSvg.replace(\n      '_ENHANCER_GENE_Y_',\n      enhancerHeight + padding\n    );\n    mergedSvg = mergedSvg.replace('_ENHANCER_GENE_', enhancerGeneSvgCore);\n    mergedSvg = mergedSvg.replace('_DNA_ACCESS_X_', enhancerWidth + padding);\n    mergedSvg = mergedSvg.replace('_DNA_ACCESS_', dnaAccessSvgCore);\n\n    return mergedSvg;\n  };\n\n  const higlassExportAsSvg = () => {\n    const mergedSvg = mergeSvgs(\n      higlassEnhancerApi.current.exportAsSvg(),\n      higlassDnaAccessApi.current.exportAsSvg(),\n      stringifySvg(enhancerGeneSvgRef.current)\n    );\n\n    download(\n      'abc-enhancers.svg',\n      new Blob([mergedSvg], { type: 'image/svg+xml' })\n    );\n  };\n\n  // Run on every render\n  const classes = useStyles();\n\n  const enhancerRegionDetailsIconClass = showEnhancerRegionDetails\n    ? classes.titleBarIconActive\n    : classes.titleBarIcon;\n\n  const enhancerRegionSettingsIconClass = enhancerRegionSettingsOpen\n    ? classes.titleBarIconActive\n    : classes.titleBarIcon;\n\n  const enhancerGeneDetailsIconClass = showEnhancerGeneDetails\n    ? classes.titleBarIconActive\n    : classes.titleBarIcon;\n\n  const enhancerGeneSettingsIconClass = enhancerGeneSettingsOpen\n    ? classes.titleBarIconActive\n    : classes.titleBarIcon;\n\n  const dnaAccessDetailsIconClass = showDnaAccessDetails\n    ? classes.titleBarIconActive\n    : classes.titleBarIcon;\n\n  const dnaAccessSettingsIconClass = dnaAccessSettingsOpen\n    ? classes.titleBarIconActive\n    : classes.titleBarIcon;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar\n          classes={{\n            root: classes.toolbarExtra,\n          }}\n        >\n          <FormControl fullWidth>\n            <SearchField\n              label={\n                <Grid container direction=\"row\" alignItems=\"center\">\n                  <SearchIcon fontSize=\"small\" />\n                  <span style={{ marginLeft: 3 }}>Gene or Variant</span>\n                </Grid>\n              }\n              customSearch={locationSearch}\n              searchUrl={[\n                { url: GENE_SEARCH_URL, type: 'gene' },\n                { url: VARIANT_SEARCH_URL, type: 'variant' },\n              ]}\n              onChange={focusGeneVariantChangeHandler}\n              value={focusGeneVariantOptions}\n              variant=\"filled\"\n              larger\n              fullWidth\n              multiple\n            />\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <Grid container direction=\"column\" className={classes.drawerGrid}>\n          <Grid item>\n            <ButtonBase className={classes.toolbar} style={{ width: '100%' }}>\n              <h1 className={classes.h1} onClick={infoOpenHandler}>\n                <Logo />\n              </h1>\n            </ButtonBase>\n            <Divider />\n          </Grid>\n          <Grid container item className={classes.grow} direction=\"column\">\n            <Grid item>\n              <Box className={classes.globalSettingsTitle}>\n                <Typography variant=\"subtitle2\" component=\"h6\">\n                  Genomic Region:\n                </Typography>\n              </Box>\n              <Box className={classes.globalSettingsFirstBox}>\n                <Box m={0}>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel htmlFor=\"x-domain-start\">Start</InputLabel>\n                    <OutlinedInput\n                      id=\"x-domain-start\"\n                      label=\"Start\"\n                      onChange={xDomainStartChangeHandler}\n                      value={xDomainStart}\n                    />\n                  </FormControl>\n                </Box>\n                <Box m={0}>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel htmlFor=\"x-domain-end\">End</InputLabel>\n                    <OutlinedInput\n                      id=\"x-domain-end\"\n                      label=\"End\"\n                      onChange={xDomainEndChangeHandler}\n                      value={xDomainEnd}\n                    />\n                  </FormControl>\n                </Box>\n                <Box m={0}>\n                  <Button\n                    variant=\"contained\"\n                    margin=\"dense\"\n                    onClick={higlassEnhancerZoomToXDomain}\n                    fullWidth\n                    disableElevation\n                  >\n                    Go\n                  </Button>\n                </Box>\n              </Box>\n              <Divider />\n              <Box className={classes.globalSettingsFirstBox}>\n                <Box className={classes.globalSettingsTitle}>\n                  <Typography variant=\"subtitle2\" component=\"h6\">\n                    Variants:\n                  </Typography>\n                </Box>\n                <Box m={0}>\n                  <Button\n                    variant=\"contained\"\n                    margin=\"dense\"\n                    fullWidth\n                    disableElevation\n                    startIcon={<SettingsIcon />}\n                  >\n                    Load or Adjust\n                  </Button>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid item className={classes.settings}>\n              <Box m={0} className={classes.settingsContent}>\n                <Box className={classes.globalSettingsTitle}>\n                  <Typography variant=\"subtitle2\" component=\"h6\">\n                    Samples:\n                  </Typography>\n                </Box>\n                <Box className={classes.globalSettingsFirstBox}>\n                  <CheckboxList\n                    options={samples}\n                    groupColorsDark={DEFAULT_COLOR_MAP_DARK}\n                    groupColorsLight={DEFAULT_COLOR_MAP_LIGHT}\n                  />\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Divider />\n              <Box m={1}>\n                <Button\n                  variant=\"contained\"\n                  margin=\"dense\"\n                  onClick={higlassExportAsSvg}\n                  fullWidth\n                  disableElevation\n                >\n                  Export as SVG\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div className={classes.higlass}>\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassEnhancer}\n          >\n            <Grid\n              item\n              className={classes.titleBar}\n              container\n              justify=\"space-between\"\n              alignItems=\"center\"\n              wrap=\"nowrap\"\n            >\n              <Grid\n                item\n                container\n                wrap=\"nowrap\"\n                alignItems=\"center\"\n                className={classes.titleBarContainer}\n              >\n                <Typography\n                  component=\"h3\"\n                  className={`${classes.titleBarText} ${classes.titleBarTitle}`}\n                  noWrap\n                >\n                  ABC Enhancers:\n                </Typography>\n              </Grid>\n              <Grid item className={classes.titleBarMiddle}>\n                <div className=\"full-wh\">\n                  <Grid\n                    container\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    wrap=\"nowrap\"\n                    className={classes.titleBarMiddleContent}\n                  >\n                    {higlassEnhancerFocus ? (\n                      <Typography\n                        // Just a hack to trigger a dom rerendering which in turn\n                        // triggers the fadeout animation\n                        component=\"div\"\n                        className={`${classes.panZoomTipActive} ${\n                          higlassEnhancerMouseOver ? 'show' : ''\n                        }`}\n                        noWrap\n                      >\n                        You can now pan & zoom the plot! Click outside the plot\n                        to deactivate pan & zoom!\n                      </Typography>\n                    ) : (\n                      <Typography\n                        // Just a hack to trigger a dom rerendering which in turn\n                        // triggers the fadeout animation\n                        component=\"span\"\n                        className={`${classes.panZoomTip} ${\n                          higlassEnhancerMouseOver ? 'show' : ''\n                        }`}\n                        noWrap\n                      >\n                        Click inside the plot below to activate pan & zoom!\n                      </Typography>\n                    )}\n                  </Grid>\n                </div>\n              </Grid>\n              <Grid item>\n                <IconButton\n                  aria-label=\"help\"\n                  aria-describedby={higlassEnhancerHelpId}\n                  className={classes.titleBarIcon}\n                  size=\"small\"\n                  onClick={higlassEnhancerHelpClickHandler}\n                >\n                  <HelpIcon fontSize=\"inherit\" />\n                </IconButton>\n                <Popover\n                  id={higlassEnhancerHelpId}\n                  open={higlassEnhancerHelpOpen}\n                  anchorEl={higlassEnhancerHelpAnchorEl}\n                  onClose={higlassEnhancerHelpCloseHandler}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                >\n                  <Typography className={classes.titleBarHelpPopeover}>\n                    This panel visualizes the predicted enhancers by sample type\n                    as a matrix-like track. Each rectangle representes an\n                    enhancer. Promoter regions are indicated by translucent\n                    light gray overlays.\n                  </Typography>\n                  <Typography className={classes.titleBarHelpPopeover}>\n                    {' '}\n                    You can filter enhancers via their target gene or by variant\n                    (the dot plot below the gene annotations). Click on a\n                    variant or gene to select it. Selections are shown in\n                    pink/red.\n                  </Typography>\n                </Popover>\n              </Grid>\n            </Grid>\n            <Grid\n              item\n              className={classes.grow}\n              style={{ position: 'relative' }}\n            >\n              <div\n                className={classes.fullWidthHeight}\n                style={{ overflow: 'auto' }}\n              >\n                <Grid\n                  container\n                  direction=\"column\"\n                  className={classes.higlassEnhancerContainer}\n                >\n                  <Grid item className={classes.higlassEnhancerInfoBar}>\n                    <Grid\n                      container\n                      justify=\"space-between\"\n                      alignItems=\"center\"\n                      wrap=\"nowrap\"\n                    >\n                      <Typography\n                        component=\"h4\"\n                        className={classes.infoBarTitle}\n                        noWrap\n                      >\n                        Enhancer Regions\n                      </Typography>\n                      <Grid item>\n                        <Grid container alignItems=\"center\" wrap=\"nowrap\">\n                          <IconButton\n                            aria-label=\"details\"\n                            className={enhancerRegionDetailsIconClass}\n                            size=\"small\"\n                            onClick={enhancerRegionDetailsClickHandler}\n                          >\n                            <InfoIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            aria-label=\"settings\"\n                            aria-describedby={enhancerRegionSettingsId}\n                            className={enhancerRegionSettingsIconClass}\n                            size=\"small\"\n                            onClick={enhancerRegionSettingsOpenHandler}\n                          >\n                            <SettingsIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <Popover\n                            id={enhancerRegionSettingsId}\n                            open={enhancerRegionSettingsOpen}\n                            anchorEl={enhancerRegionSettingsAnchorEl}\n                            onClose={enhancerRegionSettingsCloseHandler}\n                            anchorOrigin={{\n                              vertical: 'bottom',\n                              horizontal: 'right',\n                            }}\n                            transformOrigin={{\n                              vertical: 'top',\n                              horizontal: 'right',\n                            }}\n                          >\n                            <Box m={1}>\n                              <FormControlLabel\n                                control={\n                                  <Switch\n                                    checked={hideUnfocused}\n                                    onChange={hideUnfocusedChangeHandler}\n                                    name=\"hideUnfocused\"\n                                  />\n                                }\n                                label=\"Hide unfocused enhancer regions\"\n                              />\n                            </Box>\n                            <Box m={1}>\n                              <FormControl component=\"fieldset\">\n                                <FormLabel\n                                  component=\"legend\"\n                                  className={classes.iconRadioLegend}\n                                >\n                                  Variant y-scale\n                                </FormLabel>\n                                <RadioGroup\n                                  aria-label=\"variantYScale\"\n                                  name=\"variantYScale\"\n                                  value={variantYScale}\n                                >\n                                  <FormControlLabel\n                                    label=\"p-value\"\n                                    value=\"pValue\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeVariantYScale('pValue')}\n                                      >\n                                        {variantYScale === 'pValue' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                  <FormControlLabel\n                                    label=\"Posterior probability\"\n                                    value=\"posteriorProbability\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeVariantYScale(\n                                          'posteriorProbability'\n                                        )}\n                                      >\n                                        {variantYScale ===\n                                        'posteriorProbability' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                </RadioGroup>\n                              </FormControl>\n                            </Box>\n                            <Box m={1}>\n                              <FormControl component=\"fieldset\">\n                                <FormLabel\n                                  component=\"legend\"\n                                  className={classes.iconRadioLegend}\n                                >\n                                  Matrix coloring\n                                </FormLabel>\n                                <RadioGroup\n                                  aria-label=\"matrixColoring\"\n                                  name=\"matrixColoring\"\n                                  value={matrixColoring}\n                                >\n                                  <FormControlLabel\n                                    label=\"Solid\"\n                                    value=\"solid\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeMatrixColoring('solid')}\n                                      >\n                                        {matrixColoring === 'solid' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                  <FormControlLabel\n                                    label=\"Number of predictions\"\n                                    value=\"frequency\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeMatrixColoring(\n                                          'frequency'\n                                        )}\n                                      >\n                                        {matrixColoring === 'frequency' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                  <FormControlLabel\n                                    label=\"Highest prediction score\"\n                                    value=\"highestImportance\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeMatrixColoring(\n                                          'highestImportance'\n                                        )}\n                                      >\n                                        {matrixColoring ===\n                                        'highestImportance' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                  <FormControlLabel\n                                    label=\"Prediction score of the closest connection\"\n                                    value=\"closestImportance\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeMatrixColoring(\n                                          'closestImportance'\n                                        )}\n                                      >\n                                        {matrixColoring ===\n                                        'closestImportance' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                </RadioGroup>\n                              </FormControl>\n                            </Box>\n                          </Popover>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    {showEnhancerRegionDetails && focusGene && focusVariant && (\n                      <Typography className={classes.titleBarText} noWrap>\n                        <span className={classes.pink}>■</span> Enhancers\n                        containing <em>{focusVariant}</em> and predicted to\n                        regulate <em>{focusGene}</em>\n                      </Typography>\n                    )}\n                    {showEnhancerRegionDetails && focusGene && !focusVariant && (\n                      <Typography className={classes.titleBarText} noWrap>\n                        <span className={classes.pink}>■</span> Enhancers\n                        predicted to regulate <em>{focusGene}</em>\n                      </Typography>\n                    )}\n                    {showEnhancerRegionDetails && !focusGene && focusVariant && (\n                      <Typography className={classes.titleBarText} noWrap>\n                        <span className={classes.pink}>■</span> Enhancers\n                        containing <em>{focusVariant}</em>\n                      </Typography>\n                    )}\n                    {showEnhancerRegionDetails &&\n                      (focusGene || focusVariant ? (\n                        <Typography className={classes.titleBarText} noWrap>\n                          <span className={classes.gray}>■</span> All other\n                          predicted enhancers\n                        </Typography>\n                      ) : (\n                        <Typography className={classes.titleBarText} noWrap>\n                          <span className={classes.black}>■</span> All predicted\n                          enhancers\n                        </Typography>\n                      ))}\n                  </Grid>\n                  <Grid\n                    item\n                    className={classes.grow}\n                    onMouseEnter={higlassEnhancerContainerMouseEnterHandler}\n                    onMouseLeave={higlassEnhancerContainerMouseLeaveHandler}\n                    ref={higlassEnhancerContainerRef}\n                    style={{ height: `${viewConfigEnhancerHeight}px` }}\n                  >\n                    <HiGlassComponent\n                      ref={higlassEnhancerInitHandler}\n                      viewConfig={viewConfigEnhancer}\n                      options={{\n                        sizeMode: 'bounded',\n                        globalMousePosition: true,\n                      }}\n                    />\n                    <div\n                      className={higlassEnhancerBlockClasses}\n                      onMouseDown={higlassEnhancerMouseDownHandler}\n                      onFocus={higlassEnhancerFocusHandler}\n                      onBlur={higlassEnhancerBlurHandler}\n                      tabIndex=\"0\"\n                    />\n                  </Grid>\n                  <Grid item className={classes.higlassEnhancerInfoBar}>\n                    <Grid\n                      container\n                      justify=\"space-between\"\n                      alignItems=\"center\"\n                      wrap=\"nowrap\"\n                    >\n                      <Typography\n                        component=\"h4\"\n                        className={classes.infoBarTitle}\n                        noWrap\n                      >\n                        Enhancer-Gene Connections\n                      </Typography>\n                      <Grid item>\n                        <Grid container alignItems=\"center\" wrap=\"nowrap\">\n                          <IconButton\n                            aria-label=\"details\"\n                            className={enhancerGeneDetailsIconClass}\n                            size=\"small\"\n                            onClick={higlassEnhancerGeneDetailsClickHandler}\n                          >\n                            <InfoIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            aria-label=\"settings\"\n                            aria-describedby={enhancerGeneSettingsId}\n                            className={enhancerGeneSettingsIconClass}\n                            size=\"small\"\n                            onClick={enhancerGeneSettingsOpenHandler}\n                          >\n                            <SettingsIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <Popover\n                            id={enhancerGeneSettingsId}\n                            open={enhancerGeneSettingsOpen}\n                            anchorEl={enhancerGeneSettingsAnchorEl}\n                            onClose={enhancerGeneSettingsCloseHandler}\n                            anchorOrigin={{\n                              vertical: 'top',\n                              horizontal: 'right',\n                            }}\n                            transformOrigin={{\n                              vertical: 'bottom',\n                              horizontal: 'right',\n                            }}\n                          >\n                            <Box m={1}>\n                              <FormControlLabel\n                                control={\n                                  <Switch\n                                    checked={genePadding}\n                                    onChange={genePaddingChangeHandler}\n                                    name=\"true\"\n                                  />\n                                }\n                                label=\"Gene padding\"\n                              />\n                            </Box>\n                            <Box m={1}>\n                              <FormControl component=\"fieldset\">\n                                <FormLabel\n                                  component=\"legend\"\n                                  className={classes.iconRadioLegend}\n                                >\n                                  Gene Cell Encoding\n                                </FormLabel>\n                                <RadioGroup\n                                  aria-label=\"geneCellEncoding\"\n                                  name=\"geneCellEncoding\"\n                                  value={geneCellEncoding}\n                                >\n                                  <FormControlLabel\n                                    label=\"Number of predictions\"\n                                    value=\"number\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeGeneCellEncoding(\n                                          'number'\n                                        )}\n                                      >\n                                        {geneCellEncoding === 'number' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                  <FormControlLabel\n                                    label=\"Percentage of samples with predictions\"\n                                    value=\"percent\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeGeneCellEncoding(\n                                          'percent'\n                                        )}\n                                      >\n                                        {geneCellEncoding === 'percent' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                  <FormControlLabel\n                                    label=\"Distribution by prediction score\"\n                                    value=\"distribution\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeGeneCellEncoding(\n                                          'distribution'\n                                        )}\n                                      >\n                                        {geneCellEncoding === 'distribution' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                  <FormControlLabel\n                                    label=\"Sample array\"\n                                    value=\"array\"\n                                    className={classes.iconRadio}\n                                    control={\n                                      <IconButton\n                                        size=\"small\"\n                                        onClick={changeGeneCellEncoding(\n                                          'array'\n                                        )}\n                                      >\n                                        {geneCellEncoding === 'array' ? (\n                                          <RadioButtonCheckedIcon\n                                            className={classes.iconRadioActive}\n                                            fontSize=\"inherit\"\n                                          />\n                                        ) : (\n                                          <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                        )}\n                                      </IconButton>\n                                    }\n                                  />\n                                </RadioGroup>\n                              </FormControl>\n                            </Box>\n                          </Popover>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    {showEnhancerGeneDetails && focusVariant && (\n                      <Typography className={classes.titleBarText}>\n                        Enhancer region overlapping <em>{focusVariant}</em> and\n                        its predicted connections to upstream (left) and\n                        downstream (right) genes.\n                      </Typography>\n                    )}\n                  </Grid>\n                  <Grid item className={classes.higlassEnhancerGenePlot}>\n                    {focusVariant ? (\n                      <EnhancerGenePlot\n                        geneCellEncoding={geneCellEncoding}\n                        position={focusVariantPosition}\n                        relPosition={focusVariantRelPosition}\n                        fullPosition={focusVariantFullPosition}\n                        variant={focusVariant}\n                        genePadding={genePadding}\n                        openTooltip={openEnhancerGeneTooltip}\n                        closeTooltip={closeEnhancerGeneTooltip}\n                        svgRef={enhancerGeneSvgRef}\n                      />\n                    ) : (\n                      <Grid\n                        container\n                        justify=\"center\"\n                        alignItems=\"center\"\n                        className={classes.higlassEnhancerGenePlotPlaceholder}\n                      >\n                        <Typography>Select a variant to see details</Typography>\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n          <div className={classes.higlassSeparator} />\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassDnaAccessibility}\n          >\n            <Grid\n              item\n              className={classes.titleBar}\n              container\n              justify=\"space-between\"\n              alignItems=\"center\"\n              wrap=\"nowrap\"\n            >\n              <Grid item container alignItems=\"center\" wrap=\"nowrap\">\n                <Typography\n                  component=\"h3\"\n                  className={`${classes.titleBarText} ${classes.titleBarTitle}`}\n                  noWrap\n                >\n                  DNA Accessibility:\n                </Typography>\n              </Grid>\n              <Grid item>\n                <IconButton\n                  aria-label=\"help\"\n                  aria-describedby={dnaAccessHelpId}\n                  className={classes.titleBarIcon}\n                  size=\"small\"\n                  onClick={dnaAccessHelpClickHandler}\n                >\n                  <HelpIcon fontSize=\"inherit\" />\n                </IconButton>\n                <Popover\n                  id={dnaAccessHelpId}\n                  open={dnaAccessHelpOpen}\n                  anchorEl={dnaAccessHelpAnchorEl}\n                  onClose={dnaAccessHelpCloseHandler}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                >\n                  <Typography className={classes.titleBarHelpPopeover}>\n                    This panel visualizes the DNA accessibility of all 131\n                    samples. Each track is individually normalized. Mouse over a\n                    track to see the underlying value. To focus on a specific\n                    locus specify a focus variant.\n                  </Typography>\n                </Popover>\n              </Grid>\n            </Grid>\n            <Grid item container direction=\"column\" className={classes.grow}>\n              <Grid item className={classes.dnaAccessibilityInfoBar}>\n                <Grid\n                  container\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                  wrap=\"nowrap\"\n                >\n                  <Typography\n                    component=\"h4\"\n                    className={classes.infoBarTitle}\n                    noWrap\n                  >\n                    ATAC &amp; DNase-Seq\n                  </Typography>\n                  <Grid item>\n                    <Grid container alignItems=\"center\" wrap=\"nowrap\">\n                      <IconButton\n                        aria-label=\"details\"\n                        className={dnaAccessDetailsIconClass}\n                        size=\"small\"\n                        onClick={dnaAccessDetailsClickHandler}\n                      >\n                        <InfoIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <IconButton\n                        aria-label=\"settings\"\n                        aria-describedby={dnaAccessSettingsId}\n                        className={dnaAccessSettingsIconClass}\n                        size=\"small\"\n                        onClick={dnaAccessSettingsOpenHandler}\n                      >\n                        <SettingsIcon fontSize=\"inherit\" />\n                      </IconButton>\n                      <Popover\n                        id={dnaAccessSettingsId}\n                        open={dnaAccessSettingsOpen}\n                        anchorEl={dnaAccessSettingsAnchorEl}\n                        onClose={dnaAccessSettingsCloseHandler}\n                        anchorOrigin={{\n                          vertical: 'bottom',\n                          horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                          vertical: 'top',\n                          horizontal: 'right',\n                        }}\n                      >\n                        {' '}\n                        <Box m={1}>\n                          <FormControl component=\"fieldset\">\n                            <FormLabel\n                              component=\"legend\"\n                              className={classes.iconRadioLegend}\n                            >\n                              Labels\n                            </FormLabel>\n                            <RadioGroup\n                              aria-label=\"dnaAccessLabels\"\n                              name=\"dnaAccessLabels\"\n                              value={dnaAccessLabels}\n                            >\n                              <FormControlLabel\n                                label=\"Indicator\"\n                                value=\"indicator\"\n                                className={classes.iconRadio}\n                                control={\n                                  <IconButton\n                                    size=\"small\"\n                                    onClick={changeDnaAccessLabels('indicator')}\n                                  >\n                                    {dnaAccessLabels === 'indicator' ? (\n                                      <RadioButtonCheckedIcon\n                                        className={classes.iconRadioActive}\n                                        fontSize=\"inherit\"\n                                      />\n                                    ) : (\n                                      <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                    )}\n                                  </IconButton>\n                                }\n                              />\n                              <FormControlLabel\n                                label=\"Text\"\n                                value=\"text\"\n                                className={classes.iconRadio}\n                                control={\n                                  <IconButton\n                                    size=\"small\"\n                                    onClick={changeDnaAccessLabels('text')}\n                                  >\n                                    {dnaAccessLabels === 'text' ? (\n                                      <RadioButtonCheckedIcon\n                                        className={classes.iconRadioActive}\n                                        fontSize=\"inherit\"\n                                      />\n                                    ) : (\n                                      <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                    )}\n                                  </IconButton>\n                                }\n                              />\n                              <FormControlLabel\n                                label=\"Hidden\"\n                                value=\"hidden\"\n                                className={classes.iconRadio}\n                                control={\n                                  <IconButton\n                                    size=\"small\"\n                                    onClick={changeDnaAccessLabels('hidden')}\n                                  >\n                                    {dnaAccessLabels === 'hidden' ? (\n                                      <RadioButtonCheckedIcon\n                                        className={classes.iconRadioActive}\n                                        fontSize=\"inherit\"\n                                      />\n                                    ) : (\n                                      <RadioButtonUncheckedIcon fontSize=\"inherit\" />\n                                    )}\n                                  </IconButton>\n                                }\n                              />\n                            </RadioGroup>\n                          </FormControl>\n                        </Box>\n                      </Popover>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                {showDnaAccessDetails && (\n                  <div className={classes.dnaAccessibilityInfoBarRegion}>\n                    <span>├</span>\n                    <Typography\n                      align=\"center\"\n                      className={classes.titleBarText}\n                      noWrap\n                    >\n                      {toFixed(dnaAccessibilityRegionSize, 1)}{' '}\n                      <abbr title=\"kilo base pairs\">kbp</abbr>\n                    </Typography>\n                    <span>┤</span>\n                  </div>\n                )}\n              </Grid>\n              <Grid item className={classes.grow}>\n                <HiGlassComponent\n                  ref={higlassDnaAccessibilityInitHandler}\n                  viewConfig={viewConfigDnaAccessibility}\n                  options={{\n                    sizeMode: 'scroll',\n                    pixelPreciseMarginPadding: true,\n                    containerPaddingX: 0,\n                    containerPaddingY: 0,\n                    viewMarginTop: 0,\n                    viewMarginBottom: 0,\n                    viewMarginLeft: 0,\n                    viewMarginRight: 0,\n                    viewPaddingTop: 0,\n                    viewPaddingBottom: 0,\n                    viewPaddingLeft: 0,\n                    viewPaddingRight: 16,\n                    globalMousePosition: true,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n        <Tooltip\n          open={enhancerGeneTooltip.show}\n          title={enhancerGeneTooltip.title}\n          arrow={enhancerGeneTooltip.arrow}\n          placement={enhancerGeneTooltip.placement}\n          classes={enhancerGeneTooltip.classes}\n        >\n          <div\n            className={classes.enhancerGeneTooltip}\n            style={{\n              top: enhancerGeneTooltip.y,\n              left: enhancerGeneTooltip.x,\n            }}\n          />\n        </Tooltip>\n      </main>\n      <Modal\n        aria-labelledby=\"info-title\"\n        aria-describedby=\"info-description\"\n        className={classes.modal}\n        open={infoOpen}\n        onClose={infoCloseHandler}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 250,\n        }}\n      >\n        <Fade in={infoOpen}>\n          <div className={classes.paper}>\n            <Welcome infoCloseHandler={infoCloseHandler} />\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nViewer.propTypes = {\n  chromInfo: PropTypes.object.isRequired,\n};\n\nexport default Viewer;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport Viewer from './Viewer';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n    secondary: {\n      main: '#000',\n    },\n  },\n});\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const AppViewer = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(Viewer);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <AppViewer chromInfo={chromInfo} />\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createAnnotationOverlayMetaTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  // Services\n  const { pubSub } = HGC.services;\n\n  class AnnotationOverlayMetaTrack {\n    constructor(context, options) {\n      const { definition, getTrackObject, onNewTilesLoaded: animate } = context;\n\n      this.animate = animate;\n      this.options = options;\n\n      this.overlaysTrack = getTrackObject(definition.overlaysTrack);\n\n      if (!this.overlaysTrack) {\n        console.warn(\n          `Overlays track (uid: ${definition.overlaysTrack}) not found`\n        );\n        return;\n      }\n\n      this.annotationTrackIds = new Set();\n      this.annotationTracks = definition.options.annotationTracks\n        .map((uid) => {\n          const track = getTrackObject(uid);\n\n          if (!track) {\n            console.warn(`Child track (uid: ${uid}) not found`);\n          } else {\n            this.annotationTrackIds.add(track.uuid);\n          }\n\n          return track;\n        })\n        .filter((track) => track);\n\n      this.annotationDrawnHandlerBound = this.annotationDrawnHandler.bind(this);\n      this.tilesDrawnEndHandlerBound = this.tilesDrawnEndHandler.bind(this);\n\n      this.drawnAnnotations = new Map();\n      this.tracksDrawingTiles = new Set();\n\n      this.pubSubs = [];\n\n      // Augment annotation tracks\n      this.annotationTracks.forEach((track) => {\n        track.subscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n        track.subscribe('tilesDrawn', this.tilesDrawnEndHandlerBound);\n      });\n    }\n\n    /**\n     * Handles annotation drawn events\n     *\n     * @param  {String}  event.uid  UID of the view that triggered the event.\n     * @param  {Array}  event.viewPos  View position (i.e., [x, y, width, height])\n     *   of the drawn annotation on the screen.\n     * @param  {Array}  event.dataPos  Data position of the drawn annotation. For\n     *   example base pairs (Hi-C), or pixels (gigapixel images), or lng-lat\n     *   (geo json).\n     */\n    annotationDrawnHandler({ xStartAbs, xEndAbs, data }) {\n      this.drawnAnnotations.set(data.uid, [xStartAbs, xEndAbs]);\n    }\n\n    /**\n     * Remove this track.\n     */\n    remove() {\n      this.pubSubs.forEach(pubSub.unsubscribe);\n      this.pubSubs = undefined;\n      this.annotationTracks.forEach((track) => {\n        track.unsubscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n    }\n\n    tilesDrawnEndHandler({ uuid }) {\n      if (!this.annotationTrackIds.has(uuid)) return;\n\n      this.tracksDrawingTiles.add(uuid);\n\n      if (!(this.tracksDrawingTiles.size % this.annotationTracks.length)) {\n        this.updateOverlays();\n      }\n    }\n\n    updateOverlays() {\n      this.overlaysTrack.options.extent = Array.from(\n        this.drawnAnnotations.values()\n      );\n      this.overlaysTrack.draw();\n      this.tracksDrawingTiles.clear();\n    }\n  }\n\n  return new AnnotationOverlayMetaTrack(...args);\n}\n\ncreateAnnotationOverlayMetaTrack.config = {\n  type: 'annotation-overlay',\n  availableOptions: ['annotationTracks'],\n  defaultOptions: {\n    annotationTracks: [],\n  },\n};\n\nexport default createAnnotationOverlayMetaTrack;\n","import {\n  identity,\n  maxNan,\n  maxVector,\n  meanNan,\n  minNan,\n  sumNan,\n} from '@flekschas/utils';\nimport { line } from 'd3';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_COLOR_MAP_DARK,\n} from './constants';\n\nconst FLOAT_BYTES = Float32Array.BYTES_PER_ELEMENT;\n\nconst VS = `precision mediump float;\n\n  attribute vec2 aPrevPosition;\n  attribute vec2 aCurrPosition;\n  attribute vec2 aNextPosition;\n  attribute float aOffsetSign;\n  attribute float aColorIndex;\n\n  uniform sampler2D uAreaColorTex;\n  uniform float uAreaColorTexRes;\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n\n  uniform vec4 uLineColor;\n  uniform vec4 uNaNColor;\n  uniform float uWidth;\n  uniform int uMiter;\n\n  varying vec4 vColor;\n\n  void main(void)\n  {\n    mat3 model = projectionMatrix * translationMatrix;\n\n    if (aColorIndex <= -0.5) {\n      // Render line\n      vColor = vec4(uLineColor.rgb, 1.0);\n\n      vec4 prevGlPos = vec4((model * vec3(aPrevPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 currGlPos = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 nextGlPos = vec4((model * vec3(aNextPosition, 1.0)).xy, 0.0, 1.0);\n\n      // Calculate the direction\n      vec2 dir = vec2(0.0);\n\n      if (currGlPos == prevGlPos) {\n        // start point uses (next - current)\n        dir = normalize(nextGlPos.xy - currGlPos.xy);\n      }\n      else if (currGlPos == nextGlPos) {\n        // end point uses (current - previous)\n        dir = normalize(currGlPos.xy - prevGlPos.xy);\n      }\n      else {\n        // somewhere in middle, needs a join:\n        // get directions from (C - B) and (B - A)\n        vec2 dirA = normalize((currGlPos.xy - prevGlPos.xy));\n        if (uMiter == 1) {\n          vec2 dirB = normalize((nextGlPos.xy - currGlPos.xy));\n          // now compute the miter join normal and length\n          vec2 tangent = normalize(dirA + dirB);\n          vec2 perp = vec2(-dirA.y, dirA.x);\n          vec2 miter = vec2(-tangent.y, tangent.x);\n          dir = tangent;\n        } else {\n          dir = dirA;\n        }\n      }\n\n      float width = (projectionMatrix * vec3(uWidth, 0.0, 0.0)).x / 2.0;\n\n      vec2 normal = vec2(-dir.y, dir.x) * width;\n      // normal.x /= aspectRatio;\n      vec4 offset = vec4(normal * aOffsetSign, 0.0, 0.0);\n      gl_Position = currGlPos + offset;\n    } else {\n      // Render area\n      float colorRowIndex = aColorIndex / uAreaColorTexRes;\n\n      vec2 colorTexIndex = vec2(\n        (aColorIndex / uAreaColorTexRes) - colorRowIndex,\n        colorRowIndex / uAreaColorTexRes\n      );\n      vColor = texture2D(uAreaColorTex, colorTexIndex);\n\n      gl_Position = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n    }\n  }\n`;\n\nconst FS = `precision mediump float;\n\n  varying vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`;\n\nconst TILE_SIZE = 256;\n\nconst COLORMAP_GRAYS = Array(127)\n  .fill()\n  .map((x, i) => {\n    const gray = (1 - i / 127) * 0.5 + 0.5;\n    return [gray, gray, gray, 1];\n  });\n\nconst getMax = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxValue, tile) => Math.max(maxValue, tile.tileData.maxNonZero),\n    -Infinity\n  );\n\nconst getNumRows = (fetchedTiles) =>\n  Object.values(fetchedTiles)[0].tileData.coarseShape[0];\n\nconst getRowMaxs = (fetchedTiles) =>\n  maxVector(\n    Object.values(fetchedTiles).map((tile) => tile.tileData.maxValueByRow)\n  );\n\nconst scaleGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getNumPointsPerRow = (numRows, positions, markArea) =>\n  positions.length / numRows / 4 / (1 + markArea) - 2;\n\nconst createRidgePlotTrack = function createRidgePlotTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { format } = HGC.libraries.d3Format;\n  const { scaleLinear } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const createColorTexture = (colors) => {\n    const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n    const rgba = new Float32Array(colorTexRes ** 2 * 4);\n    colors.forEach((color, i) => {\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4] = color[0]; // r\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 1] = color[1]; // g\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 2] = color[2]; // b\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 3] = color[3]; // a\n    });\n\n    return [\n      PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes),\n      colorTexRes,\n    ];\n  };\n\n  class RidgePlotTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n      this.updateOptions();\n\n      this.pLoading = new PIXI.Graphics();\n      this.pLoading.position.x = 0;\n      this.pLoading.position.y = 0;\n      this.pMasked.addChild(this.pLoading);\n\n      this.loadIndicator = new PIXI.Text('Loading data...', {\n        fontSize: this.labelSize || 10,\n        fill: 0x808080,\n      });\n      this.pLoading.addChild(this.loadIndicator);\n    }\n\n    initTile(tile) {\n      this.coarsifyTileValues(tile);\n    }\n\n    destroyTile() {}\n\n    binsPerTile() {\n      return this.tilesetInfo.bins_per_dimension || TILE_SIZE;\n    }\n\n    /**\n     * From HeatmapTiledPixiTrack\n     */\n    getTilePosAndDimensions(zoomLevel, tilePos, binsPerTileIn) {\n      const binsPerTile = binsPerTileIn || this.binsPerTile();\n\n      if (this.tilesetInfo.resolutions) {\n        const sortedResolutions = this.tilesetInfo.resolutions\n          .map((x) => +x)\n          .sort((a, b) => b - a);\n\n        const chosenResolution = sortedResolutions[zoomLevel];\n\n        const tileWidth = chosenResolution * binsPerTile;\n        const tileHeight = tileWidth;\n\n        const tileX = chosenResolution * binsPerTile * tilePos[0];\n        const tileY = chosenResolution * binsPerTile * tilePos[1];\n\n        return {\n          tileX,\n          tileY,\n          tileWidth,\n          tileHeight,\n        };\n      }\n\n      const xTilePos = tilePos[0];\n      const yTilePos = tilePos[1];\n\n      const minX = this.tilesetInfo.min_pos[0];\n      const minY = this.options.reverseYAxis\n        ? -this.tilesetInfo.max_pos[1]\n        : this.tilesetInfo.min_pos[1];\n\n      const tileWidth = this.tilesetInfo.max_width / 2 ** zoomLevel;\n      const tileHeight = this.tilesetInfo.max_width / 2 ** zoomLevel;\n\n      const tileX = minX + xTilePos * tileWidth;\n      const tileY = minY + yTilePos * tileHeight;\n\n      return {\n        tileX,\n        tileY,\n        tileWidth,\n        tileHeight,\n      };\n    }\n\n    updateOptions() {\n      this.selectRowsAggregationMode =\n        this.options.selectRowsAggregationMode || 'mean';\n\n      switch (this.selectRowsAggregationMode) {\n        case 'max':\n          this.selectRowsAggregationFn = maxNan;\n          break;\n\n        case 'min':\n          this.selectRowsAggregationFn = minNan;\n          break;\n\n        case 'sum':\n          this.selectRowsAggregationFn = sumNan;\n          break;\n\n        case 'mean':\n        default:\n          this.selectRowsAggregationFn = meanNan;\n          break;\n      }\n\n      this.markArea = !!this.options.markArea;\n\n      this.markAreaColor = 'grays';\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      [this.markColorTex, this.markColorTexRes] = createColorTexture([\n        ...COLORMAP_GRAYS,\n      ]);\n\n      this.markNumColors = COLORMAP_GRAYS.length;\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      // Number of line segments\n      const oldMarkResolution = this.markResolution;\n      this.markResolution = Math.max(\n        1,\n        Math.min(TILE_SIZE, this.options.markResolution || TILE_SIZE / 4)\n      );\n      // Given 100 (rows) x 256 (tile size). At a resolution of 1 we need:\n      // 100 x (256 / 4) x 4 = 25,600 vertices\n\n      const oldRowHeight = this.rowHeight;\n      this.rowHeight = Number.isNaN(+this.options.rowHeight)\n        ? 'auto'\n        : +this.options.rowHeight;\n\n      const oldRowPadding = this.rowPadding;\n      this.rowPadding =\n        this.rowHeight === 'auto' ? 0 : this.options.rowPadding || 0;\n\n      const oldRowNormalization = this.rowNormalization;\n      this.rowNormalization = this.options.rowNormalization || false;\n\n      const oldRowSelections = this.rowSelections;\n      this.rowSelections =\n        this.options.rowSelections || this.rowSelections || [];\n\n      if (\n        oldMarkResolution !== this.markResolution ||\n        oldRowSelections !== this.rowSelections\n      ) {\n        this.updateTiles();\n      }\n\n      if (\n        oldRowHeight !== this.rowHeight ||\n        oldRowPadding !== this.rowPadding ||\n        oldRowNormalization !== this.rowNormalization\n      ) {\n        this.updateScales();\n      }\n\n      const oldShowRowLabels = this.showRowLabels;\n      this.showRowLabels = this.options.showRowLabels;\n\n      if (oldShowRowLabels !== this.showRowLabels) {\n        this.updateRowLabels(oldShowRowLabels);\n        this.drawLabel();\n      }\n\n      this.rowLabelAlign = this.options.rowLabelAlign || 'left';\n      this.rowLabelSize = this.options.rowLabelSize || 12;\n\n      this.rowCategories = this.options.rowCategories || {};\n      this.rowIdToCategory = (id) => id.substring(0, id.length - 14);\n      this.rowIdToCategory = this.options.rowIdToCategory\n        ? (id) =>\n            id[this.options.rowIdToCategory.fn](\n              ...this.options.rowIdToCategory.args\n            )\n        : identity;\n    }\n\n    removeRowLabels() {\n      while (this.pAxis.children.length) {\n        this.pAxis.removeChildAt(0);\n      }\n      if (this.rowLabels) {\n        this.rowLabels.forEach((rowLabel) => {\n          rowLabel.destroy();\n        });\n        this.rowLabels = undefined;\n      }\n    }\n\n    updateRowLabels(oldShowRowLabels) {\n      if (!this.tilesetInfo || !this.tilesetInfo.row_infos) return;\n\n      const labels = this.rowSelections.length\n        ? this.rowSelections.map((rowIndex) =>\n            this.tilesetInfo.row_infos[rowIndex] === undefined\n              ? '?'\n              : this.rowIdToCategory(this.tilesetInfo.row_infos[rowIndex].id)\n          )\n        : this.tilesetInfo.row_infos.map(({ id }) => this.rowIdToCategory(id));\n\n      this.removeRowLabels();\n\n      if (this.showRowLabels === 'indicator') {\n        this.rowLabels = labels.map((label) => {\n          const indicator = new PIXI.Sprite(PIXI.Texture.WHITE);\n          indicator.width = this.rowLabelSize / 2;\n          indicator.height = this.rowLabelSize;\n          indicator.tint = this.rowCategories[label]\n            ? HGC.utils.colorToHex(\n                this.rowCategories[label].axisLabelColor ||\n                  DEFAULT_COLOR_MAP[\n                    this.rowCategories[label].index % DEFAULT_COLOR_MAP.length\n                  ]\n              )\n            : 0x808080;\n          return indicator;\n        });\n      } else if (this.showRowLabels) {\n        this.rowLabels = labels.map(\n          (label) =>\n            new PIXI.Text(label, {\n              fontSize: this.rowLabelSize,\n              align: this.rowLabelAlign === 'right' ? 'right' : 'left',\n              fill: this.rowCategories[label]\n                ? HGC.utils.colorToHex(\n                    this.rowCategories[label].axisLabelColor ||\n                      DEFAULT_COLOR_MAP_DARK[\n                        this.rowCategories[label].index %\n                          DEFAULT_COLOR_MAP_DARK.length\n                      ]\n                  )\n                : 0x808080,\n            })\n        );\n      }\n    }\n\n    drawLabel() {\n      if (!this.showRowLabels) {\n        if (this.rowLabels) {\n          while (this.pAxis.children.length) {\n            this.pAxis.removeChildAt(0);\n          }\n        }\n        return;\n      }\n      if (this.showRowLabels && !this.rowLabels) this.updateRowLabels();\n      if (!this.rowLabels) return;\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const [, rowStepHeight] = this.getRowHeight();\n      const rowStepYCenter = rowStepHeight / 2;\n\n      this.rowLabels.forEach((label, i) => {\n        label.x = xLabelOffset;\n        label.y = yStart - this.rowPadding + rowStepYCenter;\n        label.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        label.anchor.y = 0.5;\n\n        yStart += rowStepHeight;\n\n        this.pAxis.addChild(label);\n      });\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    coarsifyTileValues(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const [numRows] = tile.tileData.shape;\n      const binSizePx = Math.floor(TILE_SIZE / this.markResolution);\n      const binSizeBp = tileWidth / this.markResolution;\n      const binSizeBpHalf = binSizeBp / 2;\n\n      // Determine bin boundaries\n      tile.tileData.binXPos = Array(this.markResolution).fill();\n      for (let i = 0; i <= this.markResolution; i++) {\n        tile.tileData.binXPos[i] = tileX + binSizeBp * i + binSizeBpHalf;\n      }\n\n      // 1. Coarsify the dense matrix according to `this.markResolution`\n      tile.tileData.valuesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      tile.tileData.maxValueByRow = Array(numRows).fill(-Infinity);\n\n      for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < TILE_SIZE; j += binSizePx) {\n          const meanValue = meanNan(\n            tile.tileData.dense.subarray(\n              i * TILE_SIZE + j,\n              i * TILE_SIZE + j + binSizePx\n            )\n          );\n          tile.tileData.valuesByRow[i].push(meanValue);\n          tile.tileData.maxValueByRow[i] =\n            meanValue > tile.tileData.maxValueByRow[i]\n              ? meanValue\n              : tile.tileData.maxValueByRow[i];\n        }\n      }\n\n      // 2. Sort rows\n      if (this.rowSelections.length) {\n        tile.tileData.valuesByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.valuesByRow[rowIdx])\n          .filter(identity);\n        tile.tileData.maxValueByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.maxValueByRow[rowIdx])\n          .filter(identity);\n      }\n\n      // 3. Set out shape\n      tile.tileData.coarseShape = [\n        tile.tileData.valuesByRow.length,\n        this.markResolution,\n      ];\n    }\n\n    updateTiles() {\n      Object.values(this.fetchedTiles).forEach(\n        this.coarsifyTileValues.bind(this)\n      );\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const numRows = getNumRows(fetchedTiles);\n\n      const [rowHeight] = this.getRowHeight();\n\n      const actualTrackHeight = this.getTrackHeight(numRows, rowHeight);\n\n      const globalMax = getMax(this.fetchedTiles);\n\n      this.valueScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([rowHeight, 0]);\n      this.colorIndexScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([0, this.markNumColors])\n        .clamp(true);\n\n      if (this.rowNormalization) {\n        const rowMaxs = getRowMaxs(this.fetchedTiles);\n        this.rowValueScales = {};\n        this.rowColorIndexScales = {};\n        for (let i = 0; i < numRows; i++) {\n          this.rowValueScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([rowHeight, 0]);\n          this.rowColorIndexScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([0, this.markNumColors])\n            .clamp(true);\n        }\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.rowValueScales[row](value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.rowColorIndexScales[row](value);\n      } else {\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.valueScale(value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.colorIndexScale(value);\n      }\n\n      this.rowScale = scaleLinear()\n        .domain([0, numRows])\n        .range([0, actualTrackHeight + this.rowPadding]);\n    }\n\n    tilesToData(tiles, { markArea, maxRows = Infinity, rowHeight } = {}) {\n      if (!tiles.length) return [];\n\n      const numRows = Math.min(maxRows, getNumRows(tiles));\n\n      const positionsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const colorIndicesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const offsetSignsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n\n      tiles.forEach((tile) => {\n        tile.tileData.valuesByRow.forEach((values, i) => {\n          if (i >= maxRows) return;\n          values.forEach((value, j) => {\n            const x = this._xScale(tile.tileData.binXPos[j]);\n            const yStart = this.rowScale(i);\n            const y = yStart + this.valueScaleByRow(value, i);\n            // We're duplicating the point as for every point on the line we\n            // need two x,y vertices to render triangles.\n            positionsByRow[i].push(x, y, x, y);\n            colorIndicesByRow[i].push(-1, -1); // -1 refers to the line color\n            offsetSignsByRow[i].push(1, -1);\n\n            if (markArea) {\n              positionsByRow[i].push(x, y, x, yStart + rowHeight);\n              colorIndicesByRow[i].push(this.colorIndexScaleByRow(value, i), 0);\n              offsetSignsByRow[i].push(0, 0);\n            }\n          });\n        });\n      });\n\n      const size2d = markArea ? 8 : 4;\n      const size1d = markArea ? 4 : 2;\n\n      // For each row, duplicate the first and last point\n      for (let i = 0; i < numRows; i++) {\n        // Add first point pair to the beginning of the array\n        positionsByRow[i].unshift(...positionsByRow[i].slice(0, size2d));\n\n        // The very first duplicated point positions do not matter as\n        // we offset the buffer reading. Subsequent dupliations need to be\n        // taken into account though.\n        if (i > 0) {\n          colorIndicesByRow[i].unshift(\n            ...colorIndicesByRow[i].slice(0, size1d)\n          );\n          offsetSignsByRow[i].unshift(...offsetSignsByRow[i].slice(0, size1d));\n        }\n\n        // Add last point pair to the end of the array\n        positionsByRow[i].push(...positionsByRow[i].slice(-size2d));\n        colorIndicesByRow[i].push(...colorIndicesByRow[i].slice(-size1d));\n        offsetSignsByRow[i].push(...offsetSignsByRow[i].slice(-size1d));\n      }\n\n      return [\n        new Float32Array(positionsByRow.flatMap(identity)),\n        new Float32Array(colorIndicesByRow.flatMap(identity)),\n        new Float32Array(offsetSignsByRow.flatMap(identity)),\n      ];\n    }\n\n    toLineIndices(numRows, numPointsPerRow, markArea) {\n      const verticesPerLine = markArea ? 12 : 6;\n      const verticesPerPoint = markArea ? 4 : 2;\n      const indices = new Uint32Array(\n        (numPointsPerRow - 1) * numRows * verticesPerLine\n      );\n      let k = 0;\n\n      if (markArea) {\n        // Draw a line and area\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p1c = p1a + 2;\n            const p1d = p1a + 3;\n            const p2a = p1a + 4;\n            const p2b = p1a + 5;\n            const p2c = p1a + 6;\n            const p2d = p1a + 7;\n\n            const indexOffset = k * verticesPerLine;\n            // Area\n            indices[indexOffset] = p1c;\n            indices[indexOffset + 1] = p1d;\n            indices[indexOffset + 2] = p2c;\n            indices[indexOffset + 3] = p2c;\n            indices[indexOffset + 4] = p1d;\n            indices[indexOffset + 5] = p2d;\n            // Line\n            indices[indexOffset + 6] = p1a;\n            indices[indexOffset + 7] = p1b;\n            indices[indexOffset + 8] = p2a;\n            indices[indexOffset + 9] = p2a;\n            indices[indexOffset + 10] = p1b;\n            indices[indexOffset + 11] = p2b;\n\n            k++;\n          }\n        }\n      } else {\n        // Just draw a line\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p2a = p1a + 2;\n            const p2b = p1a + 3;\n\n            const indexOffset = k * verticesPerLine;\n            indices[indexOffset] = p1a;\n            indices[indexOffset + 1] = p1b;\n            indices[indexOffset + 2] = p2a;\n            indices[indexOffset + 3] = p2a;\n            indices[indexOffset + 4] = p1b;\n            indices[indexOffset + 5] = p2b;\n\n            k++;\n          }\n        }\n      }\n\n      return indices;\n    }\n\n    getRowHeight(numRows) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? [\n            Math.floor(visibleTrackHeight / numRows),\n            Math.floor(visibleTrackHeight / numRows),\n          ]\n        : [this.rowHeight, this.rowHeight + this.rowPadding];\n    }\n\n    getTrackHeight(numRows, rowHeight) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? visibleTrackHeight\n        : rowHeight * numRows + this.rowPadding * (numRows - 1);\n    }\n\n    renderLines() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n\n      const [positions, colorIndices, offsetSigns] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const numPointsPerRow = getNumPointsPerRow(\n        numRows,\n        positions,\n        this.markArea\n      );\n\n      const indices = this.toLineIndices(\n        numRows,\n        numPointsPerRow,\n        this.markArea\n      );\n\n      const uniforms = new PIXI.UniformGroup({\n        uLineColor: [...this.markColorRgbNorm, 1.0],\n        uNaNColor: [1.0, 1.0, 1.0, 1.0],\n        uAreaColorTex: this.markColorTex,\n        uAreaColorTexRes: this.markColorTexRes,\n        uWidth: 0.25,\n        uMiter: 1,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      const numCoords = 2;\n      const numVerticesPoint = this.markArea ? 4 : 2;\n      geometry.addAttribute(\n        'aPrevPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        0 // offset/start\n      );\n      geometry.addAttribute(\n        'aCurrPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        // note that each point is duplicated, hence we need to skip over the first two\n        FLOAT_BYTES * numCoords * numVerticesPoint // offset/start\n      );\n      geometry.addAttribute(\n        'aNextPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * 2, // stride\n        // note that each point is duplicated, hence we need to skip over the first four\n        FLOAT_BYTES * numCoords * numVerticesPoint * 2 // offset/start\n      );\n      geometry.addAttribute('aOffsetSign', offsetSigns, 1);\n      geometry.addAttribute('aColorIndex', colorIndices, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.lineGraphics) {\n        this.pMain.removeChild(this.lineGraphics);\n        this.lineGraphics.destroy();\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.lineGraphics = newGraphics;\n\n      scaleGraphics(this.lineGraphics, this._xScale, this.drawnAtScale);\n\n      this.draw();\n      this.animate();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateLoadIndicator();\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.renderLines();\n    }\n\n    updateLoadIndicator() {\n      const [left, top] = this.position;\n      this.pLoading.position.x = left + 6;\n      this.pLoading.position.y = top + 6;\n\n      if (this.fetching.size) {\n        this.pLoading.addChild(this.loadIndicator);\n      } else {\n        this.pLoading.removeChild(this.loadIndicator);\n      }\n    }\n\n    refreshTiles() {\n      super.refreshTiles();\n      this.updateLoadIndicator();\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.lineGraphics) {\n        scaleGraphics(this.lineGraphics, newXScale, this.drawnAtScale);\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Return the data currently visible at position X and Y\n     *\n     * @param {Number} trackX: The x position relative to the track's start and end\n     * @param {Number} trakcY: The y position relative to the track's start and end\n     */\n    getVisibleData(trackX, trackY) {\n      if (!this.hasFetchedTiles()) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n\n      const numRows = getNumRows(this.fetchedTiles);\n      const [, rowStepHeight] = this.getRowHeight(numRows);\n\n      // the width of the tile in base pairs\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tilePos = this._xScale.invert(trackX) / tileWidth;\n\n      // the position of query within the tile\n      let posInTileX =\n        this.tilesetInfo.tile_size * (tilePos - Math.floor(tilePos));\n      // const posInTileYNormalized = trackY / this.dimensions[1];\n      // The first track doesn't apply padding so we have to shift padding\n      // to the mouse position once\n      const rowIndex = Math.floor(\n        Math.max(0, (trackY + this.rowPadding) / rowStepHeight)\n      );\n      const rowSelection = this.rowSelections[rowIndex];\n      const tileId = this.tileToLocalId([zoomLevel, Math.floor(tilePos)]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      let text = '';\n      let value = '<em>unknown</em>';\n\n      if (fetchedTile) {\n        if (!this.tilesetInfo.shape) {\n          posInTileX =\n            fetchedTile.tileData.dense.length * (tilePos - Math.floor(tilePos));\n        }\n\n        let index = null;\n        if (this.tilesetInfo.shape) {\n          // Accomodate data from vector sources\n          if (\n            Array.isArray(rowSelection) &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            // Need to aggregate, so `index` will actually be an array.\n            index = rowSelection.map(\n              (rowI) =>\n                this.tilesetInfo.shape[0] * rowI + Math.floor(posInTileX)\n            );\n          } else if (\n            rowSelection &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            index =\n              this.tilesetInfo.shape[0] * rowSelection + Math.floor(posInTileX);\n          } else {\n            // No need to aggregate, `index` will contain a single item.\n            index =\n              this.tilesetInfo.shape[0] * rowIndex + Math.floor(posInTileX);\n          }\n        } else {\n          index =\n            fetchedTile.tileData.dense.length * rowIndex +\n            Math.floor(posInTileX);\n        }\n\n        if (Array.isArray(index)) {\n          const values = index.map((i) => fetchedTile.tileData.dense[i]);\n          value = format('.3f')(this.selectRowsAggregationFn(values));\n          text = value;\n\n          text += '<br/>';\n          text += `${index.length}-item ${this.options.selectRowsAggregationMode}`;\n        } else {\n          value = format('.3f')(fetchedTile.tileData.dense[index]);\n          text = value;\n\n          if (Array.isArray(rowSelection)) {\n            value += '<br/>';\n            value += `${rowSelection.length}-item ${this.options.selectRowsAggregationMode}`;\n          }\n        }\n      }\n\n      // add information about the row\n      if (this.tilesetInfo.row_infos) {\n        let rowInfo = '';\n\n        if (rowSelection !== undefined) {\n          rowInfo = this.tilesetInfo.row_infos[rowSelection];\n        } else if (rowIndex) {\n          rowInfo = this.tilesetInfo.row_infos[rowIndex];\n        }\n\n        const label =\n          typeof rowInfo === 'object'\n            ? this.rowIdToCategory(rowInfo.id)\n            : rowInfo;\n\n        const color = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_DARK[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_DARK.length\n            ]\n          : '#666666';\n\n        const background = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_LIGHT[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_LIGHT.length\n            ]\n          : '#ffffff';\n\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${background}\"><strong style=\"color: ${color};\">${label}:</strong> ${value}</div>`;\n      }\n\n      return text;\n    }\n\n    /**\n     * Get some information to display when the mouse is over this\n     * track\n     *\n     * @param {Number} trackX: the x position of the mouse over the track\n     * @param {Number} trackY: the y position of the mouse over the track\n     *\n     * @return {string}: A HTML string containing the information to display\n     *\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      return this.getVisibleData(trackX, trackY);\n    }\n\n    exportSVG() {\n      const svgns = 'http://www.w3.org/2000/svg';\n\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'ridge-plot-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]}, ${this.position[1]})`\n      );\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n      const stride = this.markArea ? 8 : 4;\n\n      const [positions] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const createLine = line()\n        .x((d) => d[0])\n        .y((d) => d[1]);\n\n      const posPerRow = positions.length / numRows;\n\n      const posToPoints = (pos) => {\n        const arr = [];\n        const start = stride;\n        const end = pos.length - stride;\n\n        for (let i = start; i < end; i += stride) {\n          arr.push([pos[i], pos[i + 1]]);\n        }\n\n        return arr;\n      };\n\n      let fill = this.markArea\n        ? (this.options.colorRange && this.options.colorRange[0]) || '#ffffff'\n        : 'none';\n      if (this.markArea && this.options.colorRange) {\n        const numColors = this.options.colorRange.length;\n        const defs = document.createElementNS(svgns, 'defs');\n        const linearGradient = document.createElementNS(\n          svgns,\n          'linearGradient'\n        );\n        linearGradient.setAttribute('id', 'RidgePlotGradient');\n        linearGradient.setAttribute('x1', '0');\n        linearGradient.setAttribute('y1', '1');\n        linearGradient.setAttribute('x2', '0');\n        linearGradient.setAttribute('y2', '0');\n        this.options.colorRange.forEach((color, i) => {\n          const stop = document.createElementNS(svgns, 'stop');\n          stop.setAttribute(\n            'offset',\n            `${Math.round((i / (numColors - 1)) * 100)}%`\n          );\n          stop.setAttribute('stop-color', color);\n          linearGradient.appendChild(stop);\n        });\n        defs.appendChild(linearGradient);\n        base.insertBefore(defs, base.firstChild);\n        fill = 'url(#RidgePlotGradient)';\n      }\n\n      for (let i = 0; i < numRows; i++) {\n        const arr = posToPoints(\n          positions.subarray(i * posPerRow, (i + 1) * posPerRow)\n        );\n\n        const l = document.createElement('path');\n        let d = createLine(arr);\n\n        const y0 = this.rowScale(i) + this.valueScaleByRow(0, i);\n\n        // We extend the line a little to the left and right and anchor them at\n        // y = 0 to avoid weird glitches with the fill.\n        const firstComma = d.indexOf(',');\n        const firstX = +d.substring(1, firstComma);\n        const firstY = +d.substring(firstComma + 1, d.indexOf('L'));\n        d = `M${firstX - 1},${y0}L${firstX - 1},${firstY}L${d.substring(1)}`;\n        const lastComma = d.lastIndexOf(',');\n        const lastX = +d.substring(d.lastIndexOf('L') + 1, lastComma);\n        const lastY = +d.substring(lastComma + 1);\n        d += `L${lastX + 1},${lastY}L${lastX + 1},${y0}`;\n\n        l.setAttribute('d', d);\n        l.setAttribute('fill', fill);\n        l.setAttribute('stroke', this.options.markColor || 'black');\n        l.setAttribute('stroke-width', (this.options.markSize || 2) / 8);\n\n        output.appendChild(l);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new RidgePlotTrack(...args);\n};\n\ncreateRidgePlotTrack.config = {\n  type: 'ridge-plot',\n  datatype: ['multivec'],\n  orientation: '1d',\n  name: 'RidgePlot',\n};\n\nexport default createRidgePlotTrack;\n","import createIntervalTree from 'interval-tree-1d';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n  EPS,\n} from './constants';\nimport { contains, dashedXLineTo, toFixed } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aHighlight;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main(void)\n  {\n    vHighlight = aHighlight;\n    vOpacity = aOpacity;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n\n  uniform vec4 uColor;\n  uniform vec4 uColorHighlight;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main() {\n    float isNotFocused = 1.0 - vHighlight;\n\n    float r = uColor.r * isNotFocused + uColorHighlight.r * vHighlight;\n    float g = uColor.g * isNotFocused + uColorHighlight.g * vHighlight;\n    float b = uColor.b * isNotFocused + uColorHighlight.b * vHighlight;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [pt.opacity, pt.opacity, pt.opacity, pt.opacity];\n\nconst pointToHighlight = (pt) => [\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n];\n\nconst getItemDistance = (item) =>\n  Math.abs(\n    +item.fields[1] +\n      (+item.fields[2] - +item.fields[1]) / 2 -\n      (+item.fields[4] + (+item.fields[4] - +item.fields[5]) / 2)\n  );\n\nconst getMaxDistance = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxDist, tile) =>\n      Math.max(\n        maxDist,\n        tile.tileData.reduce(\n          (maxDistItem, item) => Math.max(maxDistItem, item.distance),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getRegionId = (item) =>\n  `${item.fields[0]}:${item.fields[1]}-${item.fields[2]}`;\n\nconst createStratifiedBedTrack = function createStratifiedBedTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { MAX_CLICK_DELAY } = HGC.configs;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class StratifiedBedTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.pLegend = new PIXI.Graphics();\n      this.pMasked.addChild(this.pLegend);\n\n      this.legendMin = Infinity;\n      this.legendMax = -Infinity;\n\n      // Needed for interaction tracking because interaction tracking on the\n      // mesh causes errors...\n      this.bg = new PIXI.Sprite(PIXI.Texture.WHITE);\n      [this.bg.width, this.bg.height] = this.dimensions;\n      this.bg.interactive = true;\n      this.bg.interactiveChildren = false;\n      this.bg.alpha = 0;\n\n      let mousedownTime = performance.now();\n      this.bg.mousedown = () => {\n        mousedownTime = performance.now();\n      };\n      this.bg.mouseup = (e) => {\n        if (performance.now() - mousedownTime < MAX_CLICK_DELAY)\n          this.clickHandler(e);\n      };\n\n      this.updateOptions();\n\n      this.pLoading = new PIXI.Graphics();\n      this.pLoading.position.x = 0;\n      this.pLoading.position.y = 0;\n      this.pMasked.addChild(this.pLoading);\n\n      this.loadIndicator = new PIXI.Text('Loading data...', {\n        fontSize: this.labelSize || 10,\n        fill: 0x808080,\n      });\n      this.pLoading.addChild(this.loadIndicator);\n    }\n\n    initTile(tile) {\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.distance = getItemDistance(item) || -1;\n        item.cX = item.xStart + (item.xEnd - item.xStart) / 2;\n        item.regionId = getRegionId(item);\n        item.isLeftToRight = item.xStart < item.xEnd;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorHighlight = HGC.utils.colorToHex(\n        this.options.markColorHighlight || 'red'\n      );\n\n      this.markColorHighlightRgbNorm = this.options.markColorHighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorHighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markColorDehighlight = HGC.utils.colorToHex(\n        this.options.markColorDehighlight || '#999999'\n      );\n\n      this.markColorDehighlightRgbNorm = this.options.markColorDehighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorDehighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0.6, 0.6, 0.6];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.distance;\n\n      this.opacityEncoding = this.options.opacityEncoding || 'solid';\n\n      switch (this.opacityEncoding) {\n        case 'frequency':\n          this.opacityScale = () => 0.1;\n          break;\n\n        case 'highestImportance':\n        case 'closestImportance': {\n          const importanceDomain = this.options.importanceDomain || [1, 1000];\n          const opacityLinearScale = scaleLinear()\n            .domain(importanceDomain)\n            .range([1, 10]);\n          this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n          break;\n        }\n\n        case 'solid':\n        default:\n          this.opacityScale = () => 1;\n          break;\n      }\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.getRegion = this.options.focusRegion\n        ? (item) => [item.xStart, item.xEnd]\n        : undefined;\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.focusStyle = this.options.focusStyle\n        ? this.options.focusStyle.toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxDist = getMaxDistance(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxDist])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item, isHighlighting) {\n      return {\n        cX: this._xScale(item.cX),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        highlight: isHighlighting && item.__focus,\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n        __item: item,\n      };\n    }\n\n    isItemInFocus() {\n      if (\n        this.getGene &&\n        this.focusGene &&\n        this.getRegion &&\n        this.focusRegion\n      ) {\n        return (item) => {\n          item.__focus =\n            this.getGene(item) === this.focusGene &&\n            contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      if (this.getGene && this.focusGene) {\n        return (item) => {\n          item.__focus = this.getGene(item) === this.focusGene;\n          return item.__focus;\n        };\n      }\n\n      if (this.getRegion && this.focusRegion) {\n        return (item) => {\n          item.__focus = contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      return (item) => {\n        item.__focus = false;\n        // If no focus was defined, we include all intervals\n        return true;\n      };\n    }\n\n    itemToIndicatorReducer(filterFn, addFn) {\n      if (this.focusStyle === 'highlighting') {\n        return (filteredItems, item) => {\n          filterFn(item);\n          addFn(filteredItems, item);\n          return filteredItems;\n        };\n      }\n\n      return (filteredItems, item) => {\n        if (filterFn(item)) addFn(filteredItems, item);\n        return filteredItems;\n      };\n    }\n\n    getPoints(isHighlighting) {\n      let reducerVar = [];\n      let addFn = (accumulator, item) =>\n        accumulator.push(this.itemToIndicatorCategory(item, isHighlighting));\n\n      if (this.opacityEncoding === 'highestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (accumulator[item.regionId]) {\n            const i1 = this.getImportance(accumulator[item.regionId].__item);\n            const i2 = this.getImportance(item);\n            if (i2 > i1) {\n              accumulator[item.regionId] = this.itemToIndicatorCategory(\n                item,\n                isHighlighting\n              );\n            }\n          } else {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      } else if (this.opacityEncoding === 'closestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (\n            !accumulator[item.regionId] ||\n            item.distance < accumulator[item.regionId].__item.distance\n          ) {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      }\n\n      const filterFn = this.isItemInFocus();\n      const dataToPoint = this.itemToIndicatorReducer(filterFn, addFn);\n\n      return Object.values(this.fetchedTiles).flatMap((tile) =>\n        Object.values(tile.tileData.reduce(dataToPoint, reducerVar))\n      );\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const highlights = new Float32Array(points.flatMap(pointToHighlight));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: isHighlighting\n          ? [...this.markColorDehighlightRgbNorm, this.markOpacity]\n          : [...this.markColorRgbNorm, this.markOpacity],\n        uColorHighlight: [...this.markColorHighlightRgbNorm, this.markOpacity],\n        uHighlighting: isHighlighting,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aHighlight', highlights, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(this.bg);\n      newGraphics.addChild(mesh);\n\n      [this.bg.width, this.bg.height] = this.dimensions;\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.indicatorPointGraphics.removeChild(this.bg);\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (this.options.focusStyle === 'highlighting') {\n          this.pAxis.beginFill(0xffffff, 0.66);\n        } else {\n          this.pAxis.beginFill(this.groupToColor.get(i)[1], 0.66);\n        }\n\n        this.pAxis.lineStyle(0);\n        if (this.axisAlign === 'right') {\n          this.pAxis.drawRect(\n            labelPixiText.x - labelPixiText.width,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        } else {\n          this.pAxis.drawRect(\n            labelPixiText.x,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        }\n        this.pAxis.endFill();\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    renderIndicatorLegend() {\n      this.pLegend.clear();\n\n      if (this.opacityEncoding.indexOf('Importance') === -1) {\n        if (this.legendMinText) {\n          this.pLegend.removeChild(this.legendMinText);\n          this.legendMinText.destroy();\n          this.legendMinText = undefined;\n        }\n        if (this.legendMaxText) {\n          this.pLegend.removeChild(this.legendMaxText);\n          this.legendMaxText.destroy();\n          this.legendMaxText = undefined;\n        }\n        return;\n      }\n\n      const padding = 6;\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n      const [, y] = this.categoryHeightScale.range();\n      const isRightAligned = this.options.legendAlign === 'right';\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      this.pLegend.position.x = isRightAligned ? left + width : left;\n\n      const [minValue, maxValue] = this.options.importanceDomain || [1, 1000];\n\n      if (Math.abs(minValue - this.legendMin) > EPS) {\n        if (this.legendMinText) {\n          this.pLegend.removeChild(this.legendMinText);\n          this.legendMinText.destroy();\n        }\n        this.legendMinText = new PIXI.Text(toFixed(minValue, 3), {\n          fontSize: this.labelSize,\n          align: isRightAligned ? 'right' : 'left',\n          fill: 0x808080,\n        });\n        this.legendMinText.x = 0;\n        this.legendMinText.y = padding / 2;\n        this.legendMinText.anchor.x = isRightAligned ? 1 : 0;\n        this.pLegend.addChild(this.legendMinText);\n      }\n\n      if (Math.abs(maxValue - this.legendMax) > EPS) {\n        if (this.legendMaxText) {\n          this.pLegend.removeChild(this.legendMaxText);\n          this.legendMaxText.destroy();\n        }\n        this.legendMaxText = new PIXI.Text(toFixed(maxValue, 3), {\n          fontSize: this.labelSize,\n          align: isRightAligned ? 'right' : 'left',\n          fill: 0x808080,\n        });\n        this.legendMaxText.x = 0;\n        this.legendMaxText.y = padding / 2;\n        this.legendMaxText.anchor.x = isRightAligned ? 1 : 0;\n        this.pLegend.addChild(this.legendMaxText);\n      }\n\n      const legendRectWidth = 42;\n      const minTextWidth = this.legendMinText.getBounds().width;\n      const maxTextWidth = this.legendMaxText.getBounds().width;\n      const offset = isRightAligned\n        ? -(maxTextWidth + legendRectWidth + padding)\n        : minTextWidth + 2 * padding;\n\n      const rectHeight = 18 + (isHighlighting * padding) / 2;\n\n      this.pLegend.beginFill(0xffffff);\n      this.pLegend.lineStyle(1, 0xcccccc);\n      if (isRightAligned) {\n        this.legendMinText.x = offset - padding;\n        this.pLegend.drawRoundedRect(\n          -(legendRectWidth + minTextWidth + maxTextWidth + 3 * padding + 0.5),\n          0,\n          legendRectWidth + minTextWidth + maxTextWidth + 3 * padding,\n          rectHeight,\n          3\n        );\n      } else {\n        this.legendMaxText.x = offset + legendRectWidth + 2 * padding;\n        this.pLegend.drawRoundedRect(\n          0.5,\n          0,\n          legendRectWidth + minTextWidth + maxTextWidth + 3 * padding,\n          18 + (isHighlighting * padding) / 2,\n          3\n        );\n      }\n      this.pLegend.endFill();\n      this.pLegend.lineStyle(0);\n\n      for (let i = 0; i < 5; i++) {\n        const opacity = this.opacityScale(minValue + (i / 4) * maxValue);\n\n        this.pLegend.beginFill(this.markColor, opacity);\n        this.pLegend.drawRect(\n          i * 9 + offset,\n          padding / 2 + !isHighlighting * 3,\n          6,\n          6\n        );\n        this.pLegend.endFill();\n\n        if (isHighlighting) {\n          this.pLegend.beginFill(this.markColorHighlight, opacity);\n          this.pLegend.drawRect(i * 9 + offset, padding / 2 + 9, 6, 6);\n          this.pLegend.endFill();\n        }\n      }\n\n      if (isRightAligned) {\n        this.legendMinText.x = offset - padding;\n        this.legendMaxText.x = -padding / 2;\n      } else {\n        this.legendMinText.x = padding / 2;\n        this.legendMaxText.x = offset + legendRectWidth + padding;\n      }\n\n      this.pLegend.position.y = top + y - padding - rectHeight;\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis();\n      this.renderIndicatorLegend();\n      this.renderIndicatorPoints();\n    }\n\n    updateLoadIndicator() {\n      const [left, top] = this.position;\n      this.pLoading.position.x = left + 6;\n      this.pLoading.position.y = top + 6;\n\n      if (this.fetching.size) {\n        this.pLoading.addChild(this.loadIndicator);\n      } else {\n        this.pLoading.removeChild(this.loadIndicator);\n      }\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateLoadIndicator();\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile) {\n      tile.graphics.clear();\n\n      this.updateLoadIndicator();\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    getElementAtPosition(relX, relY) {\n      if (!this.tilesetInfo) return undefined;\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(relX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return undefined;\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(relY))\n      );\n\n      const xAbsLo = this._xScale.invert(relX - 1);\n      const xAbsHi = this._xScale.invert(relX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      return {\n        item: foundItem,\n        category,\n        tileId,\n      };\n    }\n\n    getMouseOverHtml(relX, relY) {\n      const element = this.getElementAtPosition(relX, relY);\n\n      if (!element) return '';\n\n      const { item, category } = element;\n\n      if (item) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(item).toFixed(2);\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    clickHandler(event) {\n      const [offsetX, offsetY] = this.position;\n      const relX = event.data.global.x - offsetX;\n      const relY = event.data.global.y - offsetY;\n\n      const element = this.getElementAtPosition(relX, relY);\n\n      if (element) {\n        this.pubSub.publish('app.click', {\n          type: 'annotation',\n          event,\n          payload: element,\n        });\n      }\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    refreshTiles() {\n      super.refreshTiles();\n      this.updateLoadIndicator();\n    }\n\n    renderIndicatorCategoryAxisAsSvg() {\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.pAxis.position.x}, ${this.pAxis.position.y})`\n      );\n\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n\n      const createRect = (x, y, w, h, f, o) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', x);\n        r.setAttribute('y', y);\n        r.setAttribute('width', w);\n        r.setAttribute('height', h);\n        r.setAttribute('fill', f);\n        r.setAttribute('fill-opacity', o);\n        r.setAttribute('stroke-width', 0);\n\n        return r;\n      };\n\n      const createText = (pixiText) => {\n        const t = document.createElement('text');\n\n        t.setAttribute('x', pixiText.x);\n        t.setAttribute('y', pixiText.y + pixiText.height / (4 / 1));\n        t.setAttribute('fill', pixiText._style._fill);\n        t.setAttribute(\n          'text-anchor',\n          pixiText._style._align === 'right' ? 'end' : 'start'\n        );\n        t.setAttribute('style', `font: ${pixiText._font};`);\n\n        t.textContent = pixiText.text;\n\n        return t;\n      };\n\n      const createLine = ({\n        stroke = '#000000',\n        strokeWidth = 1,\n        strokeDasharray = null,\n      } = {}) => (x1, y1, x2, y2) => {\n        const l = document.createElement('line');\n\n        l.setAttribute('x1', x1);\n        l.setAttribute('y1', y1);\n        l.setAttribute('x2', x2);\n        l.setAttribute('y2', y2);\n        l.setAttribute('stroke', stroke);\n        l.setAttribute('stroke-width', strokeWidth);\n\n        if (strokeDasharray)\n          l.setAttribute('stroke-dasharray', strokeDasharray);\n\n        return l;\n      };\n\n      const createDashedLine = createLine({ strokeDasharray: '5' });\n\n      const isHighlighting = this.options.focusStyle === 'highlighting';\n      const backgroundOpacity = 0.66;\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n\n        // Background color\n        const backgroundColor = isHighlighting\n          ? '#ffffff'\n          : `#${this.groupToColor.get(i)[1].toString(16)}`;\n\n        if (this.axisAlign === 'right') {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x - labelPixiText.width,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        } else {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        }\n\n        gAxis.appendChild(createText(labelPixiText));\n\n        gAxis.appendChild(createLine()(0, yStart, xTickOffset, yStart));\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          gAxis.appendChild(createDashedLine(0, yStart, xTickEnd, yStart));\n        }\n\n        yStart = yEnd;\n      });\n\n      gAxis.appendChild(createLine()(0, 0, 0, yEnd));\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        gAxis.appendChild(createDashedLine(0, yEnd, xTickEnd, yEnd));\n      }\n\n      return gAxis;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stratified-bed-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n      const color = isHighlighting\n        ? this.options.markColorDehighlight || '#999999'\n        : this.options.markColor || 'black';\n      const colorHighlight = this.options.markColorHighlight || 'red';\n\n      points.forEach(({ cX, y, widthHalf, opacity, highlight, height }, i) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', cX - widthHalf);\n        r.setAttribute('y', y);\n        r.setAttribute('width', widthHalf * 2);\n        r.setAttribute('height', height);\n        r.setAttribute('fill', highlight ? colorHighlight : color);\n        r.setAttribute('fill-opacity', opacity);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      base.appendChild(this.renderIndicatorCategoryAxisAsSvg());\n\n      return [base, track];\n    }\n  }\n\n  return new StratifiedBedTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStratifiedBedTrack.config = {\n  type: 'stratified-bed',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStratifiedBedTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n\n      return [circleDraws, circleFocusDraws];\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo || !this.options.toolTip || !this.valueScale)\n        return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'exported-snp-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles()\n        .filter((tile) => tile.plusStrandRows)\n        .forEach((tile) => {\n          // call drawTile with storePolyStr = true so that\n          // we record path strings to use in the SVG\n          const [circles, focusedCircles] = this.renderRows(\n            tile,\n            tile.plusStrandRows,\n            tile.plusStrandRows.length,\n            0,\n            this.dimensions[1],\n            'blue'\n          );\n\n          circles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColor || 'black');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacity || 0.33);\n            c.setAttribute('r', this.options.markSize);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n\n          focusedCircles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColorFocus || 'red');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacityFocus || 0.66);\n            c.setAttribute('r', this.options.markSize + 1);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n        });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n} from './constants';\nimport { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n\n      this.pLoading = new PIXI.Graphics();\n      this.pLoading.position.x = 0;\n      this.pLoading.position.y = 0;\n      this.pMasked.addChild(this.pLoading);\n\n      this.loadIndicator = new PIXI.Text('Loading data...', {\n        fontSize: this.labelSize || 10,\n        fill: 0x808080,\n      });\n      this.pLoading.addChild(this.loadIndicator);\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n      tile.histogram2dNumPred = new Uint8Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      const categoryBinHash = new Map();\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const category = this.getCategory(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          const binHash = categoryBinHash.get(category) || {};\n\n          // Make sure we count multiple enhancer predictions of the same biosample and bin only once (i.e., summing up)\n          if (!binHash[bin]) {\n            binHash[bin] = binHash[bin] || score > 0;\n            tile.histogram2dNumPred[histIdx] += binHash[bin];\n            categoryBinHash.set(category, binHash);\n          }\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    updateLoadIndicator() {\n      const [left, top] = this.position;\n      this.pLoading.position.x = left + 6;\n      this.pLoading.position.y = top + 6;\n\n      if (this.fetching.size) {\n        this.pLoading.addChild(this.loadIndicator);\n      } else {\n        this.pLoading.removeChild(this.loadIndicator);\n      }\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      this.updateLoadIndicator();\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateLoadIndicator();\n      if (!this.hasFetchedTiles()) return;\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const rowCumSum = [];\n      const rowNumPred = [];\n      let totalPred = 0;\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        const numPred =\n          fetchedTile.histogram2dNumPred[i * this.numBins + binXPos];\n        rowNumPred.push(numPred);\n        totalPred += numPred;\n        rowCumSum.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = rowCumSum.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value =\n          fetchedTile.histogram2dNumPred[group * this.numBins + binXPos];\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value} of ${totalPred} samples</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stacked-bar-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      segments.forEach(({ xStart, xEnd, yStart, yEnd, colorIdx }) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', xEnd);\n        r.setAttribute('y', yEnd);\n        r.setAttribute('width', Math.abs(xEnd - xStart));\n        r.setAttribute('height', Math.abs(yEnd - yStart));\n        r.setAttribute('fill', this.colorMap[colorIdx]);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Advanced Stacked Bars Track',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import createPubSub from 'pub-sub-es';\n\nfunction createTssTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  class TssTrack extends HGC.tracks.BedLikeTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      const { publish, subscribe, unsubscribe } = createPubSub();\n      this.publish = publish;\n      this.subscribe = subscribe;\n      this.unsubscribe = unsubscribe;\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = 1;\n      const radius = 2;\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = {\n              xStartScreen: xStartPos,\n              xEndScreen: xEndPos,\n              xStartAbs: txStart,\n              xEndAbs: txEnd,\n              data: td,\n            };\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        circleDraws.forEach((circleDraw) => {\n          this.publish('annotationDrawn', circleDraw);\n        });\n      }\n    }\n\n    rerender() {\n      // Monkey patch because TiledPixiTrack doesn't always fire correctly\n      this.draw();\n      this.publish('tilesDrawn', { uuid: this.uuid });\n    }\n\n    updateExistingGraphics() {\n      super.updateExistingGraphics();\n      this.publish('tilesDrawn', { uuid: this.uuid });\n    }\n\n    getMouseOverHtml() {\n      return '';\n    }\n  }\n\n  return new TssTrack(...args);\n}\n\ncreateTssTrack.config = {\n  type: 'tss',\n  datatype: ['bedlike'],\n};\n\nexport default createTssTrack;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAnnotationOverlayMetaTrack from './annotation-overlay-meta-track';\nimport createRidgePlotTrack from './ridge-plot-track';\nimport createStratifiedBedTrack from './stratified-bed-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\nimport createTssTrack from './tss-track';\n\nimport './index.css';\n\nregister({\n  track: createRidgePlotTrack,\n  config: createRidgePlotTrack.config,\n});\n\nregister({\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  track: createStratifiedBedTrack,\n  config: createStratifiedBedTrack.config,\n});\n\nregister({\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nregister({\n  track: createTssTrack,\n  config: createTssTrack.config,\n});\n\nregister({\n  track: createAnnotationOverlayMetaTrack,\n  config: createAnnotationOverlayMetaTrack.config,\n  isMetaTrack: true,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}