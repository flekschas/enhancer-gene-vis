{"version":3,"sources":["AppInitializing.js","AppError.js","SearchField.js","use-debounce.js","utils.js","use-query-string.js","constants.js","Viewer.js","with-either.js","App.js","serviceWorker.js","annotation-overlay-meta-track.js","stratified-bed-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","tss-track.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","backgroundColor","AppInitializing","classes","className","Backdrop","open","CircularProgress","SearchField","props","useState","setOpen","options","setOptions","inputValue","searchQuery","setSearchQuery","debouncedSearchQuery","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","loading","length","active","a","fetch","searchUrl","response","json","geneList","Autocomplete","onChange","event","newValue","onInputChange","newInputValue","fullWidth","style","width","onOpen","onClose","getOptionSelected","option","_value","geneName","getOptionLabel","renderInput","params","TextField","id","label","variant","size","InputProps","endAdornment","Fragment","defaultProps","identity","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","rgba","Float32Array","forEach","i","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","y","dashSize","diff","direction","sign","abs","stepSize","numSteps","moveTo","lineTo","getQueryStringValue","key","decoder","queryString","parse","window","location","search","setQueryStringValue","encoder","values","newQsValue","stringify","strict","url","origin","pathname","history","pushState","path","toAbsPosition","position","chromInfo","absPosition","indexOf","split","chrom","pos","chrPositions","useQueryString","initialValue","setValue","onSetValue","useCallback","GENE_SEARCH_URL","VARIANT_SEARCH_URL","DEFAULT_STRATIFICATION","categoryField","axisShowGroupSeparator","groups","categories","DEFAULT_VIEW_CONFIG","editable","trackSourceServers","views","uid","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","visible","chromInfoPath","tracks","top","type","height","contents","stroke","fontSize","fontIsLeftAligned","showMousePosition","mousePositionColor","tilesetUid","server","fromViewUid","projectionFillColor","projectionStrokeColor","projectionFillOpacity","projectionStrokeOpacity","strokeWidth","plusStrandColor","minusStrandColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","focusRegion","name","toolTip","field","numDecimals","other","binSize","axisAlign","labelPosition","arcStyle","indicatorStyle","labelColor","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","markMinWidth","markHeight","rowHeight","overlays","includes","extent","minWidth","fill","fillOpacity","outline","outlineOpacity","outlineWidth","outlinePos","metaTracks","overlaysTrack","annotationTracks","layout","w","h","x","initialXDomain","initialYDomain","root","display","right","bottom","left","appBar","marginLeft","palette","common","black","white","boxShadow","grey","flexShrink","drawerPaper","textInput","toolbar","mixins","content","flexDirection","flexGrow","padding","spacing","higlass","DEFAULT_HIGLASS_OPTIONS","sizeMode","chrPosUrlEncoder","chrPos","replace","chrPosUrlDecoder","updateFocusGeneViewConfig","gene","start","end","viewConfig","n","focusGene","updateFocusVariantViewConfig","variantAbsPosition","Number","isNaN","updateVariantYScaleViewConfig","yScale","Viewer","newXDomainStart","newXDomainEnd","setFocusGene","focusVariant","setFocusVariant","variantYScale","setVariantYScale","absToChr","slice","join","xDomainStart","setXDomainStart","xDomainEnd","setXDomainEnd","focusGeneOption","setFocusGeneOption","focusVariantOption","setFocusVariantOption","defaultViewConfig","pipe","chr","txStart","txEnd","xDomain","deepClone","setViewConfig","higlassApi","useRef","updateFocusGeneInHiglass","currentViewConfig","focusGeneChangeHandler","updateFocusVariantInHiglass","focusVariantChangeHandler","clearFocusVariant","r","results","higlassClickHandler","payload","fields","higlassLocationChangeHandlerDb","debounce","map","absPos","higlassInitHandler","higlassInstance","current","api","on","numericalXDomainStart","isString","chrToAbs","numericalXDomainEnd","CssBaseline","AppBar","Toolbar","Typography","noWrap","Drawer","paper","anchor","Divider","Box","m","FormControl","margin","InputLabel","htmlFor","OutlinedInput","target","Button","onClick","newViewConfig","zoomTo","disableElevation","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","ref","withEither","ifEitherFn","EitherComponent","Component","App","setChromInfo","ChromosomeInfo","then","_chromInfo","undefined","totalLength","catch","AppViewer","AppError","Boolean","hostname","match","createAnnotationOverlayMetaTrack","HGC","Error","pubSub","services","AnnotationOverlayMetaTrack","context","definition","getTrackObject","animate","onNewTilesLoaded","this","annotationTrackIds","Set","track","add","uuid","console","warn","filter","annotationDrawnHandlerBound","annotationDrawnHandler","bind","drawnAnnotations","Map","tracksDrawingTiles","pubSubs","subscribe","push","tilesDrawnEndHandler","xStartAbs","xEndAbs","data","set","unsubscribe","has","updateOverlays","Array","from","draw","clear","args","config","availableOptions","defaultOptions","VS","FS","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","pointToPosition","pt","cX","widthHalf","pointToIndex","base","pointToOpacity","opacity","pointToFocused","focused","getIs2d","tile","tileData","yStart","get1dItemWidth","item","get2dItemWidth","yEnd","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","fetchedTiles","Object","reduce","maxWidth","maxWidthItem","scaleScalableGraphics","xScale","drawnAtScale","tileK","domain","posOffset","scale","createStratifiedBedTrack","libraries","d3Scale","scaleLinear","scaleLog","tileProxy","opacityLogScale","range","clamp","StratifiedBedTrack","updateOptions","is2d","getItemWidth","getStart","getEnd","intervals","isLeftToRight","intervalTree","createIntervalTree","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","toLowerCase","categoryToY","yToCategory","groupSizes","group","groupSize","k","utils","colorToHex","category","j","cat","groupLabelsPixiText","Text","labelSize","align","axisLabelColor","markColorRgbNorm","colorToRgba","min","markColorFocusRgbNorm","getImportance","opacityLinearScale","opacityScale","Infinity","getGene","minImportance","updateStratificationOption","newOptions","updateExistingGraphics","dimensions","heightScale","categoryHeightScale","valueScale","valueScaleInverted","_xScale","get","mapFn","filteredItems","dataToPoint","itemToIndicatorReducer","itemToIndicatorCategory","points","flatMap","positions","indices","Uint16Array","opacities","uniforms","UniformGroup","uColor","uColorFocused","shader","Shader","geometry","Geometry","addAttribute","addIndex","mesh","Mesh","newGraphics","Graphics","addChild","pMain","indicatorPointGraphics","removeChild","drawAxis","pAxis","xTickOffset","xTickEnd","xLabelOffset","numAxisLabels","children","lineStyle","labelPixiText","renderIndicatorCategoryAxis","renderIndicatorPoints","hasFetchedTiles","updateScales","updateIndicators","storePolyStr","axisNoGroupColor","beginFill","drawRect","endFill","trackX","trackY","tilesetInfo","zoomLevel","calculateZoomLevel","tileWidth","calculateTileWidth","tile_size","tileId","tileToLocalId","floor","invert","fetchedTile","foundItem","xAbsLo","xAbsHi","queryInterval","interval","bg","colorHex","toString","bgHex","toFixed","newPosition","newXScale","newYScale","refreshTiles","setAttribute","output","document","createElement","appendChild","visibleAndFetchedTiles","polys","drawTile","polyStr","g","HorizontalLine1DPixiTrack","datatype","orientation","thumbnail","DOMParser","parseFromString","documentElement","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","createScalableArcs1dTrack","ScalableArcs1dTrack","numBins","pointSize","widthHistogramLeft","Uint32Array","widthHistogramRight","bin","round","histPos","widthHistogramMax","updateTileWidthHistogram","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","vertexShader","fragmentShader","drawTriangles","uPointSize","State","DRAW_MODES","TRIANGLES","POINTS","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","startsWith","drawCircle","drawEllipse","x1","x2","trackWidth","trackHeight","d","cx","cy","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","createSnpTrack","d3Array","scaleBand","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","radius","rectGraphics","finalDotYPos","rows","maxRows","initialize","rowScale","paddingInner","circleDraws","circleFocusDraws","td","geneInfo","chrOffset","yMiddle","step","drawnRects","circleDraw","drawPoly","interactive","buttonMode","mouseup","hoveringSnp","publish","relTilePos","tilePos","minDist","dist","itemY","importance","MAX_RADIUS","otherStr","v","substr","BedLikeTrack","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","getTilePosAndDimensions","tileX","binXPos","histogram1d","histogram2d","histogram2dNumPred","Uint8Array","categoryBinHash","maxBinId","binStart","binEnd","score","histIdx","binHash","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","rowCumSum","rowNumPred","totalPred","sum","numPred","relYPos","findIndex","createTssTrack","TssTrack","createPubSub","xStartScreen","xEndScreen","register","isMetaTrack","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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BACA,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACE5E,MAAO,UACP4E,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACE5E,MAAO,UACP4E,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACE5E,MAAO,6BACP4E,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACE5E,MAAO,cACP4E,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACE5E,MAAO,aACP4E,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCACA,0BACA,qDACA,gBACA,0BACA,wBACA,aACA,0BACA,qDACA,2BACA,uCACA,QACA,4CACA,gBACA,uBACA,mCACA,kCACA,gDACA,iBACA,kCAGJ,CACE5E,MAAO,QACP4E,WAAY,CACV,wBACA,kBACA,oBACA,yBACA,2BACA,yBACA,gBACA,8BACA,gCACA,yBACA,mBACA,eACA,cACA,yBACA,6BACA,oBACA,wDACA,6CACA,QACA,2DACA,uBACA,iEACA,sEASKC,EAAsB,CACjCC,UAAU,EACVC,mBAAoB,CAClB,sBACA,0CAEFC,MAAO,CAqDL,CACEC,IAAK,UACLC,wBAAyB,CACvBC,mBAAoB,sBACpBC,eAAgB,yBAChBC,gBAAiB,sBACjBC,YAAa,OACbC,SAAS,GAEXC,cAAe,oDACfC,OAAQ,CACNC,IAAK,CACH,CACEC,KAAM,WACNV,IAAK,kBACLW,OAAQ,GACRC,SAAU,CACR,CACEF,KAAM,+BACNvI,QAAS,CAEPZ,MAAO,UACPsJ,OAAQ,QACRC,SAAU,GACVC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAoB,WAEtBC,WAAY,yBACZP,OAAQ,GACRQ,OAAQ,2BAC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","file":"static/js/main.cf6f4003.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#bbb',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst AppInitializing = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"full-wh\">\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { identity } from '@flekschas/utils';\n\nimport useDebounce from './use-debounce';\n\nexport default function SearchField(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(props.inputValue);\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const loading = open && options.length === 0;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!open) return undefined;\n\n    setOptions([]);\n\n    (async () => {\n      const response = await fetch(\n        `${props.searchUrl}&ac=${debouncedSearchQuery}`\n      );\n      const geneList = await response.json();\n\n      if (active) {\n        setOptions(geneList);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [props.searchUrl, open, debouncedSearchQuery]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <Autocomplete\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      value={props.value}\n      onInputChange={(event, newInputValue) => {\n        if (event) setSearchQuery(newInputValue);\n      }}\n      fullWidth={props.fullWidth}\n      style={{ width: props.fullWidth ? 'auto' : props.width }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, _value) =>\n        option.geneName === _value.geneName\n      }\n      getOptionLabel={(option) => option.geneName}\n      options={props.value && options.length === 0 ? [props.value] : options}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          id={props.id}\n          label={props.label}\n          variant={props.variant}\n          size={props.size}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n}\n\nSearchField.defaultProps = {\n  onChange: identity,\n  label: '',\n  id: '',\n  fullWidth: true,\n  size: 'small',\n  value: null,\n  variant: 'outlined',\n  width: '10rem',\n};\n\nSearchField.propTypes = {\n  onChange: PropTypes.func,\n  label: PropTypes.string,\n  id: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  searchUrl: PropTypes.string.isRequired,\n  size: PropTypes.string,\n  value: PropTypes.object,\n  variant: PropTypes.string,\n  width: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { identity } from '@flekschas/utils';\nimport queryString from 'query-string';\n\nexport const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nexport const dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nexport const getQueryStringValue = (key, decoder = identity) =>\n  decoder(queryString.parse(window.location.search)[key]);\n\nexport const setQueryStringValue = (key, value, encoder = identity) => {\n  const values = queryString.parse(window.location.search);\n  const newQsValue = queryString.stringify(\n    {\n      ...values,\n      [key]: encoder(value),\n    },\n    { strict: false }\n  );\n  const url = `${window.location.origin}${window.location.pathname}?${newQsValue}`;\n  window.history.pushState({ path: url }, '', url);\n};\n\nexport const toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n","import { useState, useCallback } from 'react';\nimport { getQueryStringValue, setQueryStringValue } from './utils';\n\nfunction useQueryString(key, initialValue, { encoder, decoder } = {}) {\n  const [value, setValue] = useState(\n    getQueryStringValue(key, decoder) || initialValue\n  );\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n\nexport default useQueryString;\n","export const GENE_SEARCH_URL =\n  'https://higlass.io/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA';\n\nexport const VARIANT_SEARCH_URL =\n  'https://resgen.io/api/v1/suggest/?d=VF5-RDXWTxidGMJU7FeaxA';\n\nexport const DEFAULT_STRATIFICATION = {\n  categoryField: 10,\n  axisShowGroupSeparator: true,\n  // axisNoGroupColor: true,\n  groups: [\n    {\n      label: 'Mononuclear Phagocytes',\n      categories: [\n        'THP1_LPS_4hr-Engreitz',\n        'THP_pmaLPS_ATAC_6h',\n        'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n        'THP1-Engreitz',\n        'THP_pmaLPS_ATAC_96h',\n        'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n        'THP_pmaLPS_ATAC_72h',\n        'THP-1_monocyte-VanBortle2017',\n        'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n        'CD14-positive_monocyte-ENCODE',\n        'THP_pmaLPS_ATAC_2h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n        'U937_LPS_4hr-Engreitz',\n        'CD14-positive_monocyte-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n        'THP_pmaLPS_ATAC_0h',\n        'HAP1',\n        'THP-1_macrophage-VanBortle2017',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n        'U937-Engreitz',\n        'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n        'THP_pmaLPS_ATAC_24h',\n        'THP_pmaLPS_ATAC_1h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n        'THP_pmaLPS_ATAC_120h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n        'THP_pmaLPS_ATAC_48h',\n        'CD14-positive_monocytes-Roadmap',\n        'THP_pmaLPS_ATAC_12h', // monoctye\n      ],\n    },\n    {\n      label: 'B Cells',\n      categories: [\n        'Karpas-422-ENCODE', // b-cell cell line\n        'BJAB-Engreitz',\n        'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n        'B_cell-ENCODE',\n        'OCI-LY7-ENCODE',\n        'GM12878-Roadmap',\n        'MM.1S-ENCODE',\n        'CD19-positive_B_cell-Roadmap',\n        'CD8-positive_alpha-beta_T_cell-ENCODE',\n      ],\n    },\n    {\n      label: 'T Cells',\n      categories: [\n        'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n        'Jurkat-Engreitz',\n        'CD3-positive_T_cell-Roadmap',\n        'CD4-positive_helper_T_cell-ENCODE',\n        'CD8-positive_alpha-beta_T_cell-Corces2016',\n        'thymus_fetal-Roadmap',\n        'CD4-positive_helper_T_cell-Corces2016',\n        'T-cell-ENCODE',\n      ],\n    },\n    {\n      label: 'Other haematopoietic cells',\n      categories: [\n        'spleen-ENCODE',\n        'K562-Roadmap',\n        'CD56-positive_natural_killer_cells-Roadmap',\n        'erythroblast-Corces2016',\n        'CD34-positive_mobilized-Roadmap',\n        'megakaryocyte-erythroid_progenitor-Corces2016',\n        'natural_killer_cell-Corces2016',\n        'IMR90-Roadmap',\n      ],\n    },\n    {\n      label: 'Fibroblasts',\n      categories: [\n        'foreskin_fibroblast-Roadmap',\n        'fibroblast_of_dermis-Roadmap',\n        'fibroblast_of_arm-ENCODE',\n        'astrocyte-ENCODE',\n        'fibroblast_of_lung-Roadmap',\n      ],\n    },\n    {\n      label: 'Epithelial',\n      categories: [\n        'small_intestine_fetal-Roadmap',\n        'epithelial_cell_of_prostate-ENCODE',\n        'HCT116-ENCODE',\n        'MCF-7-ENCODE',\n        'adrenal_gland_fetal-ENCODE',\n        'H7',\n        'keratinocyte-Roadmap',\n        'MCF10A-Ji2017',\n        'pancreas-Roadmap',\n        'mammary_epithelial_cell-Roadmap',\n        'stomach-Roadmap',\n        'LoVo',\n        'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n        'PC-9-ENCODE',\n        'H1-hESC-Roadmap',\n        'thyroid_gland-ENCODE',\n        'HT29',\n        'MDA-MB-231',\n        'iPS_DF_19.11_Cell_Line-Roadmap',\n        'large_intestine_fetal-Roadmap',\n        'Panc1-ENCODE',\n        'adrenal_gland-ENCODE',\n        'MCF10A_treated_with_TAM24hr-Ji2017',\n        'trophoblast_cell-ENCODE',\n        'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n        'uterus-ENCODE',\n        'body_of_pancreas-ENCODE',\n        'stomach_fetal-Roadmap',\n        'H9-Roadmap',\n        'transverse_colon-ENCODE',\n        'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n        'breast_epithelium-ENCODE',\n        'induced_pluripotent_stem_cell-ENCODE',\n        'LNCAP',\n        'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n        'ovary-Roadmap',\n        'sigmoid_colon-ENCODE',\n        'skeletal_muscle_myoblast-Roadmap',\n        'bipolar_neuron_from_iPSC-ENCODE',\n        'coronary_artery_smooth_muscle_cell-Miller2016',\n        'SK-N-SH-ENCODE',\n        'muscle_of_trunk_fetal-Roadmap',\n      ],\n    },\n    {\n      label: 'Other',\n      categories: [\n        'adipose_tissue-ENCODE',\n        'HeLa-S3-Roadmap',\n        'hepatocyte-ENCODE',\n        'heart_ventricle-ENCODE',\n        'spinal_cord_fetal-ENCODE',\n        'coronary_artery-ENCODE',\n        'HepG2-Roadmap',\n        'muscle_of_leg_fetal-Roadmap',\n        'gastrocnemius_medialis-ENCODE',\n        'brite_adipose-Loft2014',\n        'placenta-Roadmap',\n        'liver-ENCODE',\n        'A673-ENCODE',\n        'white_adipose-Loft2014',\n        'cardiac_muscle_cell-ENCODE',\n        'osteoblast-ENCODE',\n        'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n        'endothelial_cell_of_umbilical_vein-Roadmap',\n        'NCCIT',\n        'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n        'psoas_muscle-Roadmap',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n      ],\n    },\n  ],\n};\n\nexport const DEFAULT_X_DOMAIN_START = 1761366260;\nexport const DEFAULT_X_DOMAIN_END = 1761603836;\n\nexport const DEFAULT_VIEW_CONFIG = {\n  editable: false,\n  trackSourceServers: [\n    '//higlass.io/api/v1',\n    'https://resgen.io/api/v1/gt/paper-data',\n  ],\n  views: [\n    // {\n    //   uid: 'overview',\n    //   chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n    //   layout: {\n    //     w: 12,\n    //     h: 24,\n    //     x: 0,\n    //     y: 0,\n    //   },\n    //   initialXDomain: [0, 3095693983],\n    //   initialYDomain: [0, 3095693983],\n    //   tracks: {\n    //     top: [\n    //       {\n    //         type: 'combined',\n    //         uid: 'chroms-viewport',\n    //         height: 24,\n    //         contents: [\n    //           {\n    //             type: 'horizontal-chromosome-labels',\n    //             tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n    //             height: 24,\n    //             server: 'https://resgen.io/api/v1',\n    //             uid: 'chroms',\n    //             options: {\n    //               // tickPositions: 'ends',\n    //               color: '#999999',\n    //               stroke: 'white',\n    //               fontSize: 12,\n    //               fontIsLeftAligned: false,\n    //               showMousePosition: true,\n    //               mousePositionColor: '#000000',\n    //             },\n    //           },\n    //           {\n    //             uid: 'viewport-details-chroms',\n    //             type: 'viewport-projection-horizontal',\n    //             fromViewUid: 'context',\n    //             height: 24,\n    //             options: {\n    //               projectionFillColor: '#cc0078',\n    //               projectionStrokeColor: '#cc0078',\n    //               projectionFillOpacity: 0.3,\n    //               projectionStrokeOpacity: 0.3,\n    //               strokeWidth: 1,\n    //             },\n    //           },\n    //         ],\n    //       },\n    //     ],\n    //   },\n    // },\n    {\n      uid: 'context',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'combined',\n            uid: 'chroms-viewport',\n            height: 12,\n            contents: [\n              {\n                type: 'horizontal-chromosome-labels',\n                options: {\n                  // tickPositions: 'ends',\n                  color: '#999999',\n                  stroke: 'white',\n                  fontSize: 10,\n                  fontIsLeftAligned: true,\n                  showMousePosition: false,\n                  mousePositionColor: '#000000',\n                },\n                tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n                height: 12,\n                server: 'https://resgen.io/api/v1',\n                uid: 'chroms',\n              },\n              {\n                uid: 'viewport-details-chroms',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 12,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'genes-tss-viewport',\n            height: 50,\n            contents: [\n              {\n                type: 'horizontal-gene-annotations',\n                uid: 'genes',\n                height: 50,\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                type: 'tss',\n                uid: 'tss',\n                height: 50,\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'RefSeqCurated170308bedCollapsedGeneBoundsTSS500bp',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VMZDLKrtQDmJMSjg7Ds4yA',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                uid: 'viewport-details-genes',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 50,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'point-annotation',\n            uid: 'ibd-snps',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 36,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          // {\n          //   type: 'horizontal-bar',\n          //   uid: 'microglia',\n          //   server: 'https://resgen.io/api/v1',\n          //   tilesetUid: 'V3eSdmpsQqquMuV-gX8lPw',\n          //   height: 36,\n          //   options: {\n          //     barFillColor: 'black',\n          //     align: 'bottom',\n          //     labelColor: '[glyph-color]',\n          //     labelPosition: 'topLeft',\n          //     labelLeftMargin: 0,\n          //     labelRightMargin: 0,\n          //     labelTopMargin: 0,\n          //     labelBottomMargin: 0,\n          //     labelShowResolution: false,\n          //     axisLabelFormatting: 'scientific',\n          //     axisPositionHorizontal: 'right',\n          //     valueScaling: 'linear',\n          //     trackBorderWidth: 0,\n          //     trackBorderColor: 'black',\n          //     labelTextOpacity: 0.4,\n          //     barOpacity: 1,\n          //     name: 'microglia_H3K27ac_pooled',\n          //   },\n          // },\n          {\n            type: 'stacked-bar',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2chr10',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA',\n            height: 96,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: DEFAULT_STRATIFICATION,\n            },\n          },\n          {\n            type: 'stratified-bed',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2chr10',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA',\n            height: 403,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: DEFAULT_STRATIFICATION,\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes-tss-viewport'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 0,\n            outlineWidth: 0,\n          },\n        },\n        {\n          uid: 'tss-overlays',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [],\n            minWidth: 1,\n            fill: 'black',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: 'black',\n            outlineOpacity: 0.1,\n            outlineWidth: 1,\n            outlinePos: ['left'],\n          },\n        },\n      ],\n      metaTracks: [\n        {\n          uid: 'tss-overlays-meta',\n          type: 'annotation-overlay',\n          overlaysTrack: 'tss-overlays',\n          options: {\n            annotationTracks: ['tss'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n      initialYDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n    },\n    //   {\n    //     uid: 'details',\n    //     chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n    //     tracks: {\n    //       top: [\n    //         {\n    //           type: 'horizontal-chromosome-labels',\n    //           options: {\n    //             // tickPositions: 'ends',\n    //             color: '#999999',\n    //             stroke: 'white',\n    //             fontSize: 10,\n    //             fontIsLeftAligned: true,\n    //             showMousePosition: false,\n    //             mousePositionColor: '#000000',\n    //           },\n    //           tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n    //           height: 12,\n    //           server: 'https://resgen.io/api/v1',\n    //           uid: 'chroms',\n    //         },\n    //         {\n    //           type: 'horizontal-gene-annotations',\n    //           uid: 'genes',\n    //           height: 48,\n    //           server: 'https://resgen.io/api/v1',\n    //           tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n    //           options: {\n    //             fontSize: 9,\n    //             plusStrandColor: 'black',\n    //             minusStrandColor: 'black',\n    //             geneAnnotationHeight: 12,\n    //             geneLabelPosition: 'outside',\n    //             geneStrandSpacing: 2,\n    //           },\n    //         },\n    //         {\n    //           type: 'point-annotation',\n    //           uid: 'ibd-snps',\n    //           // server: 'http://localhost:9876/api/v1',\n    //           // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n    //           server: 'https://resgen.io/api/v1',\n    //           tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n    //           height: 132,\n    //           options: {\n    //             axisPositionHorizontal: 'right',\n    //             markColor: 'black',\n    //             markColorFocus: '#cc0078',\n    //             markSize: 2,\n    //             markOpacity: 0.33,\n    //             markOpacityFocus: 0.66,\n    //             // axisPositionHorizontal: 'right',\n    //             valueColumn: 7,\n    //             focusRegion: [\n    //               1680373143 + 81046453 - 25,\n    //               1680373143 + 81046453 + 25,\n    //             ],\n    //             name: 'IBD SNPs',\n    //             toolTip: {\n    //               name: {\n    //                 field: 3,\n    //               },\n    //               value: {\n    //                 field: 6,\n    //                 numDecimals: 2,\n    //               },\n    //               other: [\n    //                 {\n    //                   label: 'Post. Prob.',\n    //                   field: 7,\n    //                   numDecimals: 2,\n    //                 },\n    //               ],\n    //             },\n    //           },\n    //         },\n    //         {\n    //           type: 'multivec',\n    //           uid: 'dna-accessibility',\n    //           height: 403,\n    //           // server: 'http://localhost:9876/api/v1',\n    //           // tilesetUid: 'test',\n    //           server: 'https://resgen.io/api/v1',\n    //           tilesetUid: 'Uz1_tEABQf-uzktblvBKSQ',\n    //           options: {\n    //             name: 'DNA Accessibility',\n    //             labelPosition: 'outerBottom',\n    //             labelShowResolution: false,\n    //             labelShowAssembly: false,\n    //             valueScaling: 'exponential',\n    //             colorRange: ['#ffffff', '#000000'],\n    //             selectRows: [\n    //               120,\n    //               36,\n    //               54,\n    //               20,\n    //               80,\n    //               35,\n    //               101,\n    //               49,\n    //               44,\n    //               23,\n    //               30,\n    //               66,\n    //               5,\n    //               26,\n    //               15,\n    //               105,\n    //               57,\n    //               56,\n    //               74,\n    //               84,\n    //               79,\n    //               93,\n    //               106,\n    //               107,\n    //               34,\n    //               28,\n    //               25,\n    //               55,\n    //               121,\n    //               94,\n    //               58,\n    //               69,\n    //               67,\n    //               63,\n    //               126,\n    //               71,\n    //               72,\n    //               47,\n    //               11,\n    //               46,\n    //               39,\n    //               113,\n    //               29,\n    //               60,\n    //               45,\n    //               76,\n    //               21,\n    //               103,\n    //               129,\n    //               13,\n    //               128,\n    //               90,\n    //               104,\n    //               32,\n    //               109,\n    //               27,\n    //               9,\n    //               130,\n    //               95,\n    //               86,\n    //               53,\n    //               73,\n    //               50,\n    //               48,\n    //               78,\n    //               14,\n    //               92,\n    //               124,\n    //               31,\n    //               114,\n    //               64,\n    //               88,\n    //               12,\n    //               10,\n    //               38,\n    //               68,\n    //               3,\n    //               111,\n    //               70,\n    //               22,\n    //               61,\n    //               98,\n    //               6,\n    //               123,\n    //               118,\n    //               43,\n    //               37,\n    //               65,\n    //               81,\n    //               62,\n    //               33,\n    //               1,\n    //               24,\n    //               122,\n    //               83,\n    //               75,\n    //               112,\n    //               40,\n    //               97,\n    //               16,\n    //               117,\n    //               87,\n    //               19,\n    //               125,\n    //               7,\n    //               102,\n    //               116,\n    //               77,\n    //               8,\n    //               17,\n    //               82,\n    //               115,\n    //               89,\n    //               119,\n    //               18,\n    //               4,\n    //               108,\n    //               59,\n    //               127,\n    //               91,\n    //               0,\n    //               100,\n    //               85,\n    //               110,\n    //               99,\n    //               2,\n    //               96,\n    //               51,\n    //               41,\n    //               52,\n    //               42,\n    //             ],\n    //           },\n    //         },\n    //       ],\n    //     },\n    //     layout: {\n    //       w: 4,\n    //       h: 11,\n    //       x: 8,\n    //       y: 1,\n    //     },\n    //     initialXDomain: [\n    //       1680373143 + 81046453 - 500,\n    //       1680373143 + 81046454 + 500,\n    //     ],\n    //     initialYDomain: [\n    //       1680373143 + 81046453 - 500,\n    //       1680373143 + 81046454 + 500,\n    //     ],\n    //   },\n  ],\n};\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { HiGlassComponent } from 'higlass';\nimport { debounce, deepClone, isString, pipe } from '@flekschas/utils';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SearchField from './SearchField';\n\nimport useQueryString from './use-query-string';\nimport { toAbsPosition } from './utils';\nimport {\n  DEFAULT_X_DOMAIN_START,\n  DEFAULT_X_DOMAIN_END,\n  DEFAULT_VIEW_CONFIG,\n  GENE_SEARCH_URL,\n  VARIANT_SEARCH_URL,\n} from './constants';\n\nimport 'higlass/dist/hglib.css';\nimport './Viewer.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    boxShadow: `0 1px 0 0 ${theme.palette.grey['300']}`,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  textInput: {\n    minWidth: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  higlass: {\n    flexGrow: 1,\n  },\n}));\n\nconst DEFAULT_HIGLASS_OPTIONS = {\n  sizeMode: 'bounded',\n  // pixelPreciseMarginPadding: true,\n  // containerPaddingX: 0,\n  // containerPaddingY: 0,\n  // viewMarginTop: 0,\n  // viewMarginBottom: 6,\n  // viewMarginLeft: 0,\n  // viewMarginRight: 0,\n  // viewPaddingTop: 3,\n  // viewPaddingBottom: 3,\n  // viewPaddingLeft: 0,\n  // viewPaddingRight: 0,\n};\n\nconst chrPosUrlEncoder = (chrPos) =>\n  chrPos ? chrPos.replace(':', '.') : chrPos;\n\nconst chrPosUrlDecoder = (chrPos) =>\n  chrPos ? chrPos.replace('.', ':') : chrPos;\n\nconst updateXDomainViewConfig = (newXDomainStart, newXDomainEnd) => (\n  viewConfig\n) => {\n  const xDomain = [...viewConfig.views[0].initialXDomain];\n\n  if (!Number.isNaN(+newXDomainStart)) {\n    xDomain[0] = newXDomainStart;\n  }\n  if (!Number.isNaN(+newXDomainEnd)) {\n    xDomain[1] = newXDomainEnd;\n  }\n\n  viewConfig.views[0].initialXDomain = xDomain;\n\n  return viewConfig;\n};\n\nconst updateFocusGeneViewConfig = (gene, start, end) => (viewConfig) => {\n  const n = viewConfig.views[0].tracks.top.length;\n\n  if (gene) {\n    viewConfig.views[0].tracks.top[n - 1].options.focusGene = gene;\n    viewConfig.views[0].overlays[1].options.extent = [[start, end]];\n  } else {\n    delete viewConfig.views[0].tracks.top[n - 1].options.focusGene;\n    delete viewConfig.views[0].overlays[1].options.extent;\n  }\n\n  return viewConfig;\n};\n\nconst updateFocusVariantViewConfig = (variantAbsPosition) => (viewConfig) => {\n  // const n = viewConfig.views.length;\n\n  const focusRegion = Number.isNaN(+variantAbsPosition)\n    ? []\n    : [variantAbsPosition - 0.5, variantAbsPosition + 0.5];\n\n  viewConfig.views[0].tracks.top[2].options.focusRegion = focusRegion;\n  viewConfig.views[0].tracks.top[4].options.focusRegion = focusRegion;\n  // viewConfig.views[0].tracks.top[n - 1].options.focusRegion = focusRegion;\n  viewConfig.views[0].overlays[0].options.extent = [focusRegion];\n\n  // const focusDomain = Number.isNaN(+variantAbsPosition)\n  //   ? viewConfig.views[1].initialXDomain\n  //   : [variantAbsPosition - 500, variantAbsPosition + 500];\n\n  // viewConfig.views[1].initialXDomain = focusDomain;\n  // viewConfig.views[1].initialYDomain = focusDomain;\n\n  return viewConfig;\n};\n\nconst updateVariantYScaleViewConfig = (yScale) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[2].options.valueColumn =\n    yScale === 'pValue' ? 7 : 8;\n  // viewConfig.views[1].tracks.top[2].options.valueColumn =\n  //   yScale === 'pValue' ? 7 : 8;\n\n  return viewConfig;\n};\n\nconst Viewer = (props) => {\n  const [focusGene, setFocusGene] = useQueryString('gene', '');\n  const [focusVariant, setFocusVariant] = useQueryString(\n    'variant',\n    'rs1250566'\n  );\n  const [variantYScale, setVariantYScale] = useQueryString(\n    'varient-scale',\n    'pValue'\n  );\n  const [xDomainStart, setXDomainStart] = useQueryString(\n    'start',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_START).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [xDomainEnd, setXDomainEnd] = useQueryString(\n    'end',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_END).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n\n  const [focusGeneOption, setFocusGeneOption] = useState(null);\n  const [focusVariantOption, setFocusVariantOption] = useState(null);\n  const [options, setOptions] = useState(DEFAULT_HIGLASS_OPTIONS);\n\n  const defaultViewConfig = pipe(\n    updateFocusGeneViewConfig(\n      focusGeneOption,\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txEnd}`,\n            props.chromInfo\n          )\n        : null\n    ),\n    updateFocusVariantViewConfig(\n      focusVariantOption\n        ? toAbsPosition(\n            `${focusVariantOption.chr}:${focusVariantOption.txStart}`,\n            props.chromInfo\n          )\n        : null\n    ),\n    updateVariantYScaleViewConfig(variantYScale),\n    updateXDomainViewConfig(\n      toAbsPosition(xDomainStart, props.chromInfo),\n      toAbsPosition(xDomainEnd, props.chromInfo)\n    )\n  )(deepClone(DEFAULT_VIEW_CONFIG));\n\n  const [viewConfig, setViewConfig] = useState(defaultViewConfig);\n  const higlassApi = useRef(null);\n\n  const updateFocusGeneInHiglass = (name, start, end) => {\n    setViewConfig((currentViewConfig) =>\n      updateFocusGeneViewConfig(name, start, end)(deepClone(currentViewConfig))\n    );\n  };\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n    updateFocusGeneInHiglass();\n  };\n\n  const focusGeneChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusGene(newValue.geneName);\n      setFocusGeneOption(newValue);\n      const start = toAbsPosition(\n        `${newValue.chr}:${newValue.txStart}`,\n        props.chromInfo\n      );\n      const end = toAbsPosition(\n        `${newValue.chr}:${newValue.txEnd}`,\n        props.chromInfo\n      );\n      updateFocusGeneInHiglass(newValue.geneName, start, end);\n    } else {\n      clearFocusGene();\n    }\n  };\n\n  const updateFocusVariantInHiglass = (absPosition) => {\n    setViewConfig((currentViewConfig) =>\n      updateFocusVariantViewConfig(absPosition)(deepClone(currentViewConfig))\n    );\n  };\n\n  const focusVariantChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusVariant(newValue.geneName);\n      setFocusVariantOption(newValue);\n      const absPosition = toAbsPosition(\n        `${newValue.chr}:${newValue.txStart}`,\n        props.chromInfo\n      );\n      updateFocusVariantInHiglass(absPosition);\n    } else {\n      clearFocusVariant();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (focusGene && !focusGeneOption) {\n        const r = await fetch(`${GENE_SEARCH_URL}&ac=${focusGene}`);\n        const results = await r.json();\n        focusGeneChangeHandler(results[0]);\n      }\n      if (focusVariant && !focusVariantOption) {\n        const r = await fetch(`${VARIANT_SEARCH_URL}&ac=${focusVariant}`);\n        const results = await r.json();\n        focusVariantChangeHandler(results[0]);\n      }\n    })();\n  }, []);\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    updateFocusVariantInHiglass('');\n  };\n\n  const updateVariantYScaleInHiglass = (yScale) => {\n    setViewConfig((currentViewConfig) =>\n      updateVariantYScaleViewConfig(yScale)(deepClone(currentViewConfig))\n    );\n  };\n\n  const variantYScaleChangeHandler = (event) => {\n    setVariantYScale(event.target.value);\n    updateVariantYScaleInHiglass(event.target.value);\n  };\n\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      setFocusGeneOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n      });\n      updateFocusGeneInHiglass(\n        event.payload.name,\n        event.payload.xStart,\n        event.payload.xEnd\n      );\n    } else if (event.type === 'snp') {\n      setFocusVariant(`${event.payload.fields[0]}:${event.payload.fields[1]}`);\n      updateFocusVariantInHiglass(event.payload.xStart);\n    }\n  };\n\n  const higlassLocationChangeHandler = (event) => {\n    const [newXDomainStart, newXDomainEnd] = event.xDomain.map((absPos) =>\n      props.chromInfo.absToChr(absPos).slice(0, 2).join(':')\n    );\n    setXDomainStart(newXDomainStart);\n    setXDomainEnd(newXDomainEnd);\n  };\n  const higlassLocationChangeHandlerDb = debounce(\n    higlassLocationChangeHandler,\n    250\n  );\n\n  const higlassInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassApi.current = higlassInstance.api;\n      higlassInstance.api.on('click', higlassClickHandler);\n      higlassInstance.api.on(\n        'location',\n        higlassLocationChangeHandlerDb,\n        'context'\n      );\n    }\n  }, []);\n\n  const numericalXDomainStart =\n    isString(xDomainStart) && xDomainStart.indexOf(':') >= 0\n      ? props.chromInfo.chrToAbs([\n          xDomainStart.split(':')[0],\n          +xDomainStart.split(':')[1],\n        ])\n      : +xDomainStart;\n\n  const numericalXDomainEnd =\n    isString(xDomainEnd) && xDomainEnd.indexOf(':') >= 0\n      ? props.chromInfo.chrToAbs([\n          xDomainEnd.split(':')[0],\n          +xDomainEnd.split(':')[1],\n        ])\n      : +xDomainEnd;\n\n  const xDomainStartChangeHandler = (event) => {\n    setXDomainStart(event.target.value);\n  };\n\n  const xDomainEndChangeHandler = (event) => {\n    setXDomainEnd(event.target.value);\n  };\n\n  const updateXDomain = (event) => {\n    if (!higlassApi.current) return;\n\n    const newViewConfig = deepClone(viewConfig);\n\n    const xDomain = [...newViewConfig.views[0].initialXDomain];\n\n    if (!Number.isNaN(+numericalXDomainStart)) {\n      xDomain[0] = numericalXDomainStart;\n    }\n    if (!Number.isNaN(+numericalXDomainEnd)) {\n      xDomain[1] = numericalXDomainEnd;\n    }\n\n    higlassApi.current.zoomTo(\n      'context',\n      xDomain[0],\n      xDomain[1],\n      xDomain[0],\n      xDomain[1],\n      2000\n    );\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            Enhancer-Promoter Vis\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <Box m={1}>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <InputLabel htmlFor=\"x-domain-start\">Region Start</InputLabel>\n              <OutlinedInput\n                id=\"x-domain-start\"\n                label=\"Region Start\"\n                onChange={xDomainStartChangeHandler}\n                value={xDomainStart}\n              />\n            </FormControl>\n          </Box>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <InputLabel htmlFor=\"x-domain-end\">Region End</InputLabel>\n              <OutlinedInput\n                id=\"x-domain-end\"\n                label=\"Region End\"\n                onChange={xDomainEndChangeHandler}\n                value={xDomainEnd}\n              />\n            </FormControl>\n          </Box>\n          <Box m={0}>\n            <Button\n              variant=\"contained\"\n              margin=\"dense\"\n              onClick={updateXDomain}\n              fullWidth\n              disableElevation\n            >\n              Go\n            </Button>\n          </Box>\n        </Box>\n        <Divider />\n        <Box m={1}>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <SearchField\n                label=\"Focus Gene\"\n                searchUrl={GENE_SEARCH_URL}\n                onChange={focusGeneChangeHandler}\n                value={focusGeneOption}\n                fullWidth\n              />\n            </FormControl>\n          </Box>\n          <Box m={0}>\n            <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n              <SearchField\n                label=\"Focus Variant\"\n                searchUrl={VARIANT_SEARCH_URL}\n                onChange={focusVariantChangeHandler}\n                value={focusVariantOption}\n                fullWidth\n              />\n            </FormControl>\n          </Box>\n        </Box>\n        <Box m={1}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Variant y-scale</FormLabel>\n            <RadioGroup\n              aria-label=\"variantYScale\"\n              name=\"variantYScale\"\n              value={variantYScale}\n              onChange={variantYScaleChangeHandler}\n            >\n              <FormControlLabel\n                label=\"p-value\"\n                control={<Radio size=\"small\" />}\n                value=\"pValue\"\n              />\n              <FormControlLabel\n                label=\"Posterior probability\"\n                control={<Radio size=\"small\" />}\n                value=\"posteriorProbability\"\n              />\n            </RadioGroup>\n          </FormControl>\n        </Box>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div className={classes.higlass}>\n          <HiGlassComponent\n            ref={higlassInitHandler}\n            viewConfig={viewConfig}\n            options={options}\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Viewer;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport Viewer from './Viewer';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const AppViewer = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(Viewer);\n\n  return (\n    <div className=\"App\">\n      <AppViewer chromInfo={chromInfo} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createAnnotationOverlayMetaTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  // Services\n  const { pubSub } = HGC.services;\n\n  class AnnotationOverlayMetaTrack {\n    constructor(context, options) {\n      const { definition, getTrackObject, onNewTilesLoaded: animate } = context;\n\n      this.animate = animate;\n      this.options = options;\n\n      this.overlaysTrack = getTrackObject(definition.overlaysTrack);\n\n      if (!this.overlaysTrack) {\n        console.warn(\n          `Overlays track (uid: ${definition.overlaysTrack}) not found`\n        );\n        return;\n      }\n\n      this.annotationTrackIds = new Set();\n      this.annotationTracks = definition.options.annotationTracks\n        .map((uid) => {\n          const track = getTrackObject(uid);\n\n          if (!track) {\n            console.warn(`Child track (uid: ${uid}) not found`);\n          } else {\n            this.annotationTrackIds.add(track.uuid);\n          }\n\n          return track;\n        })\n        .filter((track) => track);\n\n      this.annotationDrawnHandlerBound = this.annotationDrawnHandler.bind(this);\n\n      this.drawnAnnotations = new Map();\n      this.tracksDrawingTiles = new Set();\n\n      this.pubSubs = [];\n\n      // Augment annotation tracks\n      this.annotationTracks.forEach((track) => {\n        track.subscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n\n      this.pubSubs.push(\n        pubSub.subscribe(\n          'TiledPixiTrack.tilesDrawnEnd',\n          this.tilesDrawnEndHandler.bind(this)\n        )\n      );\n    }\n\n    /**\n     * Handles annotation drawn events\n     *\n     * @param  {String}  event.uid  UID of the view that triggered the event.\n     * @param  {Array}  event.viewPos  View position (i.e., [x, y, width, height])\n     *   of the drawn annotation on the screen.\n     * @param  {Array}  event.dataPos  Data position of the drawn annotation. For\n     *   example base pairs (Hi-C), or pixels (gigapixel images), or lng-lat\n     *   (geo json).\n     */\n    annotationDrawnHandler({ xStartAbs, xEndAbs, data }) {\n      this.drawnAnnotations.set(data.uid, [xStartAbs, xEndAbs]);\n    }\n\n    /**\n     * Remove this track.\n     */\n    remove() {\n      this.pubSubs.forEach(pubSub.unsubscribe);\n      this.pubSubs = undefined;\n      this.annotationTracks.forEach((track) => {\n        track.unsubscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n    }\n\n    /**\n     * Callback function passed into the annotation tracks to trigger tree\n     * building of the spatial RTree.\n     *\n     * @description\n     * Simple counter that call `this.buildTree()` once the number of annotation\n     * tracks is reached.\n     */\n    tilesDrawnEndHandler({ uuid }) {\n      if (!this.annotationTrackIds.has(uuid)) return;\n\n      this.tracksDrawingTiles.add(uuid);\n\n      if (!(this.tracksDrawingTiles.size % this.annotationTracks.length)) {\n        this.updateOverlays();\n      }\n    }\n\n    updateOverlays() {\n      this.overlaysTrack.options.extent = Array.from(\n        this.drawnAnnotations.values()\n      );\n      this.overlaysTrack.draw();\n      this.tracksDrawingTiles.clear();\n    }\n  }\n\n  return new AnnotationOverlayMetaTrack(...args);\n}\n\ncreateAnnotationOverlayMetaTrack.config = {\n  type: 'annotation-overlay',\n  availableOptions: ['annotationTracks'],\n  defaultOptions: {\n    annotationTracks: [],\n  },\n};\n\nexport default createAnnotationOverlayMetaTrack;\n","import createIntervalTree from 'interval-tree-1d';\nimport { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [\n  pt.opacity,\n  pt.opacity,\n  pt.opacity,\n  pt.opacity,\n  // pt.opacity,\n  // pt.opacity,\n];\n\nconst pointToFocused = (pt) => [\n  pt.focused,\n  pt.focused,\n  pt.focused,\n  pt.focused,\n  // pt.focused,\n  // pt.focused,\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createStratifiedBedTrack = function createStratifiedBedTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class StratifiedBedTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const dataToPoint = this.itemToIndicatorReducer(\n        this.itemToIndicatorCategory.bind(this)\n      );\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      this.renderIndicatorPoints();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(trackX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(trackY))\n      );\n\n      const xAbsLo = this._xScale.invert(trackX - 1);\n      const xAbsHi = this._xScale.invert(trackX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      if (foundItem) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(foundItem).toFixed(2);\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new StratifiedBedTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStratifiedBedTrack.config = {\n  type: 'stratified-bed',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStratifiedBedTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo && !this.options.toolTip) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst DEFAULT_COLOR_MAP = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n      tile.histogram2dNumPred = new Uint8Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      const categoryBinHash = new Map();\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const category = this.getCategory(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          const binHash = categoryBinHash.get(category) || {};\n\n          // Make sure we count multiple enhancer predictions of the same biosample and bin only once (i.e., summing up)\n          if (!binHash[bin]) {\n            binHash[bin] = binHash[bin] || score > 0;\n            tile.histogram2dNumPred[histIdx] += binHash[bin];\n            categoryBinHash.set(category, binHash);\n          }\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const rowCumSum = [];\n      const rowNumPred = [];\n      let totalPred = 0;\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        const numPred =\n          fetchedTile.histogram2dNumPred[i * this.numBins + binXPos];\n        rowNumPred.push(numPred);\n        totalPred += numPred;\n        rowCumSum.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = rowCumSum.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value =\n          fetchedTile.histogram2dNumPred[group * this.numBins + binXPos];\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value} of ${totalPred} samples</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import createPubSub from 'pub-sub-es';\n\nfunction createTssTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  class TssTrack extends HGC.tracks.BedLikeTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      const { publish, subscribe, unsubscribe } = createPubSub();\n      this.publish = publish;\n      this.subscribe = subscribe;\n      this.unsubscribe = unsubscribe;\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = 1;\n      const radius = 2;\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = {\n              xStartScreen: xStartPos,\n              xEndScreen: xEndPos,\n              xStartAbs: txStart,\n              xEndAbs: txEnd,\n              data: td,\n            };\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        circleDraws.forEach((circleDraw) => {\n          this.publish('annotationDrawn', circleDraw);\n        });\n      }\n    }\n\n    rerender() {\n      // Monkey patch because TiledPixiTrack doesn't always fire correctly\n      this.draw();\n      this.pubSub.publish('TiledPixiTrack.tilesDrawnEnd', { uuid: this.uuid });\n    }\n\n    getMouseOverHtml() {\n      return '';\n    }\n  }\n\n  return new TssTrack(...args);\n}\n\ncreateTssTrack.config = {\n  type: 'tss',\n  datatype: ['bedlike'],\n};\n\nexport default createTssTrack;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAnnotationOverlayMetaTrack from './annotation-overlay-meta-track';\nimport createStratifiedBedTrack from './stratified-bed-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\nimport createTssTrack from './tss-track';\n\nimport './index.css';\n\nregister({\n  name: 'ScalableArcs1dTrack',\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  name: 'StratifiedBedTrack',\n  track: createStratifiedBedTrack,\n  config: createStratifiedBedTrack.config,\n});\n\nregister({\n  name: 'SnpTrack',\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  name: 'StackedBarTrack',\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nregister({\n  name: 'TssTrack',\n  track: createTssTrack,\n  config: createTssTrack.config,\n});\n\nregister({\n  name: 'AnnotationsToInsetsMetaTrack',\n  track: createAnnotationOverlayMetaTrack,\n  isMetaTrack: true,\n  config: createAnnotationOverlayMetaTrack.config,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}