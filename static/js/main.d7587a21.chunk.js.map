{"version":3,"sources":["AppInitializing.js","AppError.js","Logo.js","SearchField.js","use-debounce.js","utils.js","use-query-string.js","use-previous.js","constants.js","Viewer.js","with-either.js","App.js","serviceWorker.js","annotation-overlay-meta-track.js","ridge-plot-track.js","stratified-bed-track.js","scalable-arcs-track.js","snp-track.js","stacked-bar-track.js","tss-track.js","index.js"],"names":["useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","backgroundColor","AppInitializing","classes","className","Backdrop","open","CircularProgress","logo","height","padding","alignItems","fontSize","lineHeight","fontWeight","logoAbc","letterSpacing","paddingRight","logoEnhancer","Logo","props","Grid","container","style","styles","item","direction","defaultProps","inputRoot","background","borderTopLeftRadius","borderTopRightRadius","borderBottomWidth","boxShadow","transition","focused","input","textFieldRoot","transform","fetchJsonFromUrl","url","query","a","fetch","response","json","results","map","result","type","GeneIcon","SvgIcon","viewBox","d","GeneOption","key","option","geneName","VariantOption","Option","SearchField","useState","setOpen","options","setOptions","inputValue","searchQuery","setSearchQuery","debouncedSearchQuery","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","loading","length","autocompleteClasses","active","Array","isArray","searchUrl","Promise","all","then","resultList","flat","multiple","autocompleteOptions","Autocomplete","larger","onChange","event","newValue","onInputChange","newInputValue","fullWidth","width","onOpen","onClose","getOptionSelected","_value","getOptionLabel","renderInput","params","TextField","id","label","variant","size","InputProps","endAdornment","Fragment","renderOption","renderTags","v","getTagProps","index","Chip","icon","identity","contains","b","createColorTexture","PIXI","colors","colorTexRes","Math","max","ceil","sqrt","rgba","Float32Array","forEach","i","Texture","fromBuffer","dashedXLineTo","graphics","xStart","xEnd","y","dashSize","diff","sign","abs","stepSize","numSteps","moveTo","lineTo","getQueryStringValue","decoder","queryString","parse","window","location","search","setQueryStringValue","encoder","values","newQsValue","stringify","strict","origin","pathname","history","pushState","path","toAbsPosition","position","chromInfo","absPosition","indexOf","split","chrom","pos","chrPositions","useQueryString","initialValue","undefined","setValue","onSetValue","useCallback","usePrevious","ref","useRef","current","DEFAULT_COLOR_MAP","DEFAULT_COLOR_MAP_DARK","DEFAULT_COLOR_MAP_LIGHT","GENE_SEARCH_URL","VARIANT_SEARCH_URL","DEFAULT_STRATIFICATION","categoryField","axisShowGroupSeparator","axisNoGroupColor","groups","categories","DEFAULT_VIEW_CONFIG_ENHANCER","editable","trackSourceServers","views","uid","genomePositionSearchBox","autocompleteServer","autocompleteId","chromInfoServer","chromInfoId","visible","chromInfoPath","tracks","top","contents","stroke","fontIsLeftAligned","showMousePosition","mousePositionColor","tilesetUid","server","fromViewUid","projectionFillColor","projectionStrokeColor","projectionFillOpacity","projectionStrokeOpacity","strokeWidth","plusStrandColor","minusStrandColor","geneAnnotationHeight","geneLabelPosition","geneStrandSpacing","axisPositionHorizontal","markColor","markColorFocus","markSize","markOpacity","markOpacityFocus","valueColumn","focusRegion","name","toolTip","field","numDecimals","other","binSize","axisAlign","labelPosition","arcStyle","indicatorStyle","labelColor","trackBorderWidth","trackBorderColor","geneField","importanceField","importanceDomain","stratification","markColorHighlight","markColorDehighlight","markMinWidth","markHeight","rowHeight","overlays","includes","extent","minWidth","fill","fillOpacity","outline","outlineOpacity","outlineWidth","outlinePos","metaTracks","overlaysTrack","annotationTracks","layout","w","h","x","initialXDomain","initialYDomain","DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY","zoomFixed","labelShowResolution","labelShowAssembly","markArea","markResolution","valueScaling","colorRange","rowPadding","rowNormalization","rowSelections","rowIdToCategory","fn","args","rowCategories","reduce","row","group","category","axisLabelColor","axisLabelBackground","sample","showRowLabels","rowLabelSize","black","gray","palette","grey","pink","root","display","right","bottom","left","h1","margin","modal","justifyContent","paper","borderRadius","shadows","maxWidth","spacing","startExploring","appBar","marginLeft","common","white","flexShrink","drawerGrid","drawerPaper","settings","flexGrow","settingsContent","overflow","textInput","toolbar","mixins","content","flexDirection","grow","higlass","higlassEnhancer","higlassDnaAccessibility","higlassTitleBar","higlassTitleBarTitle","higlassTitleBarHelp","higlassTitleBarHelpPopeover","higlassEnhancerInfoBar","higlassDnaAccessibilityInfoBar","higlassSeparator","toolbarExtra","paddingLeft","chrPosUrlEncoder","chrPos","replace","chrPosUrlDecoder","updateViewConfigXDomain","newXDomainStart","newXDomainEnd","force","viewConfig","xDomain","focusGeneRegion","getFocusGeneRegion","focusVariantRegion","getFocusVariantRegion","Number","isNaN","min","updateViewConfigFocusVariant","trackIdxs","trackIdx","updateViewConfigVariantYScale","yScale","Viewer","infoOpen","setInfoOpen","focusGene","setFocusGene","focusVariant","setFocusVariant","hideUnfocused","setHideUnfocused","matrixColoring","setMatrixColoring","variantYScale","setVariantYScale","dnaAccessLabels","setDnaAccessLabels","absToChr","slice","join","xDomainStart","setXDomainStart","xDomainEnd","setXDomainEnd","focusGeneOption","setFocusGeneOption","focusVariantOption","setFocusVariantOption","prevFocusGeneOption","prevFocusVariantOption","higlassEnhancerApi","higlassDnaAccessApi","higlassEnhancerHelpAnchorEl","setHiglassEnhancerHelpAnchorEl","higlassDnaAccessHelpAnchorEl","setHiglassDnaAccessHelpAnchorEl","focusGeneVariantOptions","useMemo","_focusGeneVariant","push","focusGeneStartPosition","chr","txStart","focusGeneEndPosition","txEnd","focusVariantPosition","xDomainStartAbs","xDomainEndAbs","viewConfigEnhancer","pipe","gene","start","end","n","focusStyle","updateViewConfigFocusStyle","coloring","opacityEncoding","deepClone","viewConfigDnaAccessibility","labels","dnaAccessibilityRegionSize","round","numericalXDomainStart","isString","chrToAbs","numericalXDomainEnd","clearFocusGene","clearFocusVariant","focusVariantChangeHandler","higlassClickHandler","payload","fields","score","importance","higlassLocationChangeHandlerDb","debounce","absPos","r","higlassEnhancerInitHandler","higlassInstance","api","on","higlassDnaAccessibilityInitHandler","higlassEnhancerHelpOpen","Boolean","higlassEnhancerHelpId","higlassDnaAccessHelpOpen","higlassDnaAccessHelpId","infoCloseHandler","CssBaseline","AppBar","Toolbar","FormControl","newValues","newFocusElements","console","warn","Drawer","anchor","ButtonBase","onClick","Divider","Box","m","InputLabel","htmlFor","OutlinedInput","target","Button","newViewConfig","zoomTo","disableElevation","FormControlLabel","control","Switch","checked","toString","component","FormLabel","RadioGroup","aria-label","Radio","enhancerSvg","exportAsSvg","filename","stringOrBlob","blob","Blob","navigator","msSaveOrOpenBlob","msSaveBlob","elem","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","Typography","align","noWrap","IconButton","aria-describedby","currentTarget","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","sizeMode","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","number","decimals","forced","string","toFixed","substring","title","Modal","aria-labelledby","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","rel","primary","withEither","ifEitherFn","EitherComponent","Component","createMuiTheme","main","secondary","App","setChromInfo","ChromosomeInfo","_chromInfo","totalLength","catch","AppViewer","AppError","ThemeProvider","hostname","match","createAnnotationOverlayMetaTrack","HGC","Error","pubSub","services","AnnotationOverlayMetaTrack","context","definition","getTrackObject","animate","onNewTilesLoaded","this","annotationTrackIds","Set","track","add","uuid","filter","annotationDrawnHandlerBound","annotationDrawnHandler","bind","drawnAnnotations","Map","tracksDrawingTiles","pubSubs","subscribe","tilesDrawnEndHandler","xStartAbs","xEndAbs","data","set","unsubscribe","has","updateOverlays","from","draw","clear","config","availableOptions","defaultOptions","FLOAT_BYTES","BYTES_PER_ELEMENT","VS","FS","COLORMAP_GRAYS","getMax","fetchedTiles","Object","maxValue","tile","tileData","maxNonZero","Infinity","getNumRows","coarseShape","getRowMaxs","maxVector","maxValueByRow","scaleGraphics","xScale","drawnAtScale","tileK","domain","posOffset","scale","getNumPointsPerRow","numRows","positions","createRidgePlotTrack","libraries","format","d3Format","scaleLinear","d3Scale","tileProxy","RidgePlotTrack","updateOptions","coarsifyTileValues","tilesetInfo","bins_per_dimension","zoomLevel","tilePos","binsPerTileIn","binsPerTile","resolutions","chosenResolution","sort","tileWidth","tileHeight","tileX","tileY","xTilePos","yTilePos","minX","min_pos","minY","reverseYAxis","max_pos","max_width","selectRowsAggregationMode","selectRowsAggregationFn","maxNan","minNan","sumNan","meanNan","markAreaColor","utils","colorToHex","markColorRgbNorm","colorToRgba","markColorTex","markColorTexRes","markNumColors","oldMarkResolution","TILE_SIZE","oldRowHeight","oldRowPadding","oldRowNormalization","oldRowSelections","updateTiles","updateScales","oldShowRowLabels","updateRowLabels","drawLabel","rowLabelAlign","pAxis","children","removeChildAt","rowLabels","rowLabel","destroy","row_infos","rowIndex","removeRowLabels","indicator","Sprite","WHITE","tint","Text","dimensions","yStart","xLabelOffset","getRowHeight","rowStepHeight","rowStepYCenter","addChild","newOptions","updateExistingGraphics","getTilePosAndDimensions","shape","binSizePx","floor","binSizeBp","binSizeBpHalf","binXPos","valuesByRow","j","meanValue","dense","subarray","rowIdx","actualTrackHeight","getTrackHeight","globalMax","valueScale","range","colorIndexScale","clamp","rowMaxs","rowValueScales","rowColorIndexScales","valueScaleByRow","colorIndexScaleByRow","rowScale","tiles","maxRows","positionsByRow","colorIndicesByRow","offsetSignsByRow","_xScale","size2d","size1d","unshift","flatMap","numPointsPerRow","verticesPerLine","verticesPerPoint","indices","Uint32Array","k","p1a","p1b","p1c","p1d","p2a","p2b","p2c","p2d","indexOffset","visibleTrackHeight","tilesToData","colorIndices","offsetSigns","toLineIndices","uniforms","UniformGroup","uLineColor","uNaNColor","uAreaColorTex","uAreaColorTexRes","uWidth","uMiter","shader","Shader","geometry","Geometry","numVerticesPoint","addAttribute","TYPES","FLOAT","addIndex","mesh","Mesh","newGraphics","Graphics","pMain","lineGraphics","hasFetchedTiles","renderLines","newPosition","newXScale","newYScale","refreshTiles","trackX","trackY","calculateZoomLevel","calculateTileWidth","tile_size","invert","posInTileX","rowSelection","tileId","tileToLocalId","fetchedTile","text","selectRowsAggregationMethod","rowI","rowInfo","getVisibleData","HorizontalLine1DPixiTrack","datatype","orientation","pointToPosition","pt","cX","widthHalf","pointToIndex","base","pointToOpacity","opacity","pointToHighlight","highlight","getIs2d","get1dItemWidth","get2dItemWidth","yEnd","get1dStart","get2dStart","get1dEnd","get2dEnd","getMaxWidth","maxWidthItem","scaleScalableGraphics","getRegionId","createStratifiedBedTrack","scaleLog","opacityLogScale","StratifiedBedTrack","is2d","getItemWidth","getStart","getEnd","intervals","regionId","isLeftToRight","intervalTree","createIntervalTree","categoryToGroup","groupToColor","numGroups","numCategories","groupLabels","getCategory","toLowerCase","categoryToY","yToCategory","groupSizes","groupSize","cat","groupLabelsPixiText","labelSize","markColorHighlightRgbNorm","markColorDehighlightRgbNorm","getImportance","opacityScale","opacityLinearScale","getRegion","getGene","minImportance","updateStratificationOption","heightScale","categoryHeightScale","valueScaleInverted","isHighlighting","get","__focus","__item","filterFn","addFn","filteredItems","reducerVar","accumulator","itemToIndicatorCategory","i1","isItemInFocus","dataToPoint","itemToIndicatorReducer","points","getPoints","Uint16Array","opacities","highlights","uColor","uColorHighlight","uHighlighting","indicatorPointGraphics","xTickOffset","xTickEnd","numAxisLabels","lineStyle","labelPixiText","beginFill","drawRect","endFill","gAxis","setAttribute","createRect","f","o","createLine","strokeDasharray","x1","y1","x2","y2","l","createDashedLine","pixiText","t","_style","_fill","_align","_font","textContent","createText","renderIndicatorCategoryAxis","renderIndicatorPoints","updateIndicators","storePolyStr","foundItem","xAbsLo","xAbsHi","queryInterval","interval","bg","colorHex","bgHex","output","colorHighlight","renderIndicatorCategoryAxisAsSvg","thumbnail","DOMParser","parseFromString","documentElement","flip1D","optionsInfo","inlineOptions","circle","ellipse","FS_ROUND","FS_SQUARE","DEFAULT_GROUP_COLORS","DEFAULT_GROUP_COLORS_DARK","DEFAULT_GROUP_COLORS_LIGHT","createScalableArcs1dTrack","ScalableArcs1dTrack","numBins","pointSize","widthHistogramLeft","widthHistogramRight","bin","histPos","widthHistogramMax","updateTileWidthHistogram","markColorFocusRgbNorm","markSizeFocus","strokeColor","updateWidthHistograms","markSizeHalf","fullHeightScale","fullHeightScaleInverted","incomingHeightScale","outgoingHeightScale","startX","endX","startY","endY","cY","wHalf","sizeHalf","mapFn","pointToFocused","vertexShader","fragmentShader","drawTriangles","uPointSize","uColorFocused","State","DRAW_MODES","TRIANGLES","POINTS","drawAxis","itemToIndicatorDiverging","itemToIndicatorStart","renderIndicatorDistanceAxis","itemToIndicatorEnd","startsWith","drawCircle","drawEllipse","trackWidth","trackHeight","cx","cy","polyStr","limitX1","limitX2","startAngle","acos","endAngle","flip","PI","angleScale","resolution","rx","cos","ry","sin","polys","visibleAndFetchedTiles","drawTile","g","createSnpTrack","d3Array","scaleBand","SnpTrack","colorEncodingRange","minVisibleValueInTiles","maxVisibleValueInTiles","makeValueScale","calculateMedianVisibleValue","xStartPos","xEndPos","rectY","doubleRadius","drawnPoly","anchorRadius","radius","rectGraphics","finalDotYPos","rows","initialize","paddingInner","circleDraws","circleFocusDraws","td","geneInfo","chrOffset","yMiddle","step","drawnRects","circleDraw","drawPoly","interactive","buttonMode","mouseup","hoveringSnp","publish","relTilePos","minDist","dist","itemY","MAX_RADIUS","otherStr","substr","plusStrandRows","renderRows","circles","focusedCircles","c","axis","axisPositionVertical","gDrawnAxis","exportAxisLeftSVG","exportAxisRightSVG","BedLikeTrack","getHistMax","histMax","histogramMax","segmentToPosition","segment","segmentToColorIdx","colorIdx","segmentToFocused","createStackedBarTrack","toRgbNorm","StackedBarTrack","updateTileFocusMap","histogram1d","histogram2d","histogram2dNumPred","Uint8Array","categoryBinHash","maxBinId","binStart","binEnd","histIdx","binHash","updateTileHistogram","focusMap","colorMap","colorMapRgbNorm","colorMapTex","colorMapTexRes","colorMapFocus","colorMapFocusRgbNorm","colorMapFocusTex","colorMapFocusTexRes","updateFocusMap","updateHistograms","brgs","oldNumBins","segments","cumHeight","histToSegments","colorIdxs","uColorMapTex","uColorMapTexRes","uColorMapFocus","uColorMapFocusTexRes","renderStackedBars","renderTrack","relPos","rowCumSum","rowNumPred","totalPred","sum","numPred","relYPos","findIndex","createTssTrack","TssTrack","createPubSub","xStartScreen","xEndScreen","register","isMetaTrack","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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AE/B,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GAAyB,CAEpC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GAA0B,CAErC,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGWC,GACX,8DAEWC,GACX,6DAEWC,GAAyB,CACpCC,cAAe,GACfC,wBAAwB,EACxBC,kBAAkB,EAClBC,OAAQ,CACN,CACEzF,MAAO,yBACP0F,WAAY,CACV,wBACA,qBACA,2DACA,0DACA,4DACA,gBACA,sBACA,0DACA,sBACA,+BACA,2DACA,gCACA,qBACA,+EACA,4DACA,wBACA,uCACA,iFACA,0DACA,qBACA,OACA,iCACA,iFACA,gBACA,4DACA,4DACA,2DACA,2DACA,sBACA,qBACA,iFACA,0DACA,oFACA,uBACA,iFACA,sBACA,kCACA,wBAGJ,CACE1F,MAAO,UACP0F,WAAY,CACV,oBACA,gBACA,uCACA,gBACA,iBACA,kBACA,eACA,+BACA,0CAGJ,CACE1F,MAAO,UACP0F,WAAY,CACV,mCACA,kBACA,8BACA,oCACA,4CACA,uBACA,wCACA,kBAGJ,CACE1F,MAAO,6BACP0F,WAAY,CACV,gBACA,eACA,6CACA,0BACA,kCACA,gDACA,iCACA,kBAGJ,CACE1F,MAAO,cACP0F,WAAY,CACV,8BACA,+BACA,2BACA,mBACA,+BAGJ,CACE1F,MAAO,aACP0F,WAAY,CACV,gCACA,qCACA,gBACA,eACA,6BACA,KACA,uBACA,gBACA,mBACA,kCACA,kBACA,OACA,4DACA,cACA,kBACA,uBACA,OACA,aACA,iCACA,gCACA,eACA,uBACA,qCACA,0BACA,qDACA,gBACA,0BACA,wBACA,aACA,0BACA,qDACA,2BACA,uCACA,QACA,4CACA,gBACA,uBACA,mCACA,kCACA,gDACA,iBACA,kCAGJ,CACE1F,MAAO,QACP0F,WAAY,CACV,wBACA,kBACA,oBACA,yBACA,2BACA,yBACA,gBACA,8BACA,gCACA,yBACA,mBACA,eACA,cACA,yBACA,6BACA,oBACA,wDACA,6CACA,QAC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","file":"static/js/main.d7587a21.chunk.js","sourcesContent":["import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#bbb',\n    backgroundColor: '#fff',\n  },\n}));\n\nconst AppInitializing = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"full-wh\">\n      <Backdrop className={classes.backdrop} open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n\nexport default AppInitializing;\n","import React from 'react';\nimport './AppError.css';\n\nconst AppInitializing = () => (\n  <div className=\"full-wh app-error\">\n    <span>Failed to initialize!</span>\n  </div>\n);\n\nexport default AppInitializing;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    height: '100%',\n    padding: '0.1em',\n    alignItems: 'center',\n    fontSize: '1em',\n    lineHeight: '1em',\n    fontWeight: 'bold',\n  },\n  logoAbc: {\n    fontSize: '2.75em',\n    letterSpacing: '-0.1rem',\n    paddingRight: '0.1em',\n  },\n  logoEnhancer: {\n    alignItems: 'flex-start',\n  },\n}));\n\nconst Logo = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container className={classes.logo} style={props.styles}>\n      <Grid item className={classes.logoAbc}>\n        ABC\n      </Grid>\n      <Grid item>\n        <Grid container direction=\"column\" className={classes.logoEnhancer}>\n          <Grid item>Enhancer-Gene</Grid>\n          <Grid item>Connections</Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nLogo.defaultProps = {\n  styles: {},\n};\n\nLogo.propTypes = {\n  styles: PropTypes.object,\n};\n\nexport default Logo;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Chip from '@material-ui/core/Chip';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { identity } from '@flekschas/utils';\n\nimport useDebounce from './use-debounce';\n\nconst useStyles = makeStyles((theme) => ({\n  inputRoot: {\n    background: 'white !important',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    '&::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 0)',\n      transition: 'boxShadow 0.2s ease',\n    },\n    '&:hover::before': {\n      borderBottomWidth: 0,\n      boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n    },\n  },\n  focused: {\n    boxShadow: '0 1px 0 0 rgba(0, 0, 0, 1)',\n  },\n  input: {\n    height: 35,\n    padding: '6px 0 6px',\n  },\n  textFieldRoot: {\n    '& .MuiFormLabel-root': {\n      color: 'black',\n      fontWeight: 'bold',\n      transform: 'translate(12px, 21px) scale(1.25)',\n    },\n    '& .MuiInputLabel-shrink': {\n      fontWeight: 'normal',\n    },\n  },\n}));\n\nconst fetchJsonFromUrl = async (url, query) => {\n  if (typeof url === 'string') {\n    const response = await fetch(`${url}&ac=${query || ''}`);\n    return response.json();\n  }\n  const response = await fetch(`${url.url}&ac=${query || ''}`);\n  const results = await response.json();\n  return results.map((result) => {\n    result.type = url.type;\n    return result;\n  });\n};\n\nfunction GeneIcon(props) {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <path d=\"M5.03 14.378A7.33 7.33 0 003.423 16h2.42a7.762 7.762 0 011.281-.774 13.241 13.241 0 01-1.863-1.016c-.078.054-.156.11-.233.168zM5.766 0l.219.174a8.754 8.754 0 001.636.92l.024.008c.797.24 1.507.627 2.023.933.325.18.674.4 1.024.66 1.825 1.363 2.79 3.22 2.79 5.367 0 2.062-.962 3.89-2.782 5.286-.061.048-.125.094-.186.139a10.45 10.45 0 00-1.895-.955 8.17 8.17 0 001.69-1.162h-3.92a6.191 6.191 0 01-1.199-1.15h6.093a4.054 4.054 0 00.603-1.747H3.839c.072.656.307 1.239.636 1.747h.011c.282.438.628.822.991 1.15H5.47l.74.584c.831.588 1.573.893 1.636.92a9.358 9.358 0 012.847 1.504A7.38 7.38 0 0112.3 16H9.879l-.759-.5a7.876 7.876 0 00-1.256-.594 11.833 11.833 0 01-2.07-1.04l.017-.009c-1.567-.999-3.571-2.851-3.571-5.794 0-2.149.964-4.005 2.79-5.367.076-.058.154-.113.231-.167.495.32 1.143.698 1.863 1.015a7.677 7.677 0 00-1.296.786c-.043.032-.083.066-.125.098h3.318c.535.336.999.727 1.364 1.149H4.598a4.215 4.215 0 00-.721 1.748h7.97l-.038-.195a3.527 3.527 0 00-.306-.904 4.417 4.417 0 00-.378-.65l-.01-.007a5.793 5.793 0 00-1.081-1.13l-.14-.109a7.236 7.236 0 00-.722-.48l-.031-.02a7.942 7.942 0 00-1.276-.607 10.278 10.278 0 01-1.257-.57C5.728 2.218 4.31 1.364 3.281 0h2.486zm6.267 0a7.808 7.808 0 01-1.743 1.707A10.443 10.443 0 008.396.752 8.592 8.592 0 009.592 0h2.442z\" />\n    </SvgIcon>\n  );\n}\n\nfunction GeneOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <GeneIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction VariantOption(props) {\n  return (\n    <Grid\n      key={props.option.geneName}\n      container\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <FlashOnIcon fontSize=\"small\" />\n      <span>{props.option.geneName}</span>\n    </Grid>\n  );\n}\n\nfunction Option(props) {\n  if (props.option.type === 'gene') return <GeneOption option={props.option} />;\n  if (props.option.type === 'variant')\n    return <VariantOption option={props.option} />;\n  return <div>{props.option.geneName}</div>;\n}\n\nexport default function SearchField(props) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(props.inputValue);\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n  const loading = open && options.length === 0;\n  const classes = useStyles();\n  const autocompleteClasses = { ...classes };\n  delete autocompleteClasses.textFieldRoot;\n\n  useEffect(() => {\n    let active = true;\n\n    if (!open) return undefined;\n\n    setOptions([]);\n\n    const results = Array.isArray(props.searchUrl)\n      ? props.searchUrl.map((url) =>\n          fetchJsonFromUrl(url, debouncedSearchQuery)\n        )\n      : fetchJsonFromUrl(props.searchUrl, debouncedSearchQuery);\n\n    Promise.all(results).then((resultList) => {\n      if (active) setOptions(resultList.flat());\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [props.searchUrl, open, debouncedSearchQuery]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  const value =\n    props.multiple && !Array.isArray(props.value) ? [props.value] : props.value;\n\n  let autocompleteOptions = value && options.length === 0 ? value : options;\n  autocompleteOptions = Array.isArray(autocompleteOptions)\n    ? autocompleteOptions\n    : [autocompleteOptions];\n\n  return (\n    <Autocomplete\n      classes={props.larger ? autocompleteClasses : {}}\n      multiple={props.multiple}\n      onChange={(event, newValue) => {\n        props.onChange(newValue);\n      }}\n      value={value}\n      onInputChange={(event, newInputValue) => {\n        if (event) setSearchQuery(newInputValue);\n      }}\n      fullWidth={props.fullWidth}\n      style={{ width: props.fullWidth ? 'auto' : props.width }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      getOptionSelected={(option, _value) =>\n        option.geneName === _value.geneName\n      }\n      getOptionLabel={(option) => (option ? option.geneName : '')}\n      options={autocompleteOptions}\n      loading={loading}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          className={props.larger ? classes.textFieldRoot : ''}\n          id={props.id}\n          label={props.label}\n          variant={props.variant}\n          size={props.size}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <React.Fragment>\n                {loading ? (\n                  <CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </React.Fragment>\n            ),\n          }}\n        />\n      )}\n      renderOption={(option) => <Option option={option} />}\n      renderTags={(v, getTagProps) =>\n        v.map((option, index) => (\n          <Chip\n            icon={option.type === 'gene' ? <GeneIcon /> : <FlashOnIcon />}\n            key={option.geneName}\n            label={option.geneName}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n    />\n  );\n}\n\nSearchField.defaultProps = {\n  fullWidth: true,\n  id: '',\n  label: '',\n  multiple: false,\n  onChange: identity,\n  size: 'small',\n  value: null,\n  variant: 'outlined',\n  width: '10rem',\n};\n\nSearchField.propTypes = {\n  fullWidth: PropTypes.bool,\n  id: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  searchUrl: PropTypes.oneOfType([\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([\n        PropTypes.shape({\n          url: PropTypes.string,\n          type: PropTypes.string,\n        }),\n        PropTypes.string,\n      ])\n    ),\n    PropTypes.string,\n  ]).isRequired,\n  size: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  variant: PropTypes.string,\n  width: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\n\nexport default function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n","import { identity } from '@flekschas/utils';\nimport queryString from 'query-string';\n\nexport const contains = (a, b) => a[0] <= b[0] && a[1] >= b[1];\n\nexport const createColorTexture = (PIXI, colors) => {\n  const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n  const rgba = new Float32Array(colorTexRes ** 2 * 4);\n  colors.forEach((color, i) => {\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4] = color[0]; // r\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 1] = color[1]; // g\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 2] = color[2]; // b\n    // eslint-disable-next-line prefer-destructuring\n    rgba[i * 4 + 3] = color[3]; // a\n  });\n\n  return [PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes), colorTexRes];\n};\n\nexport const dashedXLineTo = (graphics, xStart, xEnd, y, dashSize) => {\n  const diff = xEnd - xStart;\n  const direction = Math.sign(diff);\n  const width = Math.abs(diff);\n  const stepSize = dashSize * 2;\n  const numSteps = Math.ceil(width / stepSize);\n  for (let i = 0; i < numSteps; i++) {\n    graphics.moveTo(xStart + i * stepSize * direction, y);\n    graphics.lineTo(xStart + (i * stepSize + dashSize) * direction, y);\n  }\n};\n\nexport const download = (filename, stringOrBlob) => {\n  const blob =\n    typeof stringOrBlob === 'string'\n      ? new Blob([stringOrBlob], { type: 'application/octet-stream' })\n      : stringOrBlob;\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    const elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n    URL.revokeObjectURL(elem.href);\n  }\n};\n\nexport const getQueryStringValue = (key, decoder = identity) =>\n  decoder(queryString.parse(window.location.search)[key]);\n\nexport const setQueryStringValue = (key, value, encoder = identity) => {\n  const values = queryString.parse(window.location.search);\n  const newQsValue = queryString.stringify(\n    {\n      ...values,\n      [key]: encoder(value),\n    },\n    { strict: false }\n  );\n  const url = `${window.location.origin}${window.location.pathname}?${newQsValue}`;\n  window.history.pushState({ path: url }, '', url);\n};\n\nexport const toAbsPosition = (position, chromInfo) => {\n  let absPosition;\n  if (position.indexOf && position.indexOf(':') >= 0) {\n    const [chrom, pos] = position.split(':');\n    absPosition = chromInfo.chrPositions[chrom].pos + +pos;\n  } else {\n    absPosition = +position;\n  }\n  return absPosition;\n};\n\nexport const toFixed = (number, decimals, forced) => {\n  let string = number.toFixed(decimals);\n  if (!forced) {\n    while (string[string.length - 1] === '0') {\n      string = string.substring(0, string.length - 1);\n    }\n    if (string[string.length - 1] === '.') {\n      string = string.substring(0, string.length - 1);\n    }\n  }\n  return string;\n};\n","import { useState, useCallback } from 'react';\nimport { getQueryStringValue, setQueryStringValue } from './utils';\n\nfunction useQueryString(key, initialValue, { encoder, decoder } = {}) {\n  const [value, setValue] = useState(\n    getQueryStringValue(key, decoder) === undefined\n      ? initialValue\n      : getQueryStringValue(key, decoder)\n  );\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryStringValue(key, newValue, encoder);\n    },\n    [key, encoder]\n  );\n\n  // Set initial value\n  setQueryStringValue(key, value, encoder);\n\n  return [value, onSetValue];\n}\n\nexport default useQueryString;\n","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","export const DEFAULT_COLOR_MAP = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nexport const DEFAULT_COLOR_MAP_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nexport const DEFAULT_COLOR_MAP_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nexport const GENE_SEARCH_URL =\n  'https://higlass.io/api/v1/suggest/?d=OHJakQICQD6gTD7skx4EWA';\n\nexport const VARIANT_SEARCH_URL =\n  'https://resgen.io/api/v1/suggest/?d=VF5-RDXWTxidGMJU7FeaxA';\n\nexport const DEFAULT_STRATIFICATION = {\n  categoryField: 10,\n  axisShowGroupSeparator: true,\n  axisNoGroupColor: false,\n  groups: [\n    {\n      label: 'Mononuclear Phagocytes',\n      categories: [\n        'THP1_LPS_4hr-Engreitz',\n        'THP_pmaLPS_ATAC_6h',\n        'CD14-positive_monocyte_treated_with_LPS_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_BG_1h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_d6-Novakovic2016',\n        'THP1-Engreitz',\n        'THP_pmaLPS_ATAC_96h',\n        'CD14-positive_monocyte_treated_with_BG_d1-Novakovic2016',\n        'THP_pmaLPS_ATAC_72h',\n        'THP-1_monocyte-VanBortle2017',\n        'CD14-positive_monocyte_treated_with_LPS_d1-Novakovic2016',\n        'CD14-positive_monocyte-ENCODE',\n        'THP_pmaLPS_ATAC_2h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_0_ng-mL_for_0_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_RPMI_1h-Novakovic2016',\n        'U937_LPS_4hr-Engreitz',\n        'CD14-positive_monocyte-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_6_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_4h-Novakovic2016',\n        'THP_pmaLPS_ATAC_0h',\n        'HAP1',\n        'THP-1_macrophage-VanBortle2017',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_1_hour-Garber2017',\n        'U937-Engreitz',\n        'CD14-positive_monocyte_treated_with_RPMI_d1-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_RPMI_4h-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_d6-Novakovic2016',\n        'CD14-positive_monocyte_treated_with_LPS_1h-Novakovic2016',\n        'THP_pmaLPS_ATAC_24h',\n        'THP_pmaLPS_ATAC_1h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_2_hour-Garber2017',\n        'CD14-positive_monocyte_treated_with_BG_d6-Novakovic2016',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_30_minute-Garber2017',\n        'THP_pmaLPS_ATAC_120h',\n        'dendritic_cell_treated_with_Lipopolysaccharide_100_ng-mL_for_4_hour-Garber2017',\n        'THP_pmaLPS_ATAC_48h',\n        'CD14-positive_monocytes-Roadmap',\n        'THP_pmaLPS_ATAC_12h', // monoctye\n      ],\n    },\n    {\n      label: 'B Cells',\n      categories: [\n        'Karpas-422-ENCODE', // b-cell cell line\n        'BJAB-Engreitz',\n        'BJAB_anti-IgM_anti-CD40_4hr-Engreitz',\n        'B_cell-ENCODE',\n        'OCI-LY7-ENCODE',\n        'GM12878-Roadmap',\n        'MM.1S-ENCODE',\n        'CD19-positive_B_cell-Roadmap',\n        'CD8-positive_alpha-beta_T_cell-ENCODE',\n      ],\n    },\n    {\n      label: 'T Cells',\n      categories: [\n        'Jurkat_anti-CD3_PMA_4hr-Engreitz', // t-cell\n        'Jurkat-Engreitz',\n        'CD3-positive_T_cell-Roadmap',\n        'CD4-positive_helper_T_cell-ENCODE',\n        'CD8-positive_alpha-beta_T_cell-Corces2016',\n        'thymus_fetal-Roadmap',\n        'CD4-positive_helper_T_cell-Corces2016',\n        'T-cell-ENCODE',\n      ],\n    },\n    {\n      label: 'Other haematopoietic cells',\n      categories: [\n        'spleen-ENCODE',\n        'K562-Roadmap',\n        'CD56-positive_natural_killer_cells-Roadmap',\n        'erythroblast-Corces2016',\n        'CD34-positive_mobilized-Roadmap',\n        'megakaryocyte-erythroid_progenitor-Corces2016',\n        'natural_killer_cell-Corces2016',\n        'IMR90-Roadmap',\n      ],\n    },\n    {\n      label: 'Fibroblasts',\n      categories: [\n        'foreskin_fibroblast-Roadmap',\n        'fibroblast_of_dermis-Roadmap',\n        'fibroblast_of_arm-ENCODE',\n        'astrocyte-ENCODE',\n        'fibroblast_of_lung-Roadmap',\n      ],\n    },\n    {\n      label: 'Epithelial',\n      categories: [\n        'small_intestine_fetal-Roadmap',\n        'epithelial_cell_of_prostate-ENCODE',\n        'HCT116-ENCODE',\n        'MCF-7-ENCODE',\n        'adrenal_gland_fetal-ENCODE',\n        'H7',\n        'keratinocyte-Roadmap',\n        'MCF10A-Ji2017',\n        'pancreas-Roadmap',\n        'mammary_epithelial_cell-Roadmap',\n        'stomach-Roadmap',\n        'LoVo',\n        'A549_treated_with_ethanol_0.02_percent_for_1_hour-Roadmap',\n        'PC-9-ENCODE',\n        'H1-hESC-Roadmap',\n        'thyroid_gland-ENCODE',\n        'HT29',\n        'MDA-MB-231',\n        'iPS_DF_19.11_Cell_Line-Roadmap',\n        'large_intestine_fetal-Roadmap',\n        'Panc1-ENCODE',\n        'adrenal_gland-ENCODE',\n        'MCF10A_treated_with_TAM24hr-Ji2017',\n        'trophoblast_cell-ENCODE',\n        'H1_BMP4_Derived_Trophoblast_Cultured_Cells-Roadmap',\n        'uterus-ENCODE',\n        'body_of_pancreas-ENCODE',\n        'stomach_fetal-Roadmap',\n        'H9-Roadmap',\n        'transverse_colon-ENCODE',\n        'H1_BMP4_Derived_Mesendoderm_Cultured_Cells-Roadmap',\n        'breast_epithelium-ENCODE',\n        'induced_pluripotent_stem_cell-ENCODE',\n        'LNCAP',\n        'H1_Derived_Mesenchymal_Stem_Cells-Roadmap',\n        'ovary-Roadmap',\n        'sigmoid_colon-ENCODE',\n        'skeletal_muscle_myoblast-Roadmap',\n        'bipolar_neuron_from_iPSC-ENCODE',\n        'coronary_artery_smooth_muscle_cell-Miller2016',\n        'SK-N-SH-ENCODE',\n        'muscle_of_trunk_fetal-Roadmap',\n      ],\n    },\n    {\n      label: 'Other',\n      categories: [\n        'adipose_tissue-ENCODE',\n        'HeLa-S3-Roadmap',\n        'hepatocyte-ENCODE',\n        'heart_ventricle-ENCODE',\n        'spinal_cord_fetal-ENCODE',\n        'coronary_artery-ENCODE',\n        'HepG2-Roadmap',\n        'muscle_of_leg_fetal-Roadmap',\n        'gastrocnemius_medialis-ENCODE',\n        'brite_adipose-Loft2014',\n        'placenta-Roadmap',\n        'liver-ENCODE',\n        'A673-ENCODE',\n        'white_adipose-Loft2014',\n        'cardiac_muscle_cell-ENCODE',\n        'osteoblast-ENCODE',\n        'H1_Derived_Neuronal_Progenitor_Cultured_Cells-Roadmap',\n        'endothelial_cell_of_umbilical_vein-Roadmap',\n        'NCCIT',\n        'myotube_originated_from_skeletal_muscle_myoblast-Roadmap',\n        'psoas_muscle-Roadmap',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_4_hours-zhang2013',\n        'endothelial_cell_of_umbilical_vein_vegf_stim_12_hours-zhang2013',\n      ],\n    },\n  ],\n};\n\nexport const DEFAULT_X_DOMAIN_START = 1761366260;\nexport const DEFAULT_X_DOMAIN_END = 1761603836;\n\nexport const DEFAULT_VIEW_CONFIG_ENHANCER = {\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'context',\n      genomePositionSearchBox: {\n        autocompleteServer: '//higlass.io/api/v1',\n        autocompleteId: 'OHJakQICQD6gTD7skx4EWA',\n        chromInfoServer: '//higlass.io/api/v1',\n        chromInfoId: 'hg19',\n        visible: true,\n      },\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            type: 'combined',\n            uid: 'chroms-viewport',\n            height: 12,\n            contents: [\n              {\n                type: 'horizontal-chromosome-labels',\n                options: {\n                  // tickPositions: 'ends',\n                  color: '#999999',\n                  stroke: 'white',\n                  fontSize: 10,\n                  fontIsLeftAligned: true,\n                  showMousePosition: false,\n                  mousePositionColor: '#000000',\n                },\n                tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n                height: 12,\n                server: 'https://resgen.io/api/v1',\n                uid: 'chroms',\n              },\n              {\n                uid: 'viewport-details-chroms',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 12,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'combined',\n            uid: 'genes-tss-viewport',\n            height: 50,\n            contents: [\n              {\n                type: 'horizontal-gene-annotations',\n                uid: 'genes',\n                height: 50,\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                type: 'tss',\n                uid: 'tss',\n                height: 50,\n                // server: 'http://localhost:9876/api/v1',\n                // tilesetUid: 'RefSeqCurated170308bedCollapsedGeneBoundsTSS500bp',\n                server: 'https://resgen.io/api/v1',\n                tilesetUid: 'VMZDLKrtQDmJMSjg7Ds4yA',\n                options: {\n                  fontSize: 9,\n                  plusStrandColor: 'black',\n                  minusStrandColor: 'black',\n                  geneAnnotationHeight: 12,\n                  geneLabelPosition: 'outside',\n                  geneStrandSpacing: 2,\n                },\n              },\n              {\n                uid: 'viewport-details-genes',\n                type: 'viewport-projection-horizontal',\n                fromViewUid: 'details',\n                height: 50,\n                options: {\n                  projectionFillColor: '#cc0078',\n                  projectionStrokeColor: '#cc0078',\n                  projectionFillOpacity: 0.3,\n                  projectionStrokeOpacity: 0.3,\n                  strokeWidth: 1,\n                },\n              },\n            ],\n          },\n          {\n            type: 'point-annotation',\n            uid: 'ibd-snps',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 36,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            type: 'stacked-bar',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 96,\n            uid: 'stacked-bars',\n            options: {\n              binSize: 4,\n              axisAlign: 'right',\n              axisPositionHorizontal: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 4,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              trackBorderWidth: 0,\n              trackBorderColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'By Celltype',\n              stratification: DEFAULT_STRATIFICATION,\n            },\n          },\n          {\n            type: 'stratified-bed',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'AllPredictionsAvgHiCABC0015minus150ForABCPaperV2hg19beddb',\n            server: 'https://resgen.io/api/v1',\n            // tilesetUid: 'P0Ng5fhvQWeO7dlpx0FknA', // all chroms\n            // tilesetUid: 'PGXLE50tQyOayNXKUnX4fQ', // just chr10\n            // tilesetUid: 'AaJojHeORzKyiag1pSlAag', // bed\n            tilesetUid: 'GOxTKzoLSsuw0BaG6eBrXw', // improved bed\n            height: 403,\n            uid: 'indicatorByCellTypes',\n            options: {\n              axisAlign: 'right',\n              labelPosition: 'hidden',\n              markColor: 'black',\n              markColorHighlight: '#bf0071',\n              markColorDehighlight: '#bbbbbb',\n              markSize: 4,\n              markMinWidth: 4,\n              markHeight: 3,\n              rowHeight: 3,\n              markOpacity: 0.33,\n              arcStyle: 'indicator',\n              indicatorStyle: 'category-rect',\n              labelColor: 'black',\n              geneField: 6,\n              importanceField: 7,\n              importanceDomain: [0, 1],\n              // focusRegion: [\n              //   1680373143 + 81046453 - 25,\n              //   1680373143 + 81046453 + 25,\n              // ],\n              name: 'By Celltype',\n              axisPositionHorizontal: 'right',\n              stratification: DEFAULT_STRATIFICATION,\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [[1680373143 + 81046453, 1680373143 + 81046454]],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n        {\n          uid: 'gene-focus',\n          includes: ['genes-tss-viewport'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.25,\n            stroke: '#cc0078',\n            strokeWidth: 0,\n            outlineWidth: 0,\n          },\n        },\n        {\n          uid: 'tss-overlays',\n          includes: [\n            'chroms',\n            'genes-tss-viewport',\n            'ibd-snps',\n            'stacked-bars',\n            'indicatorByCellTypes',\n          ],\n          options: {\n            extent: [],\n            minWidth: 1,\n            fill: 'black',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: 'black',\n            outlineOpacity: 0.1,\n            outlineWidth: 1,\n            outlinePos: ['left'],\n          },\n        },\n      ],\n      metaTracks: [\n        {\n          uid: 'tss-overlays-meta',\n          type: 'annotation-overlay',\n          overlaysTrack: 'tss-overlays',\n          options: {\n            annotationTracks: ['tss'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n      initialYDomain: [DEFAULT_X_DOMAIN_START, DEFAULT_X_DOMAIN_END],\n    },\n  ],\n};\n\nexport const DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY = {\n  zoomFixed: false,\n  editable: false,\n  trackSourceServers: ['//higlass.io/api/v1'],\n  views: [\n    {\n      uid: 'details',\n      chromInfoPath: '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv',\n      tracks: {\n        top: [\n          {\n            uid: 'chroms',\n            type: 'horizontal-chromosome-labels',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'ADfY_RtsQR6oKOMyrq6qhw',\n            height: 12,\n            options: {\n              // tickPositions: 'ends',\n              color: '#999999',\n              stroke: 'white',\n              fontSize: 10,\n              fontIsLeftAligned: true,\n              showMousePosition: false,\n              mousePositionColor: '#000000',\n            },\n          },\n          {\n            uid: 'genes',\n            type: 'horizontal-gene-annotations',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'NCifnbrKQu6j-ohVWJLoJw',\n            height: 48,\n            options: {\n              fontSize: 9,\n              plusStrandColor: 'black',\n              minusStrandColor: 'black',\n              geneAnnotationHeight: 12,\n              geneLabelPosition: 'outside',\n              geneStrandSpacing: 2,\n            },\n          },\n          {\n            uid: 'ibd-snps',\n            type: 'point-annotation',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'IBDCombinedset1-2variantonly-pval',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'VF5-RDXWTxidGMJU7FeaxA',\n            height: 132,\n            options: {\n              axisPositionHorizontal: 'right',\n              markColor: 'black',\n              markColorFocus: '#cc0078',\n              markSize: 2,\n              markOpacity: 0.33,\n              markOpacityFocus: 0.66,\n              // axisPositionHorizontal: 'right',\n              valueColumn: 7,\n              focusRegion: [\n                1680373143 + 81046453 - 25,\n                1680373143 + 81046453 + 25,\n              ],\n              name: 'IBD SNPs',\n              toolTip: {\n                name: {\n                  field: 3,\n                },\n                value: {\n                  field: 6,\n                  numDecimals: 2,\n                },\n                other: [\n                  {\n                    label: 'Post. Prob.',\n                    field: 7,\n                    numDecimals: 2,\n                  },\n                ],\n              },\n            },\n          },\n          {\n            uid: 'dna-accessibility',\n            type: 'ridge-plot',\n            // server: 'http://localhost:9876/api/v1',\n            // tilesetUid: 'test',\n            server: 'https://resgen.io/api/v1',\n            tilesetUid: 'Uz1_tEABQf-uzktblvBKSQ',\n            // height: 403,\n            height: 131 * (24 - 6) + 6,\n            options: {\n              name: 'DNA Accessibility',\n              labelPosition: 'outerBottom',\n              labelShowResolution: false,\n              labelShowAssembly: false,\n              markArea: true,\n              markColor: '#444444',\n              markResolution: 256,\n              valueScaling: 'exponential',\n              colorRange: ['#ffffff', '#000000'],\n              rowHeight: 24,\n              rowPadding: -6,\n              rowNormalization: true,\n              rowSelections: [\n                120,\n                36,\n                54,\n                20,\n                80,\n                35,\n                101,\n                49,\n                44,\n                23,\n                30,\n                66,\n                5,\n                26,\n                15,\n                105,\n                57,\n                56,\n                74,\n                84,\n                79,\n                93,\n                106,\n                107,\n                34,\n                28,\n                25,\n                55,\n                121,\n                94,\n                58,\n                69,\n                67,\n                63,\n                126,\n                71,\n                72,\n                47,\n                11,\n                46,\n                39,\n                113,\n                29,\n                60,\n                45,\n                76,\n                21,\n                103,\n                129,\n                13,\n                128,\n                90,\n                104,\n                32,\n                109,\n                27,\n                9,\n                130,\n                95,\n                86,\n                53,\n                73,\n                50,\n                48,\n                78,\n                14,\n                92,\n                124,\n                31,\n                114,\n                64,\n                88,\n                12,\n                10,\n                38,\n                68,\n                3,\n                111,\n                70,\n                22,\n                61,\n                98,\n                6,\n                123,\n                118,\n                43,\n                37,\n                65,\n                81,\n                62,\n                33,\n                1,\n                24,\n                122,\n                83,\n                75,\n                112,\n                40,\n                97,\n                16,\n                117,\n                87,\n                19,\n                125,\n                7,\n                102,\n                116,\n                77,\n                8,\n                17,\n                82,\n                115,\n                89,\n                119,\n                18,\n                4,\n                108,\n                59,\n                127,\n                91,\n                0,\n                100,\n                85,\n                110,\n                99,\n                2,\n                96,\n                51,\n                41,\n                52,\n                42,\n              ],\n              rowIdToCategory: {\n                fn: 'replace',\n                args: ['.accessibility', ''],\n              },\n              rowCategories: DEFAULT_STRATIFICATION.groups.reduce(\n                (row, group, index) => {\n                  const category = {\n                    label: group.label,\n                    color: group.axisLabelColor,\n                    background: group.axisLabelBackground,\n                    index,\n                  };\n                  group.categories.forEach((sample) => {\n                    row[sample] = category;\n                  });\n                  return row;\n                },\n                {}\n              ),\n              showRowLabels: true,\n              rowLabelSize: 10,\n              showMousePosition: true,\n              mousePositionColor: '#cccccc',\n            },\n          },\n        ],\n      },\n      overlays: [\n        {\n          uid: 'region-focus',\n          includes: ['chroms', 'genes', 'ibd-snps', 'dna-accessibility'],\n          options: {\n            extent: [],\n            minWidth: 3,\n            fill: '#cc0078',\n            fillOpacity: 0.05,\n            strokeWidth: 0,\n            outline: '#cc0078',\n            outlineOpacity: 0.33,\n            outlineWidth: 1,\n            outlinePos: ['left', 'right'],\n          },\n        },\n      ],\n      layout: {\n        w: 12,\n        h: 12,\n        x: 0,\n        y: 0,\n      },\n      initialXDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n      initialYDomain: [\n        1680373143 + 81046453 - 500,\n        1680373143 + 81046454 + 500,\n      ],\n    },\n  ],\n};\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { HiGlassComponent } from 'higlass';\nimport { debounce, deepClone, isString, pipe } from '@flekschas/utils';\nimport AppBar from '@material-ui/core/AppBar';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Fade from '@material-ui/core/Fade';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Modal from '@material-ui/core/Modal';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HelpIcon from '@material-ui/icons/Help';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport Logo from './Logo';\nimport SearchField from './SearchField';\n\nimport useQueryString from './use-query-string';\nimport usePrevious from './use-previous';\nimport { download, toAbsPosition, toFixed } from './utils';\nimport {\n  DEFAULT_X_DOMAIN_START,\n  DEFAULT_X_DOMAIN_END,\n  DEFAULT_VIEW_CONFIG_ENHANCER,\n  DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY,\n  GENE_SEARCH_URL,\n  VARIANT_SEARCH_URL,\n} from './constants';\n\nimport 'higlass/dist/hglib.css';\nimport './Viewer.css';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  black: {\n    color: 'black',\n  },\n  gray: {\n    color: theme.palette.grey['400'],\n  },\n  pink: {\n    color: '#cc0078',\n  },\n  root: {\n    position: 'absolute',\n    display: 'flex',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n  },\n  h1: {\n    height: '100%',\n    margin: '0',\n    padding: '0',\n    fontSize: '1rem',\n    lineHeight: '1rem',\n    fontWeight: 'bold',\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '4rem',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '0.25rem',\n    boxShadow: theme.shadows[4],\n    maxWidth: '60rem',\n    padding: theme.spacing(2, 4),\n    outline: 0,\n    '&>h2': {\n      display: 'flex',\n      justifyContent: 'center',\n      margin: theme.spacing(2, 0, 3),\n    },\n    '&>p': {\n      fontSize: '1.125em',\n    },\n  },\n  startExploring: {\n    color: 'white',\n    background: '#cc0078 linear-gradient(45deg, #cc0078 30%, #cc0066 90%)',\n    boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .3)',\n    '&:hover': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n    },\n    '&:focus': {\n      boxShadow: '0 1px 6px 1px rgba(255, 76, 151, .5)',\n    },\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    color: theme.palette.common.black,\n    backgroundColor: theme.palette.common.white,\n    boxShadow: `0 1px 0 0 ${theme.palette.grey['300']}`,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerGrid: {\n    height: '100%',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  settings: {\n    position: 'relative',\n    flexGrow: 1,\n  },\n  settingsContent: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden auto',\n  },\n  textInput: {\n    minWidth: '100%',\n  },\n  toolbar: theme.mixins.toolbar,\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    backgroundColor: 'white',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  higlass: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  higlassEnhancer: {\n    flexGrow: 1,\n    margin: '-8px 0 -8px -8px',\n  },\n  higlassDnaAccessibility: {\n    width: '20rem',\n    margin: '-8px -8px -8px 0',\n  },\n  higlassTitleBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'relative',\n    padding: '2px',\n    fontSize: '0.8rem',\n    background: theme.palette.grey['100'],\n  },\n  higlassTitleBarTitle: {\n    padding: '0 2px',\n    fontSize: '0.8rem',\n  },\n  higlassTitleBarHelp: {\n    color: theme.palette.grey['400'],\n    '&:hover': {\n      color: 'black',\n    },\n  },\n  higlassTitleBarHelpPopeover: {\n    maxWidth: '20rem',\n    padding: '0.5rem',\n    fontSize: '0.8rem',\n  },\n  higlassEnhancerInfoBar: {\n    padding: '2px 4px',\n    color: theme.palette.grey['600'],\n  },\n  higlassDnaAccessibilityInfoBar: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '2px 4px',\n    color: theme.palette.grey['600'],\n  },\n  higlassSeparator: {\n    width: 1,\n    margin: '-8px 0',\n    background: theme.palette.grey['300'],\n  },\n  toolbarExtra: {\n    paddingLeft: 0,\n    paddingRight: 0,\n    alignItems: 'flex-end',\n  },\n}));\n\nconst chrPosUrlEncoder = (chrPos) =>\n  chrPos ? chrPos.replace(':', '.') : chrPos;\n\nconst chrPosUrlDecoder = (chrPos) =>\n  chrPos ? chrPos.replace('.', ':') : chrPos;\n\nconst getFocusGeneRegion = (viewConfig) => {\n  return viewConfig.views[0].overlays[1] &&\n    viewConfig.views[0].overlays[1].options.extent &&\n    viewConfig.views[0].overlays[1].options.extent.length\n    ? [...viewConfig.views[0].overlays[1].options.extent[0]]\n    : null;\n};\n\nconst getFocusVariantRegion = (viewConfig) =>\n  viewConfig.views[0].tracks.top[2].options.focusRegion\n    ? [...viewConfig.views[0].tracks.top[2].options.focusRegion]\n    : null;\n\nconst updateViewConfigXDomain = (newXDomainStart, newXDomainEnd, force) => (\n  viewConfig\n) => {\n  const xDomain = [...viewConfig.views[0].initialXDomain];\n  const focusGeneRegion = getFocusGeneRegion(viewConfig);\n  const focusVariantRegion = getFocusVariantRegion(viewConfig);\n\n  if (!Number.isNaN(+newXDomainStart)) {\n    xDomain[0] = newXDomainStart;\n  }\n  if (!Number.isNaN(+newXDomainEnd)) {\n    xDomain[1] = newXDomainEnd;\n  }\n\n  if (focusGeneRegion && !force) {\n    xDomain[0] = focusGeneRegion[0] - 100000;\n    xDomain[1] = focusGeneRegion[1] + 100000;\n  }\n\n  if (focusVariantRegion && !force) {\n    xDomain[0] = Math.min(xDomain[0], focusVariantRegion[0] - 100000);\n    xDomain[1] = Math.max(xDomain[1], focusVariantRegion[1] + 100000);\n  }\n\n  viewConfig.views[0].initialXDomain = xDomain;\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusGene = (gene, start, end) => (viewConfig) => {\n  const n = viewConfig.views[0].tracks.top.length;\n\n  if (gene) {\n    viewConfig.views[0].tracks.top[n - 1].options.focusGene = gene;\n    viewConfig.views[0].overlays[1].options.extent = [[start, end]];\n  } else {\n    delete viewConfig.views[0].tracks.top[n - 1].options.focusGene;\n    delete viewConfig.views[0].overlays[1].options.extent;\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusVariant = (position, trackIdxs = []) => (\n  viewConfig\n) => {\n  if (Number.isNaN(+position) || position === null) {\n    trackIdxs.forEach((trackIdx) => {\n      delete viewConfig.views[0].tracks.top[trackIdx].options.focusRegion;\n    });\n    viewConfig.views[0].overlays[0].options.extent = [];\n  } else {\n    const focusRegion = [position - 0.5, position + 0.5];\n    trackIdxs.forEach((trackIdx) => {\n      viewConfig.views[0].tracks.top[\n        trackIdx\n      ].options.focusRegion = focusRegion;\n    });\n\n    viewConfig.views[0].overlays[0].options.extent = [focusRegion];\n  }\n\n  return viewConfig;\n};\n\nconst updateViewConfigFocusStyle = (hideUnfocused) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.focusStyle =\n    hideUnfocused === 'true' ? 'filtering' : 'highlighting';\n  viewConfig.views[0].tracks.top[4].options.stratification.axisNoGroupColor =\n    hideUnfocused !== 'true';\n\n  return viewConfig;\n};\n\nconst updateViewConfigVariantYScale = (yScale) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[2].options.valueColumn =\n    yScale === 'pValue' ? 7 : 8;\n\n  return viewConfig;\n};\n\nconst updateViewConfigMatrixColoring = (coloring) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[4].options.opacityEncoding = coloring;\n  return viewConfig;\n};\n\nconst updateViewConfigDnaAccessLabels = (labels) => (viewConfig) => {\n  viewConfig.views[0].tracks.top[3].options.showRowLabels =\n    !labels || labels === 'hidden' ? false : labels;\n  return viewConfig;\n};\n\nconst Viewer = (props) => {\n  const [infoOpen, setInfoOpen] = useQueryString('info', true, {\n    decoder: (v) => v === 'true',\n  });\n  const [focusGene, setFocusGene] = useQueryString('gene', '');\n  const [focusVariant, setFocusVariant] = useQueryString(\n    'variant',\n    'rs1250566'\n  );\n  const [hideUnfocused, setHideUnfocused] = useQueryString('hide-unfocused');\n  const [matrixColoring, setMatrixColoring] = useQueryString(\n    'matrix-coloring',\n    'solid'\n  );\n  const [variantYScale, setVariantYScale] = useQueryString(\n    'varient-scale',\n    'pValue'\n  );\n  const [dnaAccessLabels, setDnaAccessLabels] = useQueryString(\n    'access-labels',\n    'indicator'\n  );\n  const [xDomainStart, setXDomainStart] = useQueryString(\n    'start',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_START).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n  const [xDomainEnd, setXDomainEnd] = useQueryString(\n    'end',\n    props.chromInfo.absToChr(DEFAULT_X_DOMAIN_END).slice(0, 2).join(':'),\n    {\n      encoder: chrPosUrlEncoder,\n      decoder: chrPosUrlDecoder,\n    }\n  );\n\n  const [focusGeneOption, setFocusGeneOption] = useState(null);\n  const [focusVariantOption, setFocusVariantOption] = useState(null);\n  const prevFocusGeneOption = usePrevious(focusGeneOption);\n  const prevFocusVariantOption = usePrevious(focusVariantOption);\n  const higlassEnhancerApi = useRef(null);\n  const higlassDnaAccessApi = useRef(null);\n  const [\n    higlassEnhancerHelpAnchorEl,\n    setHiglassEnhancerHelpAnchorEl,\n  ] = useState(null);\n  const [\n    higlassDnaAccessHelpAnchorEl,\n    setHiglassDnaAccessHelpAnchorEl,\n  ] = useState(null);\n\n  // Derived State\n  const focusGeneVariantOptions = useMemo(\n    () => {\n      const _focusGeneVariant = [];\n      // Add the focus element that has not changed first!\n      if (focusGeneOption && focusGeneOption === prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption === prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      // Now add the focused element that has changed!\n      if (focusGeneOption && focusGeneOption !== prevFocusGeneOption)\n        _focusGeneVariant.push(focusGeneOption);\n      if (focusVariantOption && focusVariantOption !== prevFocusVariantOption)\n        _focusGeneVariant.push(focusVariantOption);\n      return _focusGeneVariant;\n    },\n    // `prevFocusGeneOption` and `prevFocusVariantOption` are ommitted\n    // on purpose to avoid circular updates.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [focusGeneOption, focusVariantOption]\n  );\n\n  const focusGeneStartPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusGeneEndPosition = useMemo(\n    () =>\n      focusGeneOption\n        ? toAbsPosition(\n            `${focusGeneOption.chr}:${focusGeneOption.txEnd}`,\n            props.chromInfo\n          )\n        : null,\n    [focusGeneOption, props.chromInfo]\n  );\n\n  const focusVariantPosition = useMemo(\n    () =>\n      focusVariantOption\n        ? toAbsPosition(\n            `${focusVariantOption.chr}:${focusVariantOption.txStart}`,\n            props.chromInfo\n          )\n        : null,\n    [focusVariantOption, props.chromInfo]\n  );\n\n  const xDomainStartAbs = useMemo(\n    () => toAbsPosition(xDomainStart, props.chromInfo),\n    [xDomainStart, props.chromInfo]\n  );\n\n  const xDomainEndAbs = useMemo(\n    () => toAbsPosition(xDomainEnd, props.chromInfo),\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const viewConfigEnhancer = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusGene(\n          focusGeneOption ? focusGeneOption.geneName : null,\n          focusGeneStartPosition,\n          focusGeneEndPosition\n        ),\n        updateViewConfigFocusVariant(focusVariantPosition, [2, 4]),\n        updateViewConfigFocusStyle(hideUnfocused),\n        updateViewConfigMatrixColoring(matrixColoring),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigXDomain(xDomainStartAbs, xDomainEndAbs)\n      )(deepClone(DEFAULT_VIEW_CONFIG_ENHANCER)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusGeneOption,\n      focusGeneStartPosition,\n      focusGeneEndPosition,\n      focusVariantPosition,\n      hideUnfocused,\n      matrixColoring,\n      variantYScale,\n    ]\n  );\n\n  const viewConfigDnaAccessibility = useMemo(\n    () =>\n      pipe(\n        updateViewConfigFocusVariant(focusVariantPosition, [2]),\n        updateViewConfigVariantYScale(variantYScale),\n        updateViewConfigDnaAccessLabels(dnaAccessLabels),\n        updateViewConfigXDomain(\n          focusVariantPosition ? focusVariantPosition - 2500 : xDomainStartAbs,\n          focusVariantPosition ? focusVariantPosition + 2500 : xDomainEndAbs,\n          true\n        )\n      )(deepClone(DEFAULT_VIEW_CONFIG_DNA_ACCESSIBILITY)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // `xDomainStartAbs` and `xDomainEndAbs` are ommitted on purpose to avoid\n      // updating the view-config on every pan or zoom event.\n      focusVariantPosition,\n      variantYScale,\n      dnaAccessLabels,\n      props.chromInfo,\n    ]\n  );\n\n  const dnaAccessibilityRegionSize = useMemo(\n    () =>\n      focusVariantPosition\n        ? 5\n        : Math.round((xDomainEndAbs - xDomainStartAbs) / 1000),\n    [focusVariantPosition, xDomainStartAbs, xDomainEndAbs]\n  );\n\n  const numericalXDomainStart = useMemo(\n    () =>\n      isString(xDomainStart) && xDomainStart.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainStart.split(':')[0],\n            +xDomainStart.split(':')[1],\n          ])\n        : +xDomainStart,\n    [xDomainStart, props.chromInfo]\n  );\n\n  const numericalXDomainEnd = useMemo(\n    () =>\n      isString(xDomainEnd) && xDomainEnd.indexOf(':') >= 0\n        ? props.chromInfo.chrToAbs([\n            xDomainEnd.split(':')[0],\n            +xDomainEnd.split(':')[1],\n          ])\n        : +xDomainEnd,\n    [xDomainEnd, props.chromInfo]\n  );\n\n  const clearFocusGene = () => {\n    setFocusGene('');\n    setFocusGeneOption(null);\n  };\n\n  const focusGeneChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusGene(newValue.geneName);\n      setFocusGeneOption(newValue);\n    } else {\n      clearFocusGene();\n    }\n  };\n\n  const clearFocusVariant = () => {\n    setFocusVariant('');\n    setFocusVariantOption(null);\n  };\n\n  const focusVariantChangeHandler = (newValue) => {\n    if (newValue) {\n      setFocusVariant(newValue.geneName);\n      setFocusVariantOption(newValue);\n    } else {\n      clearFocusVariant();\n    }\n  };\n\n  const focusGeneVariantChangeHandler = (newValues) => {\n    if (newValues.length) {\n      const newFocusElements = {};\n      // We only allow exactly two selections\n      newValues.slice(newValues.length - 2).forEach((newValue) => {\n        switch (newValue.type) {\n          case 'gene':\n            newFocusElements.gene = newValue;\n            if (focusGene !== newValue.geneName) {\n              setFocusGene(newValue.geneName);\n              setFocusGeneOption(newValue);\n            }\n            break;\n\n          case 'variant':\n            newFocusElements.variant = newValue;\n            if (focusVariant !== newValue.geneName) {\n              setFocusVariant(newValue.geneName);\n              setFocusVariantOption(newValue);\n            }\n            break;\n\n          default:\n            // eslint-disable-next-line no-console\n            console.warn('Unknown focus element', newValue);\n            break;\n        }\n      });\n      // Unset focus elements\n      if (focusGene && !newFocusElements.gene) clearFocusGene();\n      if (focusVariant && !newFocusElements.variant) clearFocusVariant();\n    } else {\n      clearFocusGene();\n      clearFocusVariant();\n    }\n  };\n\n  const hideUnfocusedChangeHandler = (event) => {\n    setHideUnfocused(event.target.checked.toString());\n  };\n\n  const variantYScaleChangeHandler = (event) => {\n    setVariantYScale(event.target.value);\n  };\n\n  const matrixColoringChangeHandler = (event) => {\n    setMatrixColoring(event.target.value);\n  };\n\n  const dnaAccessLabelsChangeHandler = (event) => {\n    setDnaAccessLabels(event.target.value);\n  };\n\n  const xDomainStartChangeHandler = (event) => {\n    setXDomainStart(event.target.value);\n  };\n\n  const xDomainEndChangeHandler = (event) => {\n    setXDomainEnd(event.target.value);\n  };\n\n  // HiGlass Functions\n  const higlassClickHandler = (event) => {\n    if (event.type === 'gene-annotation') {\n      setFocusGene(event.payload.name);\n      setFocusGeneOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        type: 'gene',\n      });\n    } else if (event.type === 'snp') {\n      setFocusVariant(event.payload.name);\n      setFocusVariantOption({\n        chr: event.payload.fields[0],\n        txStart: event.payload.fields[1],\n        txEnd: event.payload.fields[2],\n        geneName: event.payload.name,\n        score: event.payload.importance,\n        type: 'variant',\n      });\n    }\n  };\n\n  const higlassLocationChangeHandler = (event) => {\n    const [newXDomainStart, newXDomainEnd] = event.xDomain.map((absPos) =>\n      props.chromInfo.absToChr(absPos).slice(0, 2).join(':')\n    );\n    setXDomainStart(newXDomainStart);\n    setXDomainEnd(newXDomainEnd);\n  };\n  const higlassLocationChangeHandlerDb = debounce(\n    higlassLocationChangeHandler,\n    250\n  );\n\n  const higlassEnhancerZoomToXDomain = (event) => {\n    if (!higlassEnhancerApi.current) return;\n\n    const newViewConfig = deepClone(viewConfigEnhancer);\n\n    const xDomain = [...newViewConfig.views[0].initialXDomain];\n\n    if (!Number.isNaN(+numericalXDomainStart)) {\n      xDomain[0] = numericalXDomainStart;\n    }\n    if (!Number.isNaN(+numericalXDomainEnd)) {\n      xDomain[1] = numericalXDomainEnd;\n    }\n\n    higlassEnhancerApi.current.zoomTo(\n      'context',\n      xDomain[0],\n      xDomain[1],\n      xDomain[0],\n      xDomain[1],\n      2000\n    );\n  };\n\n  // Initializations\n  useEffect(\n    () => {\n      (async () => {\n        if (focusGene && !focusGeneOption) {\n          const r = await fetch(`${GENE_SEARCH_URL}&ac=${focusGene}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'gene';\n          focusGeneChangeHandler(results[0]);\n        }\n        if (focusVariant && !focusVariantOption) {\n          const r = await fetch(`${VARIANT_SEARCH_URL}&ac=${focusVariant}`);\n          const results = await r.json();\n          const result = results[0];\n          result.type = 'variant';\n          focusVariantChangeHandler(results[0]);\n        }\n      })();\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassEnhancerInitHandler = useCallback(\n    (higlassInstance) => {\n      if (higlassInstance !== null) {\n        higlassEnhancerApi.current = higlassInstance.api;\n        higlassInstance.api.on('click', higlassClickHandler);\n        higlassInstance.api.on(\n          'location',\n          higlassLocationChangeHandlerDb,\n          'context'\n        );\n      }\n    },\n    // Execute only once on initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const higlassDnaAccessibilityInitHandler = useCallback((higlassInstance) => {\n    if (higlassInstance !== null) {\n      higlassDnaAccessApi.current = higlassInstance.api;\n    }\n  }, []);\n\n  const higlassEnhancerHelpClickHandler = (event) => {\n    setHiglassEnhancerHelpAnchorEl(event.currentTarget);\n  };\n\n  const higlassEnhancerHelpCloseHandler = () => {\n    setHiglassEnhancerHelpAnchorEl(null);\n  };\n\n  const higlassDnaAccessHelpClickHandler = (event) => {\n    setHiglassDnaAccessHelpAnchorEl(event.currentTarget);\n  };\n\n  const higlassDnaAccessHelpCloseHandler = () => {\n    setHiglassDnaAccessHelpAnchorEl(null);\n  };\n\n  const higlassEnhancerHelpOpen = Boolean(higlassEnhancerHelpAnchorEl);\n  const higlassEnhancerHelpId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const higlassDnaAccessHelpOpen = Boolean(higlassDnaAccessHelpAnchorEl);\n  const higlassDnaAccessHelpId = higlassEnhancerHelpOpen\n    ? 'simple-popover'\n    : undefined;\n\n  const infoOpenHandler = () => {\n    setInfoOpen(true);\n  };\n\n  const infoCloseHandler = () => {\n    setInfoOpen(false);\n  };\n\n  const higlassExportAsSvg = () => {\n    const enhancerSvg = higlassEnhancerApi.current.exportAsSvg();\n    // const dnaAccessSvg = higlassDnaAccessApi.current.exportAsSvg();\n\n    download(\n      'abc-enhancers.svg',\n      new Blob([enhancerSvg], { type: 'image/svg+xml' })\n    );\n  };\n\n  // Run on every render\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar\n          classes={{\n            root: classes.toolbarExtra,\n          }}\n        >\n          <FormControl fullWidth>\n            <SearchField\n              label={\n                <Grid container direction=\"row\" alignItems=\"center\">\n                  <SearchIcon fontSize=\"small\" />\n                  <span style={{ marginLeft: 3 }}>Gene or Variant</span>\n                </Grid>\n              }\n              searchUrl={[\n                { url: GENE_SEARCH_URL, type: 'gene' },\n                { url: VARIANT_SEARCH_URL, type: 'variant' },\n              ]}\n              onChange={focusGeneVariantChangeHandler}\n              value={focusGeneVariantOptions}\n              variant=\"filled\"\n              larger\n              fullWidth\n              multiple\n            />\n          </FormControl>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <Grid container direction=\"column\" className={classes.drawerGrid}>\n          <Grid item>\n            <ButtonBase className={classes.toolbar} style={{ width: '100%' }}>\n              <h1 className={classes.h1} onClick={infoOpenHandler}>\n                <Logo />\n              </h1>\n            </ButtonBase>\n            <Divider />\n          </Grid>\n          <Grid container item className={classes.grow} direction=\"column\">\n            <Grid item>\n              <Box m={1}>\n                <Box m={0}>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel htmlFor=\"x-domain-start\">\n                      Region Start\n                    </InputLabel>\n                    <OutlinedInput\n                      id=\"x-domain-start\"\n                      label=\"Region Start\"\n                      onChange={xDomainStartChangeHandler}\n                      value={xDomainStart}\n                    />\n                  </FormControl>\n                </Box>\n                <Box m={0}>\n                  <FormControl variant=\"outlined\" margin=\"dense\" fullWidth>\n                    <InputLabel htmlFor=\"x-domain-end\">Region End</InputLabel>\n                    <OutlinedInput\n                      id=\"x-domain-end\"\n                      label=\"Region End\"\n                      onChange={xDomainEndChangeHandler}\n                      value={xDomainEnd}\n                    />\n                  </FormControl>\n                </Box>\n                <Box m={0}>\n                  <Button\n                    variant=\"contained\"\n                    margin=\"dense\"\n                    onClick={higlassEnhancerZoomToXDomain}\n                    fullWidth\n                    disableElevation\n                  >\n                    Go\n                  </Button>\n                </Box>\n              </Box>\n              <Divider />\n            </Grid>\n            <Grid item className={classes.settings}>\n              <Box m={0} className={classes.settingsContent}>\n                <Box m={1}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={hideUnfocused === 'true'}\n                        onChange={hideUnfocusedChangeHandler}\n                        name=\"hideUnfocused\"\n                      />\n                    }\n                    label=\"Hide unfocused\"\n                  />\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Variant y-scale</FormLabel>\n                    <RadioGroup\n                      aria-label=\"variantYScale\"\n                      name=\"variantYScale\"\n                      value={variantYScale}\n                      onChange={variantYScaleChangeHandler}\n                    >\n                      <FormControlLabel\n                        label=\"p-value\"\n                        control={<Radio size=\"small\" />}\n                        value=\"pValue\"\n                      />\n                      <FormControlLabel\n                        label=\"Posterior probability\"\n                        control={<Radio size=\"small\" />}\n                        value=\"posteriorProbability\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Matrix coloring</FormLabel>\n                    <RadioGroup\n                      aria-label=\"matrixColoring\"\n                      name=\"matrixColoring\"\n                      value={matrixColoring}\n                      onChange={matrixColoringChangeHandler}\n                    >\n                      <FormControlLabel\n                        label=\"Solid\"\n                        control={<Radio size=\"small\" />}\n                        value=\"solid\"\n                      />\n                      <FormControlLabel\n                        label=\"Number of predictions\"\n                        control={<Radio size=\"small\" />}\n                        value=\"frequency\"\n                      />\n                      <FormControlLabel\n                        label=\"Highest prediction score\"\n                        control={<Radio size=\"small\" />}\n                        value=\"highestImportance\"\n                      />\n                      <FormControlLabel\n                        label=\"Prediction score of the closest TSS interaction\"\n                        control={<Radio size=\"small\" />}\n                        value=\"closestImportance\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n                <Box m={1}>\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                      DNA accessibility labels\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"dnaAccessLabels\"\n                      name=\"dnaAccessLabels\"\n                      value={dnaAccessLabels}\n                      onChange={dnaAccessLabelsChangeHandler}\n                    >\n                      <FormControlLabel\n                        label=\"Indicator\"\n                        control={<Radio size=\"small\" />}\n                        value=\"indicator\"\n                      />\n                      <FormControlLabel\n                        label=\"Text\"\n                        control={<Radio size=\"small\" />}\n                        value=\"text\"\n                      />\n                      <FormControlLabel\n                        label=\"Hidden\"\n                        control={<Radio size=\"small\" />}\n                        value=\"hidden\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                </Box>\n              </Box>\n            </Grid>\n            <Grid item>\n              <Divider />\n              <Box m={1}>\n                <Button\n                  variant=\"contained\"\n                  margin=\"dense\"\n                  onClick={higlassExportAsSvg}\n                  fullWidth\n                  disableElevation\n                >\n                  Export as SVG\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <div className={classes.higlass}>\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassEnhancer}\n          >\n            <Grid item className={classes.higlassTitleBar}>\n              <Typography\n                align=\"center\"\n                className={classes.higlassTitleBarTitle}\n                noWrap\n              >\n                <strong>Predicted Enhancers</strong>\n              </Typography>\n              <IconButton\n                aria-label=\"help\"\n                aria-describedby={higlassEnhancerHelpId}\n                className={classes.higlassTitleBarHelp}\n                size=\"small\"\n                onClick={higlassEnhancerHelpClickHandler}\n              >\n                <HelpIcon fontSize=\"inherit\" />\n              </IconButton>\n              <Popover\n                id={higlassEnhancerHelpId}\n                open={higlassEnhancerHelpOpen}\n                anchorEl={higlassEnhancerHelpAnchorEl}\n                onClose={higlassEnhancerHelpCloseHandler}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <Typography className={classes.higlassTitleBarHelpPopeover}>\n                  This panel visualizes the predicted enhancers by sample type\n                  as a matrix-like track. Each rectangle representes an\n                  enhancer. You can filter enhancers via their target gene or by\n                  variant (the dot plot below the gene annotations). Click on a\n                  variant or gene to select it. Selections are shown in\n                  pink/red.\n                </Typography>\n              </Popover>\n            </Grid>\n            <Grid item className={classes.grow}>\n              <HiGlassComponent\n                ref={higlassEnhancerInitHandler}\n                viewConfig={viewConfigEnhancer}\n                options={{\n                  sizeMode: 'bounded',\n                }}\n              />\n            </Grid>\n            <Grid item className={classes.higlassEnhancerInfoBar}>\n              {focusGene && focusVariant && (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.pink}>■</span> Enhancers containing{' '}\n                  <em>{focusVariant}</em> and predicted to regulate{' '}\n                  <em>{focusGene}</em>\n                </Typography>\n              )}\n              {focusGene && !focusVariant && (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.pink}>■</span> Enhancers predicted to\n                  regulate <em>{focusGene}</em>\n                </Typography>\n              )}\n              {!focusGene && focusVariant && (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.pink}>■</span> Enhancers containing{' '}\n                  <em>{focusVariant}</em>\n                </Typography>\n              )}\n              {focusGene || focusVariant ? (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.gray}>■</span> All other predicted\n                  enhancers\n                </Typography>\n              ) : (\n                <Typography className={classes.higlassTitleBarTitle} noWrap>\n                  <span className={classes.black}>■</span> All predicted\n                  enhancers\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n          <div className={classes.higlassSeparator} />\n          <Grid\n            container\n            direction=\"column\"\n            className={classes.higlassDnaAccessibility}\n          >\n            <Grid item className={classes.higlassTitleBar}>\n              <Typography\n                align=\"center\"\n                className={classes.higlassTitleBarTitle}\n                noWrap\n              >\n                <strong>DNA Accessibility</strong>\n              </Typography>\n              <IconButton\n                aria-label=\"help\"\n                aria-describedby={higlassDnaAccessHelpId}\n                className={classes.higlassTitleBarHelp}\n                size=\"small\"\n                onClick={higlassDnaAccessHelpClickHandler}\n              >\n                <HelpIcon fontSize=\"inherit\" />\n              </IconButton>\n              <Popover\n                id={higlassDnaAccessHelpId}\n                open={higlassDnaAccessHelpOpen}\n                anchorEl={higlassDnaAccessHelpAnchorEl}\n                onClose={higlassDnaAccessHelpCloseHandler}\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n              >\n                <Typography className={classes.higlassTitleBarHelpPopeover}>\n                  This panel visualizes the DNA accessibility of all 131\n                  samples. Each track is individually normalized. Mouse over a\n                  track to see the underlying value. To focus on a specific\n                  locus specify a focus variant.\n                </Typography>\n              </Popover>\n            </Grid>\n            <Grid item className={classes.grow}>\n              <HiGlassComponent\n                ref={higlassDnaAccessibilityInitHandler}\n                viewConfig={viewConfigDnaAccessibility}\n                options={{\n                  sizeMode: 'scroll',\n                  pixelPreciseMarginPadding: true,\n                  containerPaddingX: 0,\n                  containerPaddingY: 0,\n                  viewMarginTop: 0,\n                  viewMarginBottom: 0,\n                  viewMarginLeft: 0,\n                  viewMarginRight: 0,\n                  viewPaddingTop: 0,\n                  viewPaddingBottom: 0,\n                  viewPaddingLeft: 0,\n                  viewPaddingRight: 16,\n                }}\n              />\n            </Grid>\n            <Grid item className={classes.higlassDnaAccessibilityInfoBar}>\n              <span>├</span>\n              <Typography\n                align=\"center\"\n                className={classes.higlassTitleBarTitle}\n                noWrap\n              >\n                {toFixed(dnaAccessibilityRegionSize, 1)}{' '}\n                <abbr title=\"kilo base pairs\">kbp</abbr>\n              </Typography>\n              <span>┤</span>\n            </Grid>\n          </Grid>\n        </div>\n      </main>\n      <Modal\n        aria-labelledby=\"info-title\"\n        aria-describedby=\"info-description\"\n        className={classes.modal}\n        open={infoOpen}\n        onClose={infoCloseHandler}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 250,\n        }}\n      >\n        <Fade in={infoOpen}>\n          <div className={classes.paper}>\n            <Typography\n              id=\"info-title\"\n              align=\"center\"\n              variant=\"h5\"\n              component=\"h2\"\n              noWrap\n            >\n              <Logo\n                styles={{\n                  width: 'auto',\n                }}\n              />\n            </Typography>\n            <p id=\"info-description\">\n              This web application visualizes genome-wide enhancer-gene\n              interactions that were predicted with the{' '}\n              <em>Activity-By-Contact</em> (ABC) model. You can interactively\n              browse the entire human genome and filter enhancers by gene and\n              containing variant.\n            </p>\n            <p>\n              For information regarding the ABC model please refer to our\n              initial publication:{' '}\n              <a\n                href=\"https://www.nature.com/articles/s41588-019-0538-0\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Fulco et al., Activity-by-contact model of enhancer–promoter\n                regulation from thousands of CRISPR perturbations,{' '}\n                <em>Nature Genetics</em> (2019)\n              </a>\n              .\n            </p>\n            <Typography align=\"center\">\n              <Button\n                className={classes.startExploring}\n                onClick={infoCloseHandler}\n                variant=\"contained\"\n                primary\n                disableElevation\n              >\n                Start Exploring!\n              </Button>\n            </Typography>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Viewer;\n","import React from 'react';\n\nconst withEither = (ifEitherFn, EitherComponent) => (Component) => (props) =>\n  ifEitherFn(props) ? <EitherComponent {...props} /> : <Component {...props} />;\n\nexport default withEither;\n","import React, { useState, useEffect } from 'react';\nimport { ChromosomeInfo } from 'higlass';\nimport { pipe } from '@flekschas/utils';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport AppInitializing from './AppInitializing';\nimport AppError from './AppError';\nimport Viewer from './Viewer';\nimport withEither from './with-either';\n\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n    secondary: {\n      main: '#000',\n    },\n  },\n});\n\nconst App = () => {\n  const [chromInfo, setChromInfo] = useState(null);\n\n  useEffect(() => {\n    ChromosomeInfo('https://s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv')\n      .then((_chromInfo) => {\n        if (_chromInfo.totalLength === undefined) {\n          // Monkey patch: chrom sizes were actually unavailable...\n          // Also see https://github.com/higlass/higlass/issues/957\n          setChromInfo(false);\n        } else {\n          setChromInfo(_chromInfo);\n        }\n      })\n      .catch(() => {\n        setChromInfo(false);\n      });\n  }, []);\n\n  const AppViewer = pipe(\n    withEither(() => chromInfo === null, AppInitializing),\n    withEither(() => chromInfo === false, AppError)\n  )(Viewer);\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <AppViewer chromInfo={chromInfo} />\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function createAnnotationOverlayMetaTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  // Services\n  const { pubSub } = HGC.services;\n\n  class AnnotationOverlayMetaTrack {\n    constructor(context, options) {\n      const { definition, getTrackObject, onNewTilesLoaded: animate } = context;\n\n      this.animate = animate;\n      this.options = options;\n\n      this.overlaysTrack = getTrackObject(definition.overlaysTrack);\n\n      if (!this.overlaysTrack) {\n        console.warn(\n          `Overlays track (uid: ${definition.overlaysTrack}) not found`\n        );\n        return;\n      }\n\n      this.annotationTrackIds = new Set();\n      this.annotationTracks = definition.options.annotationTracks\n        .map((uid) => {\n          const track = getTrackObject(uid);\n\n          if (!track) {\n            console.warn(`Child track (uid: ${uid}) not found`);\n          } else {\n            this.annotationTrackIds.add(track.uuid);\n          }\n\n          return track;\n        })\n        .filter((track) => track);\n\n      this.annotationDrawnHandlerBound = this.annotationDrawnHandler.bind(this);\n\n      this.drawnAnnotations = new Map();\n      this.tracksDrawingTiles = new Set();\n\n      this.pubSubs = [];\n\n      // Augment annotation tracks\n      this.annotationTracks.forEach((track) => {\n        track.subscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n\n      this.pubSubs.push(\n        pubSub.subscribe(\n          'TiledPixiTrack.tilesDrawnEnd',\n          this.tilesDrawnEndHandler.bind(this)\n        )\n      );\n    }\n\n    /**\n     * Handles annotation drawn events\n     *\n     * @param  {String}  event.uid  UID of the view that triggered the event.\n     * @param  {Array}  event.viewPos  View position (i.e., [x, y, width, height])\n     *   of the drawn annotation on the screen.\n     * @param  {Array}  event.dataPos  Data position of the drawn annotation. For\n     *   example base pairs (Hi-C), or pixels (gigapixel images), or lng-lat\n     *   (geo json).\n     */\n    annotationDrawnHandler({ xStartAbs, xEndAbs, data }) {\n      this.drawnAnnotations.set(data.uid, [xStartAbs, xEndAbs]);\n    }\n\n    /**\n     * Remove this track.\n     */\n    remove() {\n      this.pubSubs.forEach(pubSub.unsubscribe);\n      this.pubSubs = undefined;\n      this.annotationTracks.forEach((track) => {\n        track.unsubscribe('annotationDrawn', this.annotationDrawnHandlerBound);\n      });\n    }\n\n    /**\n     * Callback function passed into the annotation tracks to trigger tree\n     * building of the spatial RTree.\n     *\n     * @description\n     * Simple counter that call `this.buildTree()` once the number of annotation\n     * tracks is reached.\n     */\n    tilesDrawnEndHandler({ uuid }) {\n      if (!this.annotationTrackIds.has(uuid)) return;\n\n      this.tracksDrawingTiles.add(uuid);\n\n      if (!(this.tracksDrawingTiles.size % this.annotationTracks.length)) {\n        this.updateOverlays();\n      }\n    }\n\n    updateOverlays() {\n      this.overlaysTrack.options.extent = Array.from(\n        this.drawnAnnotations.values()\n      );\n      this.overlaysTrack.draw();\n      this.tracksDrawingTiles.clear();\n    }\n  }\n\n  return new AnnotationOverlayMetaTrack(...args);\n}\n\ncreateAnnotationOverlayMetaTrack.config = {\n  type: 'annotation-overlay',\n  availableOptions: ['annotationTracks'],\n  defaultOptions: {\n    annotationTracks: [],\n  },\n};\n\nexport default createAnnotationOverlayMetaTrack;\n","import {\n  identity,\n  maxNan,\n  maxVector,\n  meanNan,\n  minNan,\n  sumNan,\n} from '@flekschas/utils';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_LIGHT,\n  DEFAULT_COLOR_MAP_DARK,\n} from './constants';\n\nconst FLOAT_BYTES = Float32Array.BYTES_PER_ELEMENT;\n\nconst VS = `precision mediump float;\n\n  attribute vec2 aPrevPosition;\n  attribute vec2 aCurrPosition;\n  attribute vec2 aNextPosition;\n  attribute float aOffsetSign;\n  attribute float aColorIndex;\n\n  uniform sampler2D uAreaColorTex;\n  uniform float uAreaColorTexRes;\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n\n  uniform vec4 uLineColor;\n  uniform vec4 uNaNColor;\n  uniform float uWidth;\n  uniform int uMiter;\n\n  varying vec4 vColor;\n\n  void main(void)\n  {\n    mat3 model = projectionMatrix * translationMatrix;\n\n    if (aColorIndex <= -0.5) {\n      // Render line\n      vColor = vec4(uLineColor.rgb, 1.0);\n\n      vec4 prevGlPos = vec4((model * vec3(aPrevPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 currGlPos = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n      vec4 nextGlPos = vec4((model * vec3(aNextPosition, 1.0)).xy, 0.0, 1.0);\n\n      // Calculate the direction\n      vec2 dir = vec2(0.0);\n\n      if (currGlPos == prevGlPos) {\n        // start point uses (next - current)\n        dir = normalize(nextGlPos.xy - currGlPos.xy);\n      }\n      else if (currGlPos == nextGlPos) {\n        // end point uses (current - previous)\n        dir = normalize(currGlPos.xy - prevGlPos.xy);\n      }\n      else {\n        // somewhere in middle, needs a join:\n        // get directions from (C - B) and (B - A)\n        vec2 dirA = normalize((currGlPos.xy - prevGlPos.xy));\n        if (uMiter == 1) {\n          vec2 dirB = normalize((nextGlPos.xy - currGlPos.xy));\n          // now compute the miter join normal and length\n          vec2 tangent = normalize(dirA + dirB);\n          vec2 perp = vec2(-dirA.y, dirA.x);\n          vec2 miter = vec2(-tangent.y, tangent.x);\n          dir = tangent;\n        } else {\n          dir = dirA;\n        }\n      }\n\n      float width = (projectionMatrix * vec3(uWidth, 0.0, 0.0)).x / 2.0;\n\n      vec2 normal = vec2(-dir.y, dir.x) * width;\n      // normal.x /= aspectRatio;\n      vec4 offset = vec4(normal * aOffsetSign, 0.0, 0.0);\n      gl_Position = currGlPos + offset;\n    } else {\n      // Render area\n      float colorRowIndex = aColorIndex / uAreaColorTexRes;\n\n      vec2 colorTexIndex = vec2(\n        (aColorIndex / uAreaColorTexRes) - colorRowIndex,\n        colorRowIndex / uAreaColorTexRes\n      );\n      vColor = texture2D(uAreaColorTex, colorTexIndex);\n\n      gl_Position = vec4((model * vec3(aCurrPosition, 1.0)).xy, 0.0, 1.0);\n    }\n  }\n`;\n\nconst FS = `precision mediump float;\n\n  varying vec4 vColor;\n\n  void main() {\n    gl_FragColor = vColor;\n  }\n`;\n\nconst TILE_SIZE = 256;\n\nconst COLORMAP_GRAYS = Array(127)\n  .fill()\n  .map((x, i) => {\n    const gray = (1 - i / 127) * 0.5 + 0.5;\n    return [gray, gray, gray, 1];\n  });\n\nconst getMax = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxValue, tile) => Math.max(maxValue, tile.tileData.maxNonZero),\n    -Infinity\n  );\n\nconst getNumRows = (fetchedTiles) =>\n  Object.values(fetchedTiles)[0].tileData.coarseShape[0];\n\nconst getRowMaxs = (fetchedTiles) =>\n  maxVector(\n    Object.values(fetchedTiles).map((tile) => tile.tileData.maxValueByRow)\n  );\n\nconst scaleGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getNumPointsPerRow = (numRows, positions, markArea) =>\n  positions.length / numRows / 4 / (1 + markArea) - 2;\n\nconst createRidgePlotTrack = function createRidgePlotTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { format } = HGC.libraries.d3Format;\n  const { scaleLinear } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const createColorTexture = (colors) => {\n    const colorTexRes = Math.max(2, Math.ceil(Math.sqrt(colors.length)));\n    const rgba = new Float32Array(colorTexRes ** 2 * 4);\n    colors.forEach((color, i) => {\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4] = color[0]; // r\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 1] = color[1]; // g\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 2] = color[2]; // b\n      // eslint-disable-next-line prefer-destructuring\n      rgba[i * 4 + 3] = color[3]; // a\n    });\n\n    return [\n      PIXI.Texture.fromBuffer(rgba, colorTexRes, colorTexRes),\n      colorTexRes,\n    ];\n  };\n\n  class RidgePlotTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      this.coarsifyTileValues(tile);\n    }\n\n    destroyTile() {}\n\n    binsPerTile() {\n      return this.tilesetInfo.bins_per_dimension || TILE_SIZE;\n    }\n\n    /**\n     * From HeatmapTiledPixiTrack\n     */\n    getTilePosAndDimensions(zoomLevel, tilePos, binsPerTileIn) {\n      const binsPerTile = binsPerTileIn || this.binsPerTile();\n\n      if (this.tilesetInfo.resolutions) {\n        const sortedResolutions = this.tilesetInfo.resolutions\n          .map((x) => +x)\n          .sort((a, b) => b - a);\n\n        const chosenResolution = sortedResolutions[zoomLevel];\n\n        const tileWidth = chosenResolution * binsPerTile;\n        const tileHeight = tileWidth;\n\n        const tileX = chosenResolution * binsPerTile * tilePos[0];\n        const tileY = chosenResolution * binsPerTile * tilePos[1];\n\n        return {\n          tileX,\n          tileY,\n          tileWidth,\n          tileHeight,\n        };\n      }\n\n      const xTilePos = tilePos[0];\n      const yTilePos = tilePos[1];\n\n      const minX = this.tilesetInfo.min_pos[0];\n      const minY = this.options.reverseYAxis\n        ? -this.tilesetInfo.max_pos[1]\n        : this.tilesetInfo.min_pos[1];\n\n      const tileWidth = this.tilesetInfo.max_width / 2 ** zoomLevel;\n      const tileHeight = this.tilesetInfo.max_width / 2 ** zoomLevel;\n\n      const tileX = minX + xTilePos * tileWidth;\n      const tileY = minY + yTilePos * tileHeight;\n\n      return {\n        tileX,\n        tileY,\n        tileWidth,\n        tileHeight,\n      };\n    }\n\n    updateOptions() {\n      this.selectRowsAggregationMode =\n        this.options.selectRowsAggregationMode || 'mean';\n\n      switch (this.selectRowsAggregationMode) {\n        case 'max':\n          this.selectRowsAggregationFn = maxNan;\n          break;\n\n        case 'min':\n          this.selectRowsAggregationFn = minNan;\n          break;\n\n        case 'sum':\n          this.selectRowsAggregationFn = sumNan;\n          break;\n\n        case 'mean':\n        default:\n          this.selectRowsAggregationFn = meanNan;\n          break;\n      }\n\n      this.markArea = !!this.options.markArea;\n\n      this.markAreaColor = 'grays';\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      [this.markColorTex, this.markColorTexRes] = createColorTexture([\n        ...COLORMAP_GRAYS,\n      ]);\n\n      this.markNumColors = COLORMAP_GRAYS.length;\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      // Number of line segments\n      const oldMarkResolution = this.markResolution;\n      this.markResolution = Math.max(\n        1,\n        Math.min(TILE_SIZE, this.options.markResolution || TILE_SIZE / 4)\n      );\n      // Given 100 (rows) x 256 (tile size). At a resolution of 1 we need:\n      // 100 x (256 / 4) x 4 = 25,600 vertices\n\n      const oldRowHeight = this.rowHeight;\n      this.rowHeight = Number.isNaN(+this.options.rowHeight)\n        ? 'auto'\n        : +this.options.rowHeight;\n\n      const oldRowPadding = this.rowPadding;\n      this.rowPadding =\n        this.rowHeight === 'auto' ? 0 : this.options.rowPadding || 0;\n\n      const oldRowNormalization = this.rowNormalization;\n      this.rowNormalization = this.options.rowNormalization || false;\n\n      const oldRowSelections = this.rowSelections;\n      this.rowSelections =\n        this.options.rowSelections || this.rowSelections || [];\n\n      if (\n        oldMarkResolution !== this.markResolution ||\n        oldRowSelections !== this.rowSelections\n      ) {\n        this.updateTiles();\n      }\n\n      if (\n        oldRowHeight !== this.rowHeight ||\n        oldRowPadding !== this.rowPadding ||\n        oldRowNormalization !== this.rowNormalization\n      ) {\n        this.updateScales();\n      }\n\n      const oldShowRowLabels = this.showRowLabels;\n      this.showRowLabels = this.options.showRowLabels;\n\n      if (oldShowRowLabels !== this.showRowLabels) {\n        this.updateRowLabels(oldShowRowLabels);\n        this.drawLabel();\n      }\n\n      this.rowLabelAlign = this.options.rowLabelAlign || 'left';\n      this.rowLabelSize = this.options.rowLabelSize || 12;\n\n      this.rowCategories = this.options.rowCategories || {};\n      this.rowIdToCategory = (id) => id.substring(0, id.length - 14);\n      this.rowIdToCategory = this.options.rowIdToCategory\n        ? (id) =>\n            id[this.options.rowIdToCategory.fn](\n              ...this.options.rowIdToCategory.args\n            )\n        : identity;\n    }\n\n    removeRowLabels() {\n      while (this.pAxis.children.length) {\n        this.pAxis.removeChildAt(0);\n      }\n      if (this.rowLabels) {\n        this.rowLabels.forEach((rowLabel) => {\n          rowLabel.destroy();\n        });\n        this.rowLabels = undefined;\n      }\n    }\n\n    updateRowLabels(oldShowRowLabels) {\n      if (!this.tilesetInfo || !this.tilesetInfo.row_infos) return;\n\n      const labels = this.rowSelections.length\n        ? this.rowSelections.map((rowIndex) =>\n            this.tilesetInfo.row_infos[rowIndex] === undefined\n              ? '?'\n              : this.rowIdToCategory(this.tilesetInfo.row_infos[rowIndex].id)\n          )\n        : this.tilesetInfo.row_infos.map(({ id }) => this.rowIdToCategory(id));\n\n      this.removeRowLabels();\n\n      if (this.showRowLabels === 'indicator') {\n        this.rowLabels = labels.map((label) => {\n          const indicator = new PIXI.Sprite(PIXI.Texture.WHITE);\n          indicator.width = this.rowLabelSize / 2;\n          indicator.height = this.rowLabelSize;\n          indicator.tint = this.rowCategories[label]\n            ? HGC.utils.colorToHex(\n                this.rowCategories[label].axisLabelColor ||\n                  DEFAULT_COLOR_MAP[\n                    this.rowCategories[label].index % DEFAULT_COLOR_MAP.length\n                  ]\n              )\n            : 0x808080;\n          return indicator;\n        });\n      } else if (this.showRowLabels) {\n        this.rowLabels = labels.map(\n          (label) =>\n            new PIXI.Text(label, {\n              fontSize: this.rowLabelSize,\n              align: this.rowLabelAlign === 'right' ? 'right' : 'left',\n              fill: this.rowCategories[label]\n                ? HGC.utils.colorToHex(\n                    this.rowCategories[label].axisLabelColor ||\n                      DEFAULT_COLOR_MAP_DARK[\n                        this.rowCategories[label].index %\n                          DEFAULT_COLOR_MAP_DARK.length\n                      ]\n                  )\n                : 0x808080,\n            })\n        );\n      }\n    }\n\n    drawLabel() {\n      if (!this.showRowLabels) {\n        if (this.rowLabels) {\n          while (this.pAxis.children.length) {\n            this.pAxis.removeChildAt(0);\n          }\n        }\n        return;\n      }\n      if (this.showRowLabels && !this.rowLabels) this.updateRowLabels();\n      if (!this.rowLabels) return;\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const [, rowStepHeight] = this.getRowHeight();\n      const rowStepYCenter = rowStepHeight / 2;\n\n      this.rowLabels.forEach((label, i) => {\n        label.x = xLabelOffset;\n        label.y = yStart - this.rowPadding + rowStepYCenter;\n        label.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        label.anchor.y = 0.5;\n\n        yStart += rowStepHeight;\n\n        this.pAxis.addChild(label);\n      });\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    coarsifyTileValues(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const [numRows] = tile.tileData.shape;\n      const binSizePx = Math.floor(TILE_SIZE / this.markResolution);\n      const binSizeBp = tileWidth / this.markResolution;\n      const binSizeBpHalf = binSizeBp / 2;\n\n      // Determine bin boundaries\n      tile.tileData.binXPos = Array(this.markResolution).fill();\n      for (let i = 0; i <= this.markResolution; i++) {\n        tile.tileData.binXPos[i] = tileX + binSizeBp * i + binSizeBpHalf;\n      }\n\n      // 1. Coarsify the dense matrix according to `this.markResolution`\n      tile.tileData.valuesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      tile.tileData.maxValueByRow = Array(numRows).fill(-Infinity);\n\n      for (let i = 0; i < numRows; i++) {\n        for (let j = 0; j < TILE_SIZE; j += binSizePx) {\n          const meanValue = meanNan(\n            tile.tileData.dense.subarray(\n              i * TILE_SIZE + j,\n              i * TILE_SIZE + j + binSizePx\n            )\n          );\n          tile.tileData.valuesByRow[i].push(meanValue);\n          tile.tileData.maxValueByRow[i] =\n            meanValue > tile.tileData.maxValueByRow[i]\n              ? meanValue\n              : tile.tileData.maxValueByRow[i];\n        }\n      }\n\n      // 2. Sort rows\n      if (this.rowSelections.length) {\n        tile.tileData.valuesByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.valuesByRow[rowIdx])\n          .filter(identity);\n        tile.tileData.maxValueByRow = this.rowSelections\n          .map((rowIdx) => tile.tileData.maxValueByRow[rowIdx])\n          .filter(identity);\n      }\n\n      // 3. Set out shape\n      tile.tileData.coarseShape = [\n        tile.tileData.valuesByRow.length,\n        this.markResolution,\n      ];\n    }\n\n    updateTiles() {\n      Object.values(this.fetchedTiles).forEach(\n        this.coarsifyTileValues.bind(this)\n      );\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const numRows = getNumRows(fetchedTiles);\n\n      const [rowHeight] = this.getRowHeight();\n\n      const actualTrackHeight = this.getTrackHeight(numRows, rowHeight);\n\n      const globalMax = getMax(this.fetchedTiles);\n\n      this.valueScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([rowHeight, 0]);\n      this.colorIndexScale = scaleLinear()\n        .domain([0, globalMax])\n        .range([0, this.markNumColors])\n        .clamp(true);\n\n      if (this.rowNormalization) {\n        const rowMaxs = getRowMaxs(this.fetchedTiles);\n        this.rowValueScales = {};\n        this.rowColorIndexScales = {};\n        for (let i = 0; i < numRows; i++) {\n          this.rowValueScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([rowHeight, 0]);\n          this.rowColorIndexScales[i] = scaleLinear()\n            .domain([0, rowMaxs[i]])\n            .range([0, this.markNumColors])\n            .clamp(true);\n        }\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.rowValueScales[row](value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.rowColorIndexScales[row](value);\n      } else {\n        this.valueScaleByRow = (value, row) =>\n          Number.isNaN(value) ? rowHeight : this.valueScale(value);\n        this.colorIndexScaleByRow = (value, row) =>\n          Number.isNaN(value) ? -2 : this.colorIndexScale(value);\n      }\n\n      this.rowScale = scaleLinear()\n        .domain([0, numRows])\n        .range([0, actualTrackHeight + this.rowPadding]);\n    }\n\n    tilesToData(tiles, { markArea, maxRows = Infinity, rowHeight } = {}) {\n      if (!tiles.length) return [];\n\n      const numRows = Math.min(maxRows, getNumRows(tiles));\n\n      const positionsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const colorIndicesByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n      const offsetSignsByRow = Array(numRows)\n        .fill()\n        .map(() => []);\n\n      tiles.forEach((tile) => {\n        tile.tileData.valuesByRow.forEach((values, i) => {\n          if (i >= maxRows) return;\n          values.forEach((value, j) => {\n            const x = this._xScale(tile.tileData.binXPos[j]);\n            const yStart = this.rowScale(i);\n            const y = yStart + this.valueScaleByRow(value, i);\n            // We're duplicating the the point as for every point on the line we\n            // need two x,y vertices to render triangles.\n            positionsByRow[i].push(x, y, x, y);\n            colorIndicesByRow[i].push(-1, -1); // -1 refers to the line color\n            offsetSignsByRow[i].push(1, -1);\n\n            if (markArea) {\n              positionsByRow[i].push(x, y, x, yStart + rowHeight);\n              colorIndicesByRow[i].push(this.colorIndexScaleByRow(value, i), 0);\n              offsetSignsByRow[i].push(0, 0);\n            }\n          });\n        });\n      });\n\n      const size2d = markArea ? 8 : 4;\n      const size1d = markArea ? 4 : 2;\n\n      // For each row, duplicate the first and last point\n      for (let i = 0; i < numRows; i++) {\n        // Add first point pair to the beginning of the array\n        positionsByRow[i].unshift(...positionsByRow[i].slice(0, size2d));\n\n        // The very first duplicated point positions do not matter as\n        // we offset the buffer reading. Subsequent dupliations need to be\n        // taken into account though.\n        if (i > 0) {\n          colorIndicesByRow[i].unshift(\n            ...colorIndicesByRow[i].slice(0, size1d)\n          );\n          offsetSignsByRow[i].unshift(...offsetSignsByRow[i].slice(0, size1d));\n        }\n\n        // Add last point pair to the end of the array\n        positionsByRow[i].push(...positionsByRow[i].slice(-size2d));\n        colorIndicesByRow[i].push(...colorIndicesByRow[i].slice(-size1d));\n        offsetSignsByRow[i].push(...offsetSignsByRow[i].slice(-size1d));\n      }\n\n      return [\n        new Float32Array(positionsByRow.flatMap(identity)),\n        new Float32Array(colorIndicesByRow.flatMap(identity)),\n        new Float32Array(offsetSignsByRow.flatMap(identity)),\n      ];\n    }\n\n    toLineIndices(numRows, numPointsPerRow, markArea) {\n      const verticesPerLine = markArea ? 12 : 6;\n      const verticesPerPoint = markArea ? 4 : 2;\n      const indices = new Uint32Array(\n        (numPointsPerRow - 1) * numRows * verticesPerLine\n      );\n      let k = 0;\n\n      if (markArea) {\n        // Draw a line and area\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p1c = p1a + 2;\n            const p1d = p1a + 3;\n            const p2a = p1a + 4;\n            const p2b = p1a + 5;\n            const p2c = p1a + 6;\n            const p2d = p1a + 7;\n\n            const indexOffset = k * verticesPerLine;\n            // Area\n            indices[indexOffset] = p1c;\n            indices[indexOffset + 1] = p1d;\n            indices[indexOffset + 2] = p2c;\n            indices[indexOffset + 3] = p2c;\n            indices[indexOffset + 4] = p1d;\n            indices[indexOffset + 5] = p2d;\n            // Line\n            indices[indexOffset + 6] = p1a;\n            indices[indexOffset + 7] = p1b;\n            indices[indexOffset + 8] = p2a;\n            indices[indexOffset + 9] = p2a;\n            indices[indexOffset + 10] = p1b;\n            indices[indexOffset + 11] = p2b;\n\n            k++;\n          }\n        }\n      } else {\n        // Just draw a line\n        for (let i = 0; i < numRows; i++) {\n          for (let j = 0; j < numPointsPerRow - 1; j++) {\n            // The `+2` comes from the fact that for each row of points we\n            // duplicate the first and last point.\n            const pointOffset = i * (numPointsPerRow + 2) * verticesPerPoint;\n            const p1a = pointOffset + j * verticesPerPoint;\n            const p1b = p1a + 1;\n            const p2a = p1a + 2;\n            const p2b = p1a + 3;\n\n            const indexOffset = k * verticesPerLine;\n            indices[indexOffset] = p1a;\n            indices[indexOffset + 1] = p1b;\n            indices[indexOffset + 2] = p2a;\n            indices[indexOffset + 3] = p2a;\n            indices[indexOffset + 4] = p1b;\n            indices[indexOffset + 5] = p2b;\n\n            k++;\n          }\n        }\n      }\n\n      return indices;\n    }\n\n    getRowHeight(numRows) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? [\n            Math.floor(visibleTrackHeight / numRows),\n            Math.floor(visibleTrackHeight / numRows),\n          ]\n        : [this.rowHeight, this.rowHeight + this.rowPadding];\n    }\n\n    getTrackHeight(numRows, rowHeight) {\n      const [, visibleTrackHeight] = this.dimensions;\n\n      return this.rowHeight === 'auto'\n        ? visibleTrackHeight\n        : rowHeight * numRows + this.rowPadding * (numRows - 1);\n    }\n\n    renderLines() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const tiles = Object.values(this.fetchedTiles);\n\n      const numRows = getNumRows(tiles);\n      const [rowHeight] = this.getRowHeight(numRows);\n\n      const [positions, colorIndices, offsetSigns] = this.tilesToData(tiles, {\n        maxRows: numRows,\n        markArea: this.markArea,\n        rowHeight,\n      });\n\n      const numPointsPerRow = getNumPointsPerRow(\n        numRows,\n        positions,\n        this.markArea\n      );\n\n      const indices = this.toLineIndices(\n        numRows,\n        numPointsPerRow,\n        this.markArea\n      );\n\n      const uniforms = new PIXI.UniformGroup({\n        uLineColor: [...this.markColorRgbNorm, 1.0],\n        uNaNColor: [1.0, 1.0, 1.0, 1.0],\n        uAreaColorTex: this.markColorTex,\n        uAreaColorTexRes: this.markColorTexRes,\n        uWidth: 0.25,\n        uMiter: 1,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      const numCoords = 2;\n      const numVerticesPoint = this.markArea ? 4 : 2;\n      geometry.addAttribute(\n        'aPrevPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        0 // offset/start\n      );\n      geometry.addAttribute(\n        'aCurrPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * numCoords, // stride\n        // note that each point is duplicated, hence we need to skip over the first two\n        FLOAT_BYTES * numCoords * numVerticesPoint // offset/start\n      );\n      geometry.addAttribute(\n        'aNextPosition',\n        positions,\n        2, // size\n        false, // normalize\n        PIXI.TYPES.FLOAT, // type\n        FLOAT_BYTES * 2, // stride\n        // note that each point is duplicated, hence we need to skip over the first four\n        FLOAT_BYTES * numCoords * numVerticesPoint * 2 // offset/start\n      );\n      geometry.addAttribute('aOffsetSign', offsetSigns, 1);\n      geometry.addAttribute('aColorIndex', colorIndices, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.lineGraphics) {\n        this.pMain.removeChild(this.lineGraphics);\n        this.lineGraphics.destroy();\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.lineGraphics = newGraphics;\n\n      scaleGraphics(this.lineGraphics, this._xScale, this.drawnAtScale);\n\n      this.draw();\n      this.animate();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.renderLines();\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.lineGraphics) {\n        scaleGraphics(this.lineGraphics, newXScale, this.drawnAtScale);\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Return the data currently visible at position X and Y\n     *\n     * @param {Number} trackX: The x position relative to the track's start and end\n     * @param {Number} trakcY: The y position relative to the track's start and end\n     */\n    getVisibleData(trackX, trackY) {\n      const zoomLevel = this.calculateZoomLevel();\n\n      const numRows = getNumRows(this.fetchedTiles);\n      const [, rowStepHeight] = this.getRowHeight(numRows);\n\n      // the width of the tile in base pairs\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tilePos = this._xScale.invert(trackX) / tileWidth;\n\n      // the position of query within the tile\n      let posInTileX =\n        this.tilesetInfo.tile_size * (tilePos - Math.floor(tilePos));\n      // const posInTileYNormalized = trackY / this.dimensions[1];\n      // The first track doesn't apply padding so we have to shift padding\n      // to the mouse position once\n      const rowIndex = Math.floor(\n        Math.max(0, (trackY + this.rowPadding) / rowStepHeight)\n      );\n      const rowSelection = this.rowSelections[rowIndex];\n      const tileId = this.tileToLocalId([zoomLevel, Math.floor(tilePos)]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      let text = '';\n      let value = '<em>unknown</em>';\n\n      if (fetchedTile) {\n        if (!this.tilesetInfo.shape) {\n          posInTileX =\n            fetchedTile.tileData.dense.length * (tilePos - Math.floor(tilePos));\n        }\n\n        let index = null;\n        if (this.tilesetInfo.shape) {\n          // Accomodate data from vector sources\n          if (\n            Array.isArray(rowSelection) &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            // Need to aggregate, so `index` will actually be an array.\n            index = rowSelection.map(\n              (rowI) =>\n                this.tilesetInfo.shape[0] * rowI + Math.floor(posInTileX)\n            );\n          } else if (\n            rowSelection &&\n            this.options.selectRowsAggregationMethod === 'client'\n          ) {\n            index =\n              this.tilesetInfo.shape[0] * rowSelection + Math.floor(posInTileX);\n          } else {\n            // No need to aggregate, `index` will contain a single item.\n            index =\n              this.tilesetInfo.shape[0] * rowIndex + Math.floor(posInTileX);\n          }\n        } else {\n          index =\n            fetchedTile.tileData.dense.length * rowIndex +\n            Math.floor(posInTileX);\n        }\n\n        if (Array.isArray(index)) {\n          const values = index.map((i) => fetchedTile.tileData.dense[i]);\n          value = format('.3f')(this.selectRowsAggregationFn(values));\n          text = value;\n\n          text += '<br/>';\n          text += `${index.length}-item ${this.options.selectRowsAggregationMode}`;\n        } else {\n          value = format('.3f')(fetchedTile.tileData.dense[index]);\n          text = value;\n\n          if (Array.isArray(rowSelection)) {\n            value += '<br/>';\n            value += `${rowSelection.length}-item ${this.options.selectRowsAggregationMode}`;\n          }\n        }\n      }\n\n      // add information about the row\n      if (this.tilesetInfo.row_infos) {\n        let rowInfo = '';\n\n        if (rowSelection !== undefined) {\n          rowInfo = this.tilesetInfo.row_infos[rowSelection];\n        } else if (rowIndex) {\n          rowInfo = this.tilesetInfo.row_infos[rowIndex];\n        }\n\n        const label =\n          typeof rowInfo === 'object'\n            ? this.rowIdToCategory(rowInfo.id)\n            : rowInfo;\n\n        const color = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_DARK[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_DARK.length\n            ]\n          : '#666666';\n\n        const background = this.rowCategories[label]\n          ? this.rowCategories[label].axisLabelColor ||\n            DEFAULT_COLOR_MAP_LIGHT[\n              this.rowCategories[label].index % DEFAULT_COLOR_MAP_LIGHT.length\n            ]\n          : '#ffffff';\n\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${background}\"><strong style=\"color: ${color};\">${label}:</strong> ${value}</div>`;\n      }\n\n      return text;\n    }\n\n    /**\n     * Get some information to display when the mouse is over this\n     * track\n     *\n     * @param {Number} trackX: the x position of the mouse over the track\n     * @param {Number} trackY: the y position of the mouse over the track\n     *\n     * @return {string}: A HTML string containing the information to display\n     *\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      return this.getVisibleData(trackX, trackY);\n    }\n  }\n\n  return new RidgePlotTrack(...args);\n};\n\ncreateRidgePlotTrack.config = {\n  type: 'ridge-plot',\n  datatype: ['multivec'],\n  orientation: '1d',\n  name: 'RidgePlot',\n};\n\nexport default createRidgePlotTrack;\n","import createIntervalTree from 'interval-tree-1d';\n\nimport {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n} from './constants';\nimport { contains, dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aHighlight;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main(void)\n  {\n    vHighlight = aHighlight;\n    vOpacity = aOpacity;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS = `\n  precision mediump float;\n\n  uniform vec4 uColor;\n  uniform vec4 uColorHighlight;\n\n  varying float vHighlight;\n  varying float vOpacity;\n\n  void main() {\n    float isNotFocused = 1.0 - vHighlight;\n\n    float r = uColor.r * isNotFocused + uColorHighlight.r * vHighlight;\n    float g = uColor.g * isNotFocused + uColorHighlight.g * vHighlight;\n    float b = uColor.b * isNotFocused + uColorHighlight.b * vHighlight;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\n// prettier-ignore\nconst pointToPosition = (pt) => [\n  // top-left\n  pt.cX - pt.widthHalf, pt.y,\n  // top-right\n  pt.cX + pt.widthHalf, pt.y,\n  // bottom-right\n  pt.cX + pt.widthHalf, pt.y + pt.height,\n  // pt.cX + pt.widthHalf, pt.y + pt.height,\n  // bottom-left\n  pt.cX - pt.widthHalf, pt.y + pt.height,\n  // pt.cX - pt.widthHalf, pt.y,\n];\n\nconst pointToIndex = (pt, i) => {\n  const base = i * 4;\n  return [base, base + 1, base + 2, base + 2, base + 3, base];\n};\n\nconst pointToOpacity = (pt) => [pt.opacity, pt.opacity, pt.opacity, pt.opacity];\n\nconst pointToHighlight = (pt) => [\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n  pt.highlight,\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst getRegionId = (item) =>\n  `${item.fields[0]}:${item.fields[1]}-${item.fields[2]}`;\n\nconst createStratifiedBedTrack = function createStratifiedBedTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class StratifiedBedTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      const intervals = [];\n\n      tile.tileData.forEach((item, i) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.regionId = getRegionId(item);\n        item.isLeftToRight = item.start < item.end;\n        intervals.push([item.xStart, item.xEnd, i]);\n      });\n\n      tile.intervalTree = createIntervalTree(intervals);\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.yToCategory = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          const cat = category.toLowerCase();\n          this.categoryToGroup.set(cat, i);\n          this.categoryToY.set(cat, k + j);\n          this.yToCategory.set(k + j, cat);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n      this.markMinWidth = this.options.markMinWidth || this.markSize;\n      this.markHeight = this.options.markHeight || this.markSize;\n\n      this.rowHeight = this.options.rowHeight || this.markHeight;\n\n      this.markColorHighlight = HGC.utils.colorToHex(\n        this.options.markColorHighlight || 'red'\n      );\n\n      this.markColorHighlightRgbNorm = this.options.markColorHighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorHighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markColorDehighlight = HGC.utils.colorToHex(\n        this.options.markColorDehighlight || '#999999'\n      );\n\n      this.markColorDehighlightRgbNorm = this.options.markColorDehighlight\n        ? HGC.utils\n            .colorToRgba(this.options.markColorDehighlight)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0.6, 0.6, 0.6];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      this.opacityEncoding = this.options.opacityEncoding || 'solid';\n\n      switch (this.opacityEncoding) {\n        case 'frequency':\n          this.opacityScale = () => 0.1;\n          break;\n\n        case 'highestImportance':\n        case 'closestImportance': {\n          const importanceDomain = this.options.importanceDomain || [1000, 1];\n          const opacityLinearScale = scaleLinear()\n            .domain(importanceDomain)\n            .range([1, 10]);\n          this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n          break;\n        }\n\n        case 'solid':\n        default:\n          this.opacityScale = () => 1;\n          break;\n      }\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.getRegion = this.options.focusRegion\n        ? (item) => [item.xStart, item.xEnd]\n        : undefined;\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.focusStyle = this.options.focusStyle\n        ? this.options.focusStyle.toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.rowHeight]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorCategory(item, isHighlighting) {\n      return {\n        cX: this._xScale(item.start),\n        y: this.categoryHeightScale(\n          this.categoryToY.get(this.getCategory(item))\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        highlight: isHighlighting && item.__focus,\n        widthHalf: Math.max(\n          this.markMinWidth / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        height: this.markHeight,\n        __item: item,\n      };\n    }\n\n    isItemInFocus() {\n      if (\n        this.getGene &&\n        this.focusGene &&\n        this.getRegion &&\n        this.focusRegion\n      ) {\n        return (item) => {\n          item.__focus =\n            this.getGene(item) === this.focusGene &&\n            contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      if (this.getGene && this.focusGene) {\n        return (item) => {\n          item.__focus = this.getGene(item) === this.focusGene;\n          return item.__focus;\n        };\n      }\n\n      if (this.getRegion && this.focusRegion) {\n        return (item) => {\n          item.__focus = contains(this.getRegion(item), this.focusRegion);\n          return item.__focus;\n        };\n      }\n\n      return (item) => {\n        item.__focus = false;\n        // If no focus was defined, we include all intervals\n        return true;\n      };\n    }\n\n    itemToIndicatorReducer(filterFn, addFn) {\n      if (this.focusStyle === 'highlighting') {\n        return (filteredItems, item) => {\n          filterFn(item);\n          addFn(filteredItems, item);\n          return filteredItems;\n        };\n      }\n\n      return (filteredItems, item) => {\n        if (filterFn(item)) addFn(filteredItems, item);\n        return filteredItems;\n      };\n    }\n\n    getPoints(isHighlighting) {\n      let reducerVar = [];\n      let addFn = (accumulator, item) =>\n        accumulator.push(this.itemToIndicatorCategory(item, isHighlighting));\n\n      if (this.opacityEncoding === 'highestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (accumulator[item.regionId]) {\n            const i1 = this.getImportance(accumulator[item.regionId].__item);\n            const i2 = this.getImportance(item);\n            if (i2 > i1) {\n              accumulator[item.regionId] = this.itemToIndicatorCategory(\n                item,\n                isHighlighting\n              );\n            }\n          } else {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      } else if (this.opacityEncoding === 'closestImportance') {\n        reducerVar = {};\n        addFn = (accumulator, item) => {\n          if (\n            !accumulator[item.regionId] ||\n            item.width < accumulator[item.regionId].__item.width\n          ) {\n            accumulator[item.regionId] = this.itemToIndicatorCategory(\n              item,\n              isHighlighting\n            );\n          }\n        };\n      }\n\n      const filterFn = this.isItemInFocus();\n      const dataToPoint = this.itemToIndicatorReducer(filterFn, addFn);\n\n      return Object.values(this.fetchedTiles).flatMap((tile) =>\n        Object.values(tile.tileData.reduce(dataToPoint, reducerVar))\n      );\n    }\n\n    renderIndicatorPoints() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const indices = new Uint16Array(points.flatMap(pointToIndex));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const highlights = new Float32Array(points.flatMap(pointToHighlight));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColor: isHighlighting\n          ? [...this.markColorDehighlightRgbNorm, this.markOpacity]\n          : [...this.markColorRgbNorm, this.markOpacity],\n        uColorHighlight: [...this.markColorHighlightRgbNorm, this.markOpacity],\n        uHighlighting: isHighlighting,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aHighlight', highlights, 1);\n      geometry.addIndex(indices);\n\n      const mesh = new PIXI.Mesh(geometry, shader);\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (this.options.focusStyle === 'highlighting') {\n          this.pAxis.beginFill(0xffffff, 0.66);\n        } else {\n          this.pAxis.beginFill(this.groupToColor.get(i)[1], 0.66);\n        }\n\n        this.pAxis.lineStyle(0);\n        if (this.axisAlign === 'right') {\n          this.pAxis.drawRect(\n            labelPixiText.x - labelPixiText.width,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        } else {\n          this.pAxis.drawRect(\n            labelPixiText.x,\n            labelPixiText.y - labelPixiText.height / 2,\n            labelPixiText.width,\n            labelPixiText.height\n          );\n        }\n        this.pAxis.endFill();\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    renderIndicatorCategoryAxisAsSvg() {\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.pAxis.position.x}, ${this.pAxis.position.y})`\n      );\n\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n\n      const createRect = (x, y, w, h, f, o) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', x);\n        r.setAttribute('y', y);\n        r.setAttribute('width', w);\n        r.setAttribute('height', h);\n        r.setAttribute('fill', f);\n        r.setAttribute('fill-opacity', o);\n        r.setAttribute('stroke-width', 0);\n\n        return r;\n      };\n\n      const createText = (pixiText) => {\n        const t = document.createElement('text');\n\n        t.setAttribute('x', pixiText.x);\n        t.setAttribute('y', pixiText.y + pixiText.height / (4 / 1));\n        t.setAttribute('fill', pixiText._style._fill);\n        t.setAttribute(\n          'text-anchor',\n          pixiText._style._align === 'right' ? 'end' : 'start'\n        );\n        t.setAttribute('style', `font: ${pixiText._font};`);\n\n        t.textContent = pixiText.text;\n\n        return t;\n      };\n\n      const createLine = ({\n        stroke = '#000000',\n        strokeWidth = 1,\n        strokeDasharray = null,\n      } = {}) => (x1, y1, x2, y2) => {\n        const l = document.createElement('line');\n\n        l.setAttribute('x1', x1);\n        l.setAttribute('y1', y1);\n        l.setAttribute('x2', x2);\n        l.setAttribute('y2', y2);\n        l.setAttribute('stroke', stroke);\n        l.setAttribute('stroke-width', strokeWidth);\n\n        if (strokeDasharray)\n          l.setAttribute('stroke-dasharray', strokeDasharray);\n\n        return l;\n      };\n\n      const createDashedLine = createLine({ strokeDasharray: '5' });\n\n      const isHighlighting = this.options.focusStyle === 'highlighting';\n      const backgroundOpacity = 0.66;\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        // Background color\n        const backgroundColor = isHighlighting\n          ? '#ffffff'\n          : `#${this.groupToColor.get(i)[1].toString(16)}`;\n\n        if (this.axisAlign === 'right') {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x - labelPixiText.width,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        } else {\n          gAxis.appendChild(\n            createRect(\n              labelPixiText.x,\n              labelPixiText.y - labelPixiText.height / (4 / 1),\n              labelPixiText.width,\n              labelPixiText.height,\n              backgroundColor,\n              backgroundOpacity\n            )\n          );\n        }\n\n        gAxis.appendChild(createText(labelPixiText));\n\n        gAxis.appendChild(createLine()(0, yStart, xTickOffset, yStart));\n\n        if (this.options.stratification.axisShowGroupSeparator) {\n          gAxis.appendChild(createDashedLine(0, yStart, xTickEnd, yStart));\n        }\n\n        yStart = yEnd;\n      });\n\n      gAxis.appendChild(createLine()(0, 0, 0, yEnd));\n\n      if (this.options.stratification.axisShowGroupSeparator) {\n        gAxis.appendChild(createDashedLine(0, yEnd, xTickEnd, yEnd));\n      }\n\n      return gAxis;\n    }\n\n    updateIndicators() {\n      this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      this.renderIndicatorPoints();\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateScales();\n      this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!this.options.stratification.axisNoGroupColor) {\n        let yStart = 0;\n        let yEnd = 0;\n        this.groupSizes.forEach((size, i) => {\n          yEnd += this.categoryHeightScale(size);\n\n          tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n          tile.graphics.drawRect(\n            0,\n            yStart,\n            this.dimensions[0],\n            Math.abs(yEnd - yStart)\n          );\n\n          yStart = yEnd;\n        });\n        tile.graphics.endFill();\n      }\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const tileId = this.tileToLocalId([\n        zoomLevel,\n        Math.floor(this._xScale.invert(trackX) / tileWidth),\n      ]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const category = this.yToCategory.get(\n        Math.floor(this.categoryHeightScale.invert(trackY))\n      );\n\n      const xAbsLo = this._xScale.invert(trackX - 1);\n      const xAbsHi = this._xScale.invert(trackX + 1);\n\n      let foundItem;\n      fetchedTile.intervalTree.queryInterval(xAbsLo, xAbsHi, (interval) => {\n        const item = fetchedTile.tileData[interval[2]];\n        if (this.getCategory(item) === category) {\n          foundItem = item;\n          return true;\n        }\n        return false;\n      });\n\n      if (foundItem) {\n        const [color, bg] = this.groupToColor.get(\n          this.categoryToGroup.get(category)\n        );\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value = this.getImportance(foundItem).toFixed(2);\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${category}:</strong> ${value}</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stratified-bed-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const isHighlighting = !!(\n        this.focusStyle === 'highlighting' &&\n        ((this.focusGene && this.getGene) ||\n          (this.focusRegion && this.getRegion))\n      );\n\n      const points = this.getPoints(isHighlighting);\n      const color = isHighlighting\n        ? this.options.markColorDehighlight || '#999999'\n        : this.options.markColor || 'black';\n      const colorHighlight = this.options.markColorHighlight || 'red';\n\n      points.forEach(({ cX, y, widthHalf, opacity, highlight, height }, i) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', cX - widthHalf);\n        r.setAttribute('y', y);\n        r.setAttribute('width', widthHalf * 2);\n        r.setAttribute('height', height);\n        r.setAttribute('fill', highlight ? colorHighlight : color);\n        r.setAttribute('fill-opacity', opacity);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      base.appendChild(this.renderIndicatorCategoryAxisAsSvg());\n\n      return [base, track];\n    }\n  }\n\n  return new StratifiedBedTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStratifiedBedTrack.config = {\n  type: 'stratified-bed',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStratifiedBedTrack;\n","import { dashedXLineTo } from './utils';\n\nconst VS = `\n  precision mediump float;\n  attribute vec2 aPosition;\n  attribute float aOpacity;\n  attribute float aFocused;\n\n  uniform mat3 projectionMatrix;\n  uniform mat3 translationMatrix;\n  uniform float uPointSize;\n  uniform vec4 uColor;\n  uniform vec4 uColorFocused;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main(void)\n  {\n    vColor = uColor;\n    vColorFocused = uColorFocused;\n    vOpacity = aOpacity;\n    vFocused = aFocused;\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n    gl_PointSize = uPointSize;\n  }\n`;\n\nconst FS_ROUND = `\n  #ifdef GL_OES_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n  #endif\n\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float r = 0.0, delta = 0.0, alpha = 1.0;\n    vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n    r = dot(cxy, cxy);\n\n    #ifdef GL_OES_standard_derivatives\n      delta = fwidth(r);\n      alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n    #endif\n\n    gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n  }\n`;\n\nconst FS_SQUARE = `\n  precision mediump float;\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vOpacity;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0) * vOpacity;\n  }\n`;\n\nconst DEFAULT_GROUP_COLORS = [\n  // '#c17da5',\n  '#c76526',\n  '#dca237',\n  '#eee462',\n  '#469b76',\n  '#3170ad',\n  '#6fb2e4',\n  '#000000',\n  '#999999',\n];\n\nconst DEFAULT_GROUP_COLORS_DARK = [\n  // '#a1688a',\n  '#a65420',\n  '#b7872e',\n  '#9f9841',\n  '#3a8162',\n  '#295d90',\n  '#4a7798',\n  '#000000',\n  '#666666',\n];\n\nconst DEFAULT_GROUP_COLORS_LIGHT = [\n  // '#f5e9f0',\n  '#f6e5db',\n  '#f9f0de',\n  '#fcfbe5',\n  '#e0eee8',\n  '#dde7f1',\n  '#e7f2fb',\n  '#d5d5d5',\n  '#ffffff',\n];\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dItemWidth = (item) => item.xEnd - item.xStart;\n\nconst get2dItemWidth = (item) =>\n  Math.abs(\n    item.xStart +\n      (item.xEnd - item.xStart) / 2 -\n      (item.yStart + (item.yEnd - item.yStart) / 2)\n  );\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getMaxWidth = (fetchedTiles) =>\n  Object.values(fetchedTiles).reduce(\n    (maxWidth, tile) =>\n      Math.max(\n        maxWidth,\n        tile.tileData.reduce(\n          (maxWidthItem, item) => Math.max(maxWidthItem, item.width),\n          0\n        )\n      ),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\nconst createScalableArcs1dTrack = function createScalableArcs1dTrack(\n  HGC,\n  ...args\n) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  class ScalableArcs1dTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getItemWidth = is2d ? get2dItemWidth : get1dItemWidth;\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.width = getItemWidth(item);\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n    }\n\n    updateTileWidthHistogram(tile) {\n      const numBins = Math.max(this.dimensions[1] / this.pointSize);\n      const binSize = this.maxWidth / numBins;\n\n      let max = 0;\n\n      tile.widthHistogramLeft = new Uint32Array(numBins);\n      tile.widthHistogramRight = new Uint32Array(numBins);\n\n      tile.tileData.forEach((item) => {\n        const bin = Math.round(item.width / binSize);\n        // We will use this for vertical offsettings similar to a beeswarm plot\n        item.histPos = item.isLeftToRight\n          ? tile.widthHistogramRight[bin]++\n          : tile.widthHistogramLeft[bin]++;\n        max = max > item.histPos ? max : item.histPos;\n      });\n\n      tile.widthHistogramMax = max;\n    }\n\n    updateWidthHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileWidthHistogram.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          HGC.utils.colorToHex(\n            group.color || DEFAULT_GROUP_COLORS[i % DEFAULT_GROUP_COLORS.length]\n          ),\n          HGC.utils.colorToHex(\n            group.backgroundColor ||\n              DEFAULT_GROUP_COLORS_LIGHT[i % DEFAULT_GROUP_COLORS.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: HGC.utils.colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_GROUP_COLORS_DARK[i % DEFAULT_GROUP_COLORS_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = HGC.utils.colorToHex(\n        this.options.labelColor || 'black'\n      );\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.markColor = HGC.utils.colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? HGC.utils\n            .colorToRgba(this.options.markColor)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = HGC.utils.colorToHex(\n        this.options.markColorFocus || 'red'\n      );\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? HGC.utils\n            .colorToRgba(this.options.markColorFocus)\n            .slice(0, 3)\n            .map((x) => Math.min(1, Math.max(0, x / 255)))\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.strokeColor =\n        this.markColor ||\n        HGC.utils.colorToHex(this.options.strokeColor || 'black');\n\n      this.strokeWidth = this.options.strokeWidth || this.markSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : (item) => item.width;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateWidthHistograms();\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n      const markSizeHalf = this.markSize / 2;\n\n      this.maxWidth = getMaxWidth(this.fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([Math.min(12, height / 10), height]);\n\n      this.fullHeightScale = scaleLinear()\n        .domain([this.maxWidth, 0])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.fullHeightScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([\n          Math.min(markSizeHalf, height / 10),\n          Math.max(height - markSizeHalf, (9 * height) / 10),\n        ]);\n\n      this.incomingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, height]);\n\n      this.outgoingHeightScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height / 2, 0]);\n\n      this.categoryHeightScale = scaleLinear()\n        .domain([0, this.numCategories])\n        .range([0, this.numCategories * this.markSize]);\n\n      this.valueScale = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([height, 0]);\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.maxWidth])\n        .range([0, height]);\n    }\n\n    itemToIndicatorDiverging(item) {\n      return {\n        startX: this._xScale(item.start),\n        endX: this._xScale(item.end),\n        startY: this.outgoingHeightScale(item.width),\n        endY: this.incomingHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorStart(item) {\n      return {\n        x: this._xScale(item.start),\n        y: this.fullHeightScale(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorEnd(item) {\n      return {\n        x: this._xScale(item.end),\n        y: this.fullHeightScaleInverted(item.width),\n        opacity: this.opacityScale(this.getImportance(item)),\n        size: this.markSize,\n      };\n    }\n\n    itemToIndicatorCategory(item) {\n      return {\n        cX: this._xScale(item.start),\n        cY: this.categoryHeightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        wHalf: Math.max(\n          this.markSize / 2,\n          Math.abs(this._xScale(item.xStart) - this._xScale(item.xEnd)) / 2\n        ),\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n        size: this.markSize,\n        sizeHalf: this.markSize / 2,\n      };\n    }\n\n    itemToIndicatorReducer(mapFn) {\n      if (this.getGene && this.focusGene) {\n        return (filteredItems, item) => {\n          const gene = this.getGene(item);\n          if (gene === this.focusGene) filteredItems.push(mapFn(item));\n          return filteredItems;\n        };\n      }\n      return (filteredItems, item) => {\n        filteredItems.push(mapFn(item));\n        return filteredItems;\n      };\n    }\n\n    renderIndicatorPoints(\n      dataToPoint,\n      pointToPosition,\n      pointToOpacity,\n      pointToFocused,\n      {\n        vertexShader = VS,\n        fragmentShader = FS_ROUND,\n        drawTriangles = false,\n      } = {}\n    ) {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const points = Object.values(this.fetchedTiles).flatMap((tile) =>\n        tile.tileData.reduce(dataToPoint, [])\n      );\n\n      const positions = new Float32Array(points.flatMap(pointToPosition));\n      const opacities = new Float32Array(points.flatMap(pointToOpacity));\n      const focused = new Float32Array(points.flatMap(pointToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uPointSize: this.markSize,\n        uColor: [...this.markColorRgbNorm, this.markOpacity],\n        uColorFocused: [...this.markColorFocusRgbNorm, this.markOpacity],\n      });\n\n      const shader = PIXI.Shader.from(vertexShader, fragmentShader, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aOpacity', opacities, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        drawTriangles ? PIXI.DRAW_MODES.TRIANGLES : PIXI.DRAW_MODES.POINTS\n      );\n      // mesh.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderIndicatorDistanceAxis(valueScale) {\n      this.drawAxis(valueScale);\n    }\n\n    renderIndicatorCategoryAxis() {\n      const [width] = this.dimensions;\n      const [left, top] = this.position;\n\n      this.pAxis.position.x = this.axisAlign === 'right' ? left + width : left;\n      this.pAxis.position.y = top;\n\n      this.pAxis.clear();\n      let yStart = 0;\n      let yEnd = 0;\n\n      const xTickOffset = this.axisAlign === 'right' ? -5 : 5;\n      const xTickEnd = this.axisAlign === 'right' ? -width : width;\n      const xLabelOffset = this.axisAlign === 'right' ? -3 : 3;\n      const numAxisLabels = this.pAxis.children.length;\n\n      this.pAxis.lineStyle(1, 0x000000, 1.0, 0.0);\n\n      this.groupLabelsPixiText.forEach((labelPixiText, i) => {\n        const height = this.categoryHeightScale(this.groupSizes[i]);\n        yEnd += height;\n        labelPixiText.x = xLabelOffset;\n        labelPixiText.y = yStart + height / 2;\n        labelPixiText.anchor.x = this.axisAlign === 'right' ? 1 : 0;\n        labelPixiText.anchor.y = 0.5;\n\n        if (numAxisLabels < i + 1) {\n          this.pAxis.addChild(labelPixiText);\n        }\n\n        this.pAxis.moveTo(0, yStart);\n        this.pAxis.lineTo(xTickOffset, yStart);\n        if (this.options.stratification.axisShowGroupSeparator) {\n          dashedXLineTo(this.pAxis, 0, xTickEnd, yStart, 5);\n        }\n\n        yStart = yEnd;\n      });\n\n      this.pAxis.moveTo(0, 0);\n      this.pAxis.lineTo(0, yEnd);\n      this.pAxis.lineTo(xTickOffset, yEnd);\n      if (this.options.stratification.axisShowGroupSeparator) {\n        dashedXLineTo(this.pAxis, 0, xTickEnd, yEnd, 5);\n      }\n    }\n\n    updateIndicators() {\n      let dataToPoint = this.itemToIndicatorDiverging.bind(this);\n      let pointToPosition = (pt) => [pt.startX, pt.startY, pt.endX, pt.endY];\n      let pointToOpacity = (pt) => pt.opacity;\n      let pointToFocused = (pt) => pt.focused;\n      let fragmentShader = FS_ROUND;\n      let drawTriangles = false;\n\n      if (this.options.indicatorStyle === 'category') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        pointToPosition = (pt) => [pt.cX, pt.cY];\n        fragmentShader = FS_SQUARE;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'category-rect') {\n        dataToPoint = this.itemToIndicatorCategory.bind(this);\n        // prettier-ignore\n        pointToPosition = (pt) => [\n          pt.cX - pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX + pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY + pt.size,\n          pt.cX - pt.wHalf, pt.cY,\n        ];\n        pointToOpacity = (pt) => [\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n          pt.opacity,\n        ];\n        pointToFocused = (pt) => [\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n          pt.focused,\n        ];\n        fragmentShader = FS_SQUARE;\n        drawTriangles = true;\n        this.renderIndicatorCategoryAxis(this.valueScaleInverted);\n      } else if (this.options.indicatorStyle === 'start-only') {\n        dataToPoint = this.itemToIndicatorStart.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScale);\n      } else if (this.options.indicatorStyle === 'end-only') {\n        dataToPoint = this.itemToIndicatorEnd.bind(this);\n        pointToPosition = (pt) => [pt.x, pt.y];\n        this.renderIndicatorDistanceAxis(this.valueScaleInverted);\n      }\n\n      // dataToPoint must be a reducer.\n      dataToPoint = this.itemToIndicatorReducer(dataToPoint);\n\n      this.renderIndicatorPoints(\n        dataToPoint,\n        pointToPosition,\n        pointToOpacity,\n        pointToFocused,\n        {\n          fragmentShader,\n          drawTriangles,\n        }\n      );\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      this.updateScales();\n      this.updateWidthHistograms();\n      if (this.options.arcStyle === 'indicator') this.updateIndicators();\n    }\n\n    // Gets called on every draw call\n    drawTile(tile, storePolyStr) {\n      tile.graphics.clear();\n\n      if (!tile.tileData.length) return;\n\n      if (this.options.arcStyle === 'indicator') {\n        const [width, height] = this.dimensions;\n\n        if (this.options.indicatorStyle.startsWith('category')) {\n          if (!this.options.stratification.axisNoGroupColor) {\n            let yStart = 0;\n            let yEnd = 0;\n            this.groupSizes.forEach((size, i) => {\n              yEnd += this.categoryHeightScale(size);\n\n              tile.graphics.beginFill(this.groupToColor.get(i)[1]);\n              tile.graphics.drawRect(0, yStart, width, Math.abs(yEnd - yStart));\n\n              yStart = yEnd;\n            });\n            tile.graphics.endFill();\n          }\n        } else {\n          let y = Math.round(height / 2) - 0.5;\n\n          if (this.options.indicatorStyle === 'start-only') {\n            y = height - 0.5;\n          } else if (this.options.indicatorStyle === 'end-only') {\n            y = 0.5;\n          }\n          tile.graphics.lineStyle(1, 0, 0.2);\n          tile.graphics.moveTo(0, y);\n          tile.graphics.lineTo(width, y);\n        }\n      }\n\n      for (let i = 0; i < tile.tileData.length; i++) {\n        const item = tile.tileData[i];\n\n        if (this.options.arcStyle === 'circle') {\n          this.drawCircle(tile.graphics, item, storePolyStr);\n        } else if (this.options.arcStyle === 'indicator') {\n          // this.drawIndicator(tile.graphics, this.itemToIndicator(item));\n        } else {\n          this.drawEllipse(tile.graphics, item, storePolyStr);\n        }\n      }\n    }\n\n    drawIndicator(graphics, item) {\n      const startX = this._xScale(item.start);\n      const endX = this._xScale(item.end);\n      const startY = this.outgoingHeightScale(item.width);\n      const endY = this.incomingHeightScale(item.width);\n\n      const opacity = this.opacityScale(this.getImportance(item));\n\n      graphics.lineStyle(0, 0, 0);\n\n      graphics.beginFill(0x3d8cd9, opacity);\n      graphics.drawCircle(startX, startY, this.pointSize);\n      graphics.endFill();\n\n      graphics.beginFill(0xc17da5, opacity);\n      graphics.drawCircle(endX, endY, this.pointSize);\n      graphics.endFill();\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        graphics.lineStyle(this.pointSize, 0xc17da5, opacity);\n        graphics.moveTo(startX, endY);\n        graphics.lineTo(endX, endY);\n        graphics.endFill();\n      }\n    }\n\n    drawCircle(graphics, item, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [trackWidth, trackHeight] = this.dimensions;\n      const [, trackY] = this.position;\n\n      const h = (x2 - x1) / 2;\n      const d = (x2 - x1) / 2;\n      const r = (d * d + h * h) / (2 * h);\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight - h + r;\n\n      let polyStr = '';\n\n      if (storePolyStr) {\n        polyStr += `M${x1},${trackY + trackHeight}`;\n      }\n\n      graphics.moveTo(x1, trackY + trackHeight);\n\n      const limitX1 = Math.max(0, x1);\n      const limitX2 = Math.min(trackWidth, x2);\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const startAngle = Math.acos(\n        Math.min(Math.max(-(limitX1 - cx) / r, -1), 1)\n      );\n      let endAngle = Math.acos(Math.min(Math.max(-(limitX2 - cx) / r, -1), 1));\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      const resolution = 10;\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = r * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    drawEllipse(graphics, item, heightScale, opacityScale, storePolyStr) {\n      const x1 = this._xScale(item.start);\n      const x2 = this._xScale(item.end);\n      const [, trackHeight] = this.dimensions;\n\n      const h = this.heightScale(item.width);\n      const w = x2 - x1;\n      const r = w / 2;\n\n      const cx = (x1 + x2) / 2;\n      let cy = trackHeight;\n      const startAngle = 0;\n      let endAngle = Math.PI;\n\n      let polyStr = '';\n      if (storePolyStr) polyStr += `M${x1},${trackHeight}`;\n      graphics.moveTo(x1, trackHeight);\n\n      if (this.options.flip) {\n        cy = 0;\n        endAngle = -Math.PI;\n        graphics.moveTo(x1, 0);\n        if (storePolyStr) polyStr += `M${x1},0`;\n      }\n\n      let color = this.markColor;\n      let size = this.markSize;\n      let opacity = this.markOpacity;\n\n      if (\n        item.start <= this.focusRegion[1] &&\n        item.end >= this.focusRegion[0] &&\n        (item.start >= this.focusRegion[0] || item.end <= this.focusRegion[1])\n      ) {\n        color = this.markColorFocus;\n        size = this.markSizeFocus;\n        opacity = this.markOpacityFocus;\n      }\n\n      graphics.lineStyle(size, color, opacity);\n\n      const resolution = Math.round(Math.abs(w) / 200) * 10;\n\n      const angleScale = scaleLinear()\n        .domain([0, resolution - 1])\n        .range([startAngle, endAngle]);\n\n      for (let k = 0; k < resolution; k++) {\n        const ax = r * Math.cos(angleScale(k));\n        const ay = h * Math.sin(angleScale(k));\n\n        const rx = cx - ax;\n        const ry = cy - ay;\n\n        graphics.lineTo(rx, ry);\n        if (storePolyStr) polyStr += `L${rx},${ry}`;\n      }\n\n      if (storePolyStr) {\n        this.polys.push({\n          polyStr,\n          opacity,\n        });\n      }\n    }\n\n    getMouseOverHtml() {}\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-arcs-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const strokeColor = this.options.strokeColor\n        ? this.options.strokeColor\n        : 'blue';\n      const strokeWidth = this.options.strokeWidth\n        ? this.options.strokeWidth\n        : 2;\n\n      this.visibleAndFetchedTiles().forEach((tile) => {\n        this.polys = [];\n\n        // call drawTile with storePolyStr = true so that\n        // we record path strings to use in the SVG\n        this.drawTile(tile, true);\n\n        for (const { polyStr, opacity } of this.polys) {\n          const g = document.createElement('path');\n          g.setAttribute('fill', 'transparent');\n          g.setAttribute('stroke', strokeColor);\n          g.setAttribute('stroke-width', strokeWidth);\n          g.setAttribute('opacity', opacity);\n\n          g.setAttribute('d', polyStr);\n          output.appendChild(g);\n        }\n      });\n      return [base, track];\n    }\n  }\n\n  return new ScalableArcs1dTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateScalableArcs1dTrack.config = {\n  type: '1d-arcs',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createScalableArcs1dTrack;\n","const MAX_RADIUS = 2;\nconst MAX_RADIUS_EXTENSION = 2;\n\n// const VS = `\n//   attribute vec2 aPosition;\n\n//   uniform mat3 projectionMatrix;\n//   uniform mat3 translationMatrix;\n//   uniform float uPointSize;\n//   uniform vec4 uColor;\n\n//   varying vec4 vColor;\n\n//   void main(void)\n//   {\n//     vColor = uColor;\n//     gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n//     gl_PointSize = uPointSize;\n//   }\n// `;\n\n// const FS_ROUND = `\n//   #ifdef GL_OES_standard_derivatives\n//   #extension GL_OES_standard_derivatives : enable\n//   #endif\n\n//   precision mediump float;\n\n//   varying vec4 vColor;\n\n//   void main() {\n//     float r = 0.0, delta = 0.0, alpha = 1.0;\n//     vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n//     r = dot(cxy, cxy);\n\n//     #ifdef GL_OES_standard_derivatives\n//       delta = fwidth(r);\n//       alpha = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n//     #endif\n\n//     gl_FragColor = vec4(vColor.rgb, alpha * vColor.a);\n//   }\n// `;\n\n// const FS_SQUARE = `\n//   precision mediump float;\n//   varying vec4 vColor;\n\n//   void main() {\n//     gl_FragColor = vec4(vColor.rgb, vColor.a);\n//   }\n// `;\n\n// const DEFAULT_GROUP_COLORS = [\n//   '#c17da5',\n//   '#c76526',\n//   '#dca237',\n//   '#eee462',\n//   '#469b76',\n//   '#3170ad',\n//   '#6fb2e4',\n//   '#000000',\n//   '#999999',\n// ];\n\n// const DEFAULT_GROUP_COLORS_DARK = [\n//   '#a1688a',\n//   '#a65420',\n//   '#b7872e',\n//   '#9f9841',\n//   '#3a8162',\n//   '#295d90',\n//   '#4a7798',\n//   '#000000',\n//   '#666666',\n// ];\n\n// const DEFAULT_GROUP_COLORS_LIGHT = [\n//   '#f5e9f0',\n//   '#f6e5db',\n//   '#f9f0de',\n//   '#fcfbe5',\n//   '#e0eee8',\n//   '#dde7f1',\n//   '#e7f2fb',\n//   '#d5d5d5',\n//   '#ffffff',\n// ];\n\n// const scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n//   const tileK =\n//     (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n//     (xScale.domain()[1] - xScale.domain()[0]);\n//   const newRange = xScale.domain().map(drawnAtScale);\n\n//   const posOffset = newRange[0];\n//   graphics.scale.x = tileK;\n//   graphics.position.x = -posOffset * tileK;\n// };\n\nconst createSnpTrack = function createSnpTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { range } = HGC.libraries.d3Array;\n  const { scaleBand } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  class SnpTrack extends HGC.tracks.BedLikeTrack {\n    setValueScale() {\n      this.valueScale = null;\n      if (this.options && this.options.valueColumn) {\n        const min = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[0]\n          : this.minVisibleValueInTiles(+this.options.valueColumn);\n        const max = this.options.colorEncodingRange\n          ? +this.options.colorEncodingRange[1]\n          : this.maxVisibleValueInTiles(+this.options.valueColumn);\n\n        if (this.options.valueColumn) {\n          [this.valueScale] = this.makeValueScale(\n            min,\n            this.calculateMedianVisibleValue(+this.options.valueColumn),\n            max,\n            2\n          );\n        }\n      }\n    }\n\n    finalDotYPos(y, r) {\n      return Math.max(r, Math.min(this.dimensions[1] - r, y));\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = Math.max(MAX_RADIUS, xEndPos - xStartPos);\n      const radius = anchorRadius * (1 + MAX_RADIUS_EXTENSION * doubleRadius);\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const rowScale = scaleBand()\n        .domain(range(maxRows))\n        .range([startY, endY])\n        .paddingInner(0);\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n          let yMiddle = rowScale(j) + rowScale.step() / 2;\n\n          if (this.valueScale) {\n            yMiddle = this.valueScale(+geneInfo[+this.options.valueColumn - 1]);\n          }\n\n          const rectY = yMiddle;\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = [xStartPos, xEndPos, rectY, td, txStart, txEnd];\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        // 1. draw white background to make clicking easier\n        tile.rectGraphics.lineStyle(0);\n        tile.rectGraphics.beginFill(0xffffff);\n        circleDraws.forEach((circleDraw) => {\n          this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2],\n            true\n          );\n        });\n\n        // 2. Now draw the normal circles\n        let color = this.options.markColor || 'black';\n        let opacity = this.options.fillOpacity || 0.3;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n\n        // 2. Now draw the focused circles\n        color = this.options.markColorFocus || 'red';\n        opacity = this.options.markOpacityFocus || 0.6;\n        tile.rectGraphics.lineStyle(1, colorToHex(color), opacity);\n        tile.rectGraphics.beginFill(colorToHex(color), opacity);\n        circleFocusDraws.forEach((circleDraw) => {\n          const drawnPoly = this.drawPoly(\n            tile,\n            circleDraw[0],\n            circleDraw[1],\n            circleDraw[2]\n          );\n          this.drawnRects[zoomLevel][circleDraw[4].uid] = [\n            drawnPoly,\n            {\n              start: circleDraw[4],\n              end: circleDraw[5],\n              value: circleDraw[3],\n              tile,\n              fill,\n            },\n            tile.tileId,\n          ];\n        });\n        tile.rectGraphics.endFill();\n      }\n\n      tile.rectGraphics.interactive = true;\n      tile.rectGraphics.buttonMode = true;\n      tile.rectGraphics.mouseup = (event) => {\n        if (this.hoveringSnp) {\n          this.pubSub.publish('app.click', {\n            type: 'snp',\n            event,\n            payload: this.hoveringSnp,\n          });\n        }\n      };\n\n      return [circleDraws, circleFocusDraws];\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      this.hoveringSnp = undefined;\n\n      if (!this.tilesetInfo || !this.options.toolTip) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const genomePos = this._xScale.invert(trackX);\n      const relTilePos = genomePos / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      let minDist = 3;\n      fetchedTile.tileData.forEach((item) => {\n        const dist = Math.abs(this._xScale(item.xStart) - trackX);\n        if (dist < minDist) {\n          this.hoveringSnp = item;\n          minDist = dist;\n        }\n      });\n\n      if (!this.hoveringSnp) return '';\n\n      const itemY = this.finalDotYPos(\n        this.valueScale(this.hoveringSnp.importance),\n        2\n      );\n\n      if (\n        Math.abs(itemY - (trackY - 1)) >\n        MAX_RADIUS * (MAX_RADIUS_EXTENSION + 1)\n      )\n        return '';\n\n      const name = this.hoveringSnp.fields[this.options.toolTip.name.field];\n      const value = (+this.hoveringSnp.fields[\n        this.options.toolTip.value.field\n      ]).toFixed(this.options.toolTip.value.numDecimals || 2);\n      let otherStr = '';\n\n      if (this.options.toolTip.other) {\n        this.options.toolTip.other.forEach((other) => {\n          const label = other.label || '';\n          const v = (+this.hoveringSnp.fields[other.field]).toFixed(\n            other.numDecimals || 2\n          );\n          otherStr += `${label}: ${v};`;\n        });\n        otherStr = ` (${otherStr.substr(0, otherStr.length - 1)})`;\n      }\n\n      return `<div><strong>${name}:</strong> ${value}${otherStr}</div>`;\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.exportSVG();\n\n      base.setAttribute('class', 'exported-snp-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      this.visibleAndFetchedTiles()\n        .filter((tile) => tile.plusStrandRows)\n        .forEach((tile) => {\n          // call drawTile with storePolyStr = true so that\n          // we record path strings to use in the SVG\n          const [circles, focusedCircles] = this.renderRows(\n            tile,\n            tile.plusStrandRows,\n            tile.plusStrandRows.length,\n            0,\n            this.dimensions[1],\n            'blue'\n          );\n\n          circles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColor || 'black');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacity || 0.33);\n            c.setAttribute('r', this.options.markSize);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n\n          focusedCircles.forEach((circle) => {\n            const c = document.createElement('circle');\n            c.setAttribute('fill', this.options.markColorFocus || 'red');\n            c.setAttribute('stroke-width', 0);\n            c.setAttribute('opacity', this.options.markOpacityFocus || 0.66);\n            c.setAttribute('r', this.options.markSize + 1);\n            c.setAttribute('cx', circle[0]);\n            c.setAttribute('cy', circle[2]);\n            output.appendChild(c);\n          });\n        });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new SnpTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateSnpTrack.config = {\n  type: 'point-annotation',\n  datatype: ['arcs', 'bedlike'],\n  orientation: '1d',\n  name: 'Arcs1D',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createSnpTrack;\n","import {\n  DEFAULT_COLOR_MAP,\n  DEFAULT_COLOR_MAP_DARK,\n  DEFAULT_COLOR_MAP_LIGHT,\n} from './constants';\nimport { createColorTexture } from './utils';\n\nconst DEFAULT_TILE_SIZE = 1024;\n\nconst DEFAULT_BIN_SIZE = 8; // 8 \"tile-pixels\" make up one bin by default\n\nconst VS = `\nprecision mediump float;\nattribute vec2 aPosition;\nattribute float aColorIdx;\nattribute float aFocused;\n\nuniform mat3 projectionMatrix;\nuniform mat3 translationMatrix;\nuniform sampler2D uColorMapTex;\nuniform float uColorMapTexRes;\nuniform sampler2D uColorMapFocusTex;\nuniform float uColorMapFocusTexRes;\n\nvarying vec4 vColor;\nvarying vec4 vColorFocused;\nvarying float vFocused;\n\nvoid main(void)\n{\n  // Half a texel (i.e., pixel in texture coordinates)\n  float eps = 0.5 / uColorMapTexRes;\n  float colorRowIndex = floor((aColorIdx + eps) / uColorMapTexRes);\n  vec2 colorTexIndex = vec2(\n    (aColorIdx / uColorMapTexRes) - colorRowIndex + eps,\n    (colorRowIndex / uColorMapTexRes) + eps\n  );\n  vColor = texture2D(uColorMapTex, colorTexIndex);\n\n  float eps2 = 0.5 / uColorMapFocusTexRes;\n  float colorRowIndex2 = floor((aColorIdx + eps2) / uColorMapFocusTexRes);\n  vec2 colorTexIndex2 = vec2(\n    (aColorIdx / uColorMapFocusTexRes) - colorRowIndex2 + eps2,\n    (colorRowIndex2 / uColorMapFocusTexRes) + eps2\n  );\n  vColorFocused = texture2D(uColorMapFocusTex, colorTexIndex2);\n\n  vFocused = aFocused;\n\n  gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aPosition, 1.0)).xy, 0.0, 1.0);\n}\n`;\n\nconst FS = `\n  precision mediump float;\n\n  varying vec4 vColor;\n  varying vec4 vColorFocused;\n  varying float vFocused;\n\n  void main() {\n    float isNotFocused = 1.0 - vFocused;\n\n    float r = vColor.r * isNotFocused + vColorFocused.r * vFocused;\n    float g = vColor.g * isNotFocused + vColorFocused.g * vFocused;\n    float b = vColor.b * isNotFocused + vColorFocused.b * vFocused;\n\n    gl_FragColor = vec4(r, g, b, 1.0);\n  }\n`;\n\nconst getIs2d = (tile) =>\n  tile.tileData.length && tile.tileData[0].yStart !== undefined;\n\nconst get1dStart = (item) => item.xStart;\n\nconst get2dStart = (item) => item.xStart + (item.xEnd - item.xStart) / 2;\n\nconst get1dEnd = (item) => item.xEnd;\n\nconst get2dEnd = (item) => item.yStart + (item.yEnd - item.yStart) / 2;\n\nconst getHistMax = (fetchedTiles) =>\n  fetchedTiles.reduce(\n    (histMax, tile) => Math.max(histMax, tile.histogramMax),\n    0\n  );\n\nconst scaleScalableGraphics = (graphics, xScale, drawnAtScale) => {\n  const tileK =\n    (drawnAtScale.domain()[1] - drawnAtScale.domain()[0]) /\n    (xScale.domain()[1] - xScale.domain()[0]);\n  const newRange = xScale.domain().map(drawnAtScale);\n\n  const posOffset = newRange[0];\n  graphics.scale.x = tileK;\n  graphics.position.x = -posOffset * tileK;\n};\n\n// prettier-ignore\nconst segmentToPosition = (segment) => [\n  segment.xStart, segment.yStart,\n  segment.xEnd, segment.yStart,\n  segment.xEnd, segment.yEnd,\n  segment.xStart, segment.yStart,\n  segment.xStart, segment.yEnd,\n  segment.xEnd, segment.yEnd,\n];\n\nconst segmentToColorIdx = (segment) => [\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n  segment.colorIdx,\n];\n\nconst segmentToFocused = (segment) => [\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n  segment.focused,\n];\n\nconst createStackedBarTrack = function createStackedBarTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  const { PIXI } = HGC.libraries;\n  const { scaleLinear, scaleLog } = HGC.libraries.d3Scale;\n  const { tileProxy } = HGC.services;\n  const { colorToHex } = HGC.utils;\n\n  const opacityLogScale = scaleLog()\n    .domain([1, 10])\n    .range([0.1, 1])\n    .clamp(true);\n\n  const toRgbNorm = (color) =>\n    HGC.utils\n      .colorToRgba(color)\n      .slice(0, 3)\n      .map((x) => Math.min(1, Math.max(0, x / 255)));\n\n  class StackedBarTrack extends HGC.tracks.HorizontalLine1DPixiTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      this.updateOptions();\n    }\n\n    initTile(tile) {\n      const is2d = getIs2d(tile);\n      const getStart = is2d ? get2dStart : get1dStart;\n      const getEnd = is2d ? get2dEnd : get1dEnd;\n\n      tile.tileData.forEach((item) => {\n        item.start = getStart(item);\n        item.end = getEnd(item);\n        item.isLeftToRight = item.start < item.end;\n      });\n\n      tile.histogramMax = 0;\n\n      this.updateTileFocusMap(tile);\n    }\n\n    updateTileHistogram(tile) {\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n      const binSize = tileWidth / this.numBins;\n\n      tile.binXPos = new Float32Array(this.numBins + 1);\n      tile.histogram1d = new Float32Array(this.numBins);\n      tile.histogram2d = new Float32Array(this.numBins * this.numGroups);\n      tile.histogram2dNumPred = new Uint8Array(this.numBins * this.numGroups);\n\n      let max = 0;\n\n      // Determine bin boundaries\n      for (let i = 0; i <= this.numBins; i++) {\n        tile.binXPos[i] = tileX + binSize * i;\n      }\n\n      const categoryBinHash = new Map();\n\n      tile.tileData.forEach((item) => {\n        const group = this.categoryToGroup.get(\n          item.fields[this.categoryField].toLowerCase()\n        );\n        const maxBinId = this.numBins - 1;\n        const binStart = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xStart - tileX) / binSize))\n        );\n        const binEnd = Math.max(\n          0,\n          Math.min(maxBinId, Math.round((item.xEnd - tileX) / binSize))\n        );\n        const numBins = Math.abs(binEnd - binStart);\n        const score = this.getImportance(item);\n        const category = this.getCategory(item);\n        const base = group * this.numBins;\n\n        for (let i = 0; i <= numBins; i++) {\n          const bin = binStart + i;\n          const histIdx = base + bin;\n\n          const binHash = categoryBinHash.get(category) || {};\n\n          // Make sure we count multiple enhancer predictions of the same biosample and bin only once (i.e., summing up)\n          if (!binHash[bin]) {\n            binHash[bin] = binHash[bin] || score > 0;\n            tile.histogram2dNumPred[histIdx] += binHash[bin];\n            categoryBinHash.set(category, binHash);\n          }\n\n          tile.histogram2d[histIdx] += score;\n          tile.histogram1d[bin] += score;\n\n          max = Math.max(max, tile.histogram1d[bin]);\n        }\n      });\n\n      tile.histogramMax = max;\n    }\n\n    updateHistograms() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileHistogram.bind(this)\n      );\n    }\n\n    updateTileFocusMap(tile) {\n      tile.focusMap = new Float32Array(this.numBins);\n\n      const { tileX, tileWidth } = this.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos\n      );\n\n      if (\n        tileX <= this.focusRegion[1] &&\n        tileX + tileWidth >= this.focusRegion[0]\n      ) {\n        const binSize = tileWidth / this.numBins;\n\n        const binStart = Math.max(\n          0,\n          Math.round((this.focusRegion[0] - tileX) / binSize)\n        );\n        const binEnd = Math.min(\n          this.numBins - 1,\n          Math.round((this.focusRegion[1] - tileX) / binSize)\n        );\n        const numBins = Math.abs(binEnd - binStart);\n\n        for (let i = 0; i <= numBins; i++) {\n          tile.focusMap[i] = 1;\n        }\n      }\n    }\n\n    updateFocusMap() {\n      Object.values(this.fetchedTiles).forEach(\n        this.updateTileFocusMap.bind(this)\n      );\n    }\n\n    updateStratificationOption() {\n      if (!this.options.stratification) {\n        this.categoryField = undefined;\n        this.categoryToGroup = undefined;\n        this.groupToColor = undefined;\n        this.numGroups = 0;\n        this.numCategories = 0;\n        this.groupLabels = [];\n        return;\n      }\n\n      this.categoryField = this.options.stratification.categoryField;\n      this.getCategory = (item) =>\n        item.fields[this.categoryField].toLowerCase();\n      this.categoryToGroup = new Map();\n      this.categoryToY = new Map();\n      this.groupToColor = new Map();\n      this.numGroups = this.options.stratification.groups.length;\n      this.groupSizes = this.options.stratification.groups.map(\n        (group) => group.categories.length\n      );\n      this.numCategories = this.groupSizes.reduce(\n        (numCategories, groupSize) => numCategories + groupSize,\n        0\n      );\n      this.groupLabels = this.options.stratification.groups.map(\n        (group, i) => group.label || `Group ${i}`\n      );\n\n      let k = 0;\n      this.options.stratification.groups.forEach((group, i) => {\n        this.groupToColor.set(i, [\n          colorToHex(\n            group.color || DEFAULT_COLOR_MAP[i % DEFAULT_COLOR_MAP.length]\n          ),\n          colorToHex(\n            group.backgroundColor ||\n              DEFAULT_COLOR_MAP_LIGHT[i % DEFAULT_COLOR_MAP_LIGHT.length]\n          ),\n        ]);\n        group.categories.forEach((category, j) => {\n          this.categoryToGroup.set(category.toLowerCase(), i);\n          this.categoryToY.set(category.toLowerCase(), k + j);\n        });\n        k += group.categories.length;\n      });\n\n      this.groupLabelsPixiText = this.groupLabels.map(\n        (label, i) =>\n          new PIXI.Text(label, {\n            fontSize: this.labelSize,\n            // fill: this.labelColor,\n            align: this.axisAlign === 'right' ? 'right' : 'left',\n            fill: colorToHex(\n              this.options.stratification.groups[i].axisLabelColor ||\n                DEFAULT_COLOR_MAP_DARK[i % DEFAULT_COLOR_MAP_DARK.length]\n            ),\n          })\n      );\n    }\n\n    updateOptions() {\n      this.axisAlign = this.options.axisAlign || 'left';\n\n      this.labelColor = colorToHex(this.options.labelColor || 'black');\n\n      this.labelSize = this.options.labelSize || 12;\n\n      this.colorMap = this.options.colorMap || [...DEFAULT_COLOR_MAP];\n\n      this.colorMapRgbNorm = this.colorMap.map(toRgbNorm);\n\n      [this.colorMapTex, this.colorMapTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapRgbNorm\n      );\n\n      this.colorMapFocus = this.options.colorMapFocus || [\n        ...DEFAULT_COLOR_MAP_DARK,\n      ];\n\n      this.colorMapFocusRgbNorm = this.colorMapFocus.map(toRgbNorm);\n\n      [this.colorMapFocusTex, this.colorMapFocusTexRes] = createColorTexture(\n        PIXI,\n        this.colorMapFocusRgbNorm\n      );\n\n      this.markColor = colorToHex(this.options.markColor || 'black');\n\n      this.markColorRgbNorm = this.options.markColor\n        ? toRgbNorm(this.options.markColor)\n        : [0, 0, 0];\n\n      this.markOpacity = Number.isNaN(+this.options.markOpacity)\n        ? 1\n        : Math.min(1, Math.max(0, +this.options.markOpacity));\n\n      this.markSize = this.options.markSize || 2;\n\n      this.markColorFocus = colorToHex(this.options.markColorFocus || 'red');\n\n      this.markColorFocusRgbNorm = this.options.markColorFocus\n        ? toRgbNorm(this.options.markColorFocus)\n        : [1, 0, 0];\n\n      this.markOpacityFocus = Number.isNaN(+this.options.markOpacityFocus)\n        ? this.markOpacity\n        : Math.min(1, Math.max(0, +this.options.markOpacityFocus));\n\n      this.markSizeFocus = this.options.markSizeFocus || this.markSize;\n\n      this.binSize = this.options.binSize || DEFAULT_BIN_SIZE;\n\n      this.numBins = this.tilesetInfo\n        ? Math.round(this.tilesetInfo.tile_size / this.binSize)\n        : DEFAULT_TILE_SIZE / this.binSize;\n\n      this.getImportance = this.options.importanceField\n        ? (item) => +item.fields[this.options.importanceField]\n        : () => 1;\n\n      const importanceDomain = this.options.importanceDomain || [1000, 1];\n\n      const opacityLinearScale = scaleLinear()\n        .domain(importanceDomain)\n        .range([1, 10]);\n\n      this.opacityScale = (x) => opacityLogScale(opacityLinearScale(x));\n\n      this.focusRegion = this.options.focusRegion\n        ? this.options.focusRegion\n        : [Infinity, Infinity];\n\n      this.focusGene = this.options.focusGene\n        ? this.options.focusGene.toLowerCase()\n        : undefined;\n\n      this.getGene = this.options.geneField\n        ? (item) => item.fields[this.options.geneField].toLowerCase()\n        : undefined;\n\n      this.minImportance = this.options.minImportance || 0;\n\n      this.updateStratificationOption();\n\n      this.updateFocusMap();\n      this.updateHistograms();\n      this.updateScales();\n    }\n\n    refreshTiles(...brgs) {\n      super.refreshTiles(...brgs);\n      if (this.tilesetInfo) {\n        const oldNumBins = this.numBins;\n        this.numBins = Math.round(this.tilesetInfo.tile_size / this.binSize);\n        if (oldNumBins !== this.numBins) {\n          this.updateHistograms();\n          this.updateScales();\n        }\n      }\n    }\n\n    rerender(newOptions) {\n      this.options = newOptions;\n      this.updateOptions();\n      this.updateExistingGraphics();\n    }\n\n    updateScales() {\n      const fetchedTiles = Object.values(this.fetchedTiles);\n\n      if (!fetchedTiles.length) return;\n\n      const [, height] = this.dimensions;\n\n      this.histMax = getHistMax(fetchedTiles);\n\n      this.heightScale = scaleLinear()\n        .domain([0, this.histMax])\n        .range([height, 0]);\n\n      this.valueScale = this.heightScale;\n\n      this.valueScaleInverted = scaleLinear()\n        .domain([0, this.histMax])\n        .range([0, height]);\n    }\n\n    itemToPoint(item) {\n      return {\n        xStart: this._xScale(item.start),\n        xEnd: this._xScale(item.start),\n        yStart: this.heightScale(\n          this.categoryToY.get(item.fields[this.categoryField].toLowerCase())\n        ),\n        yEnd: () => {},\n        opacity: this.opacityScale(this.getImportance(item)),\n        focused:\n          item.xStart <= this.focusRegion[1] &&\n          item.xEnd >= this.focusRegion[0],\n      };\n    }\n\n    histToSegments(tile) {\n      const segments = [];\n\n      for (let i = 0; i < this.numBins; i++) {\n        let cumHeight = 0;\n        if (tile.histogram1d[i] > 0) {\n          for (let j = 0; j < this.numGroups; j++) {\n            const height = tile.histogram2d[j * this.numBins + i];\n\n            if (height) {\n              segments.push({\n                xStart: this._xScale(tile.binXPos[i]),\n                xEnd: this._xScale(tile.binXPos[i + 1]),\n                yStart: this.heightScale(cumHeight),\n                yEnd: this.heightScale(cumHeight + height),\n                colorIdx: j % this.colorMap.length,\n                focused: tile.focusMap[i],\n              });\n\n              cumHeight += height;\n            }\n          }\n        }\n      }\n\n      return segments;\n    }\n\n    renderStackedBars() {\n      this.drawnAtScale = scaleLinear()\n        .domain([...this.xScale().domain()])\n        .range([...this.xScale().range()]);\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      const positions = new Float32Array(segments.flatMap(segmentToPosition));\n      const colorIdxs = new Float32Array(segments.flatMap(segmentToColorIdx));\n      const focused = new Float32Array(segments.flatMap(segmentToFocused));\n\n      const uniforms = new PIXI.UniformGroup({\n        uColorMapTex: this.colorMapTex,\n        uColorMapTexRes: this.colorMapTexRes,\n        uColorMapFocus: this.colorMapFocusTex,\n        uColorMapFocusTexRes: this.colorMapFocusTexRes,\n      });\n\n      const shader = PIXI.Shader.from(VS, FS, uniforms);\n\n      const geometry = new PIXI.Geometry();\n      geometry.addAttribute('aPosition', positions, 2);\n      geometry.addAttribute('aColorIdx', colorIdxs, 1);\n      geometry.addAttribute('aFocused', focused, 1);\n\n      const mesh = new PIXI.Mesh(\n        geometry,\n        shader,\n        new PIXI.State(),\n        PIXI.DRAW_MODES.TRIANGLES\n      );\n\n      const newGraphics = new PIXI.Graphics();\n      newGraphics.addChild(mesh);\n\n      // eslint-disable-next-line\n      this.pMain.x = this.position[0];\n\n      if (this.indicatorPointGraphics) {\n        this.pMain.removeChild(this.indicatorPointGraphics);\n      }\n\n      this.pMain.addChild(newGraphics);\n      this.indicatorPointGraphics = newGraphics;\n\n      scaleScalableGraphics(\n        this.indicatorPointGraphics,\n        this._xScale,\n        this.drawnAtScale\n      );\n\n      this.draw();\n      this.animate();\n    }\n\n    renderTrack() {\n      this.drawAxis(this.valueScaleInverted);\n      this.renderStackedBars();\n    }\n\n    hasFetchedTiles() {\n      return Object.values(this.fetchedTiles).length;\n    }\n\n    // Called whenever a new tile comes in\n    updateExistingGraphics() {\n      if (!this.hasFetchedTiles()) return;\n      this.updateHistograms();\n      this.updateScales();\n      this.renderTrack();\n    }\n\n    /**\n     * Shows value and type for each bar\n     *\n     * @param trackX relative x-coordinate of mouse\n     * @param trackY relative y-coordinate of mouse\n     * @returns string with embedded values and svg square for color\n     */\n    getMouseOverHtml(trackX, trackY) {\n      if (!this.tilesetInfo) return '';\n\n      const zoomLevel = this.calculateZoomLevel();\n      const tileWidth = tileProxy.calculateTileWidth(\n        this.tilesetInfo,\n        zoomLevel,\n        this.tilesetInfo.tile_size\n      );\n\n      // the position of the tile containing the query position\n      const relTilePos = this._xScale.invert(trackX) / tileWidth;\n      const tilePos = Math.floor(relTilePos);\n      const tileId = this.tileToLocalId([zoomLevel, tilePos]);\n      const fetchedTile = this.fetchedTiles[tileId];\n\n      if (!fetchedTile) return '';\n\n      const relPos = relTilePos - tilePos;\n      const binXPos = Math.floor(this.numBins * relPos);\n\n      const rowCumSum = [];\n      const rowNumPred = [];\n      let totalPred = 0;\n      let sum = 0;\n      for (let i = 0; i < this.numGroups; i++) {\n        sum += fetchedTile.histogram2d[i * this.numBins + binXPos];\n        const numPred =\n          fetchedTile.histogram2dNumPred[i * this.numBins + binXPos];\n        rowNumPred.push(numPred);\n        totalPred += numPred;\n        rowCumSum.push(sum);\n      }\n\n      const relYPos = this.heightScale.invert(trackY);\n      const group = rowCumSum.findIndex((cumHeight) => cumHeight > relYPos);\n\n      if (group >= 0) {\n        const [color, bg] = this.groupToColor.get(group);\n        const colorHex = `#${color.toString(16)}`;\n        const bgHex = `#${bg.toString(16)}`;\n        const value =\n          fetchedTile.histogram2dNumPred[group * this.numBins + binXPos];\n        return `<div style=\"margin: -0.25rem; padding: 0 0.25rem; background: ${bgHex}\"><strong style=\"color: ${colorHex};\">${this.groupLabels[group]}:</strong> ${value} of ${totalPred} samples</div>`;\n      }\n\n      return '';\n    }\n\n    setPosition(newPosition) {\n      super.setPosition(newPosition);\n\n      [this.pMain.position.x, this.pMain.position.y] = this.position;\n    }\n\n    zoomed(newXScale, newYScale) {\n      this.xScale(newXScale);\n      this.yScale(newYScale);\n\n      if (this.indicatorPointGraphics) {\n        scaleScalableGraphics(\n          this.indicatorPointGraphics,\n          newXScale,\n          this.drawnAtScale\n        );\n      }\n\n      this.refreshTiles();\n      this.draw();\n    }\n\n    /**\n     * Export an SVG representation of this track\n     *\n     * @returns {Array} The two returned DOM nodes are both SVG\n     * elements [base,track]. Base is a parent which contains track as a\n     * child. Track is clipped with a clipping rectangle contained in base.\n     *\n     */\n    exportSVG() {\n      let track = null;\n      let base = null;\n\n      [base, track] = super.superSVG();\n\n      base.setAttribute('class', 'exported-stacked-bar-track');\n      const output = document.createElement('g');\n\n      track.appendChild(output);\n      output.setAttribute(\n        'transform',\n        `translate(${this.position[0]},${this.position[1]})`\n      );\n\n      const segments = Object.values(this.fetchedTiles).flatMap(\n        this.histToSegments.bind(this)\n      );\n\n      segments.forEach(({ xStart, xEnd, yStart, yEnd, colorIdx }) => {\n        const r = document.createElement('rect');\n\n        r.setAttribute('x', xEnd);\n        r.setAttribute('y', yEnd);\n        r.setAttribute('width', Math.abs(xEnd - xStart));\n        r.setAttribute('height', Math.abs(yEnd - yStart));\n        r.setAttribute('fill', this.colorMap[colorIdx]);\n        r.setAttribute('stroke-width', 0);\n\n        output.appendChild(r);\n      });\n\n      const gAxis = document.createElement('g');\n      gAxis.setAttribute('id', 'axis');\n\n      // append the axis to base so that it's not clipped\n      base.appendChild(gAxis);\n      gAxis.setAttribute(\n        'transform',\n        `translate(${this.axis.pAxis.position.x}, ${this.axis.pAxis.position.y})`\n      );\n\n      if (\n        this.options.axisPositionHorizontal === 'left' ||\n        this.options.axisPositionVertical === 'top'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisLeftSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      } else if (\n        this.options.axisPositionHorizontal === 'right' ||\n        this.options.axisPositionVertical === 'bottom'\n      ) {\n        const gDrawnAxis = this.axis.exportAxisRightSVG(\n          this.valueScale,\n          this.dimensions[1]\n        );\n        gAxis.appendChild(gDrawnAxis);\n      }\n\n      return [base, track];\n    }\n  }\n\n  return new StackedBarTrack(...args);\n};\n\nconst icon =\n  '<svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.5\"><path d=\"M4 2.1L.5 3.5v12l5-2 5 2 5-2v-12l-5 2-3.17-1.268\" fill=\"none\" stroke=\"currentColor\"/><path d=\"M10.5 3.5v12\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-dasharray=\"1,2,0,0\"/><path d=\"M5.5 13.5V6\" fill=\"none\" stroke=\"currentColor\" stroke-opacity=\".33\" stroke-width=\".9969299999999999\" stroke-dasharray=\"1.71,3.43,0,0\"/><path d=\"M9.03 5l.053.003.054.006.054.008.054.012.052.015.052.017.05.02.05.024 4 2 .048.026.048.03.046.03.044.034.042.037.04.04.037.04.036.042.032.045.03.047.028.048.025.05.022.05.02.053.016.053.014.055.01.055.007.055.005.055v.056l-.002.056-.005.055-.008.055-.01.055-.015.054-.017.054-.02.052-.023.05-.026.05-.028.048-.03.046-.035.044-.035.043-.038.04-4 4-.04.037-.04.036-.044.032-.045.03-.046.03-.048.024-.05.023-.05.02-.052.016-.052.015-.053.012-.054.01-.054.005-.055.003H8.97l-.053-.003-.054-.006-.054-.008-.054-.012-.052-.015-.052-.017-.05-.02-.05-.024-4-2-.048-.026-.048-.03-.046-.03-.044-.034-.042-.037-.04-.04-.037-.04-.036-.042-.032-.045-.03-.047-.028-.048-.025-.05-.022-.05-.02-.053-.016-.053-.014-.055-.01-.055-.007-.055L4 10.05v-.056l.002-.056.005-.055.008-.055.01-.055.015-.054.017-.054.02-.052.023-.05.026-.05.028-.048.03-.046.035-.044.035-.043.038-.04 4-4 .04-.037.04-.036.044-.032.045-.03.046-.03.048-.024.05-.023.05-.02.052-.016.052-.015.053-.012.054-.01.054-.005L8.976 5h.054zM5 10l4 2 4-4-4-2-4 4z\" fill=\"currentColor\"/><path d=\"M7.124 0C7.884 0 8.5.616 8.5 1.376v3.748c0 .76-.616 1.376-1.376 1.376H3.876c-.76 0-1.376-.616-1.376-1.376V1.376C2.5.616 3.116 0 3.876 0h3.248zm.56 5.295L5.965 1H5.05L3.375 5.295h.92l.354-.976h1.716l.375.975h.945zm-1.596-1.7l-.592-1.593-.58 1.594h1.172z\" fill=\"currentColor\"/></svg>';\n\ncreateStackedBarTrack.config = {\n  type: 'stacked-bar',\n  datatype: ['bedlike'],\n  orientation: '1d',\n  name: 'Advanced Stacked Bars Track',\n  thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n  availableOptions: [\n    'arcStyle',\n    'flip1D',\n    'labelPosition',\n    'labelColor',\n    'labelTextOpacity',\n    'labelBackgroundOpacity',\n    'strokeColor',\n    'strokeWidth',\n    'trackBorderWidth',\n    'trackBorderColor',\n  ],\n  defaultOptions: {\n    arcStyle: 'ellipse',\n    flip1D: 'no',\n    labelColor: 'black',\n    labelPosition: 'hidden',\n    strokeColor: 'black',\n    strokeWidth: 1,\n    trackBorderWidth: 0,\n    trackBorderColor: 'black',\n  },\n  optionsInfo: {\n    arcStyle: {\n      name: 'Arc Style',\n      inlineOptions: {\n        circle: {\n          name: 'Circle',\n          value: 'circle',\n        },\n        ellipse: {\n          name: 'Ellipse',\n          value: 'ellipse',\n        },\n      },\n    },\n  },\n};\n\nexport default createStackedBarTrack;\n","import createPubSub from 'pub-sub-es';\n\nfunction createTssTrack(HGC, ...args) {\n  if (!new.target) {\n    throw new Error(\n      'Uncaught TypeError: Class constructor cannot be invoked without \"new\"'\n    );\n  }\n\n  class TssTrack extends HGC.tracks.BedLikeTrack {\n    constructor(context, options) {\n      super(context, options);\n\n      const { publish, subscribe, unsubscribe } = createPubSub();\n      this.publish = publish;\n      this.subscribe = subscribe;\n      this.unsubscribe = unsubscribe;\n    }\n\n    drawPoly(tile, xStartPos, xEndPos, rectY, doubleRadius = false) {\n      // prettier-ignore\n      const drawnPoly = [\n        // left top\n        xStartPos, rectY,\n        // right top\n        xEndPos, rectY,\n        // right bottom\n        xEndPos, this.dimensions[1],\n         // left bottom\n        xStartPos, this.dimensions[1]\n      ];\n\n      const anchorRadius = 1;\n      const radius = 2;\n\n      tile.rectGraphics.drawCircle(\n        xStartPos,\n        this.finalDotYPos(rectY, anchorRadius),\n        radius\n      );\n\n      return drawnPoly;\n    }\n\n    renderRows(tile, rows, maxRows, startY, endY, fill) {\n      const zoomLevel = +tile.tileId.split('.')[0];\n\n      this.initialize();\n\n      const focusRegion = this.options.focusRegion || [Infinity, Infinity];\n\n      const circleDraws = [];\n      const circleFocusDraws = [];\n\n      for (let j = 0; j < rows.length; j++) {\n        for (let i = 0; i < rows[j].length; i++) {\n          const td = rows[j][i].value;\n          const geneInfo = td.fields;\n\n          // the returned positions are chromosome-based and they need to\n          // be converted to genome-based\n          const chrOffset = +td.chrOffset;\n          const txStart = +geneInfo[1] + chrOffset;\n          const txEnd = +geneInfo[2] + chrOffset;\n\n          const xStartPos = this._xScale(txStart);\n          const xEndPos = this._xScale(txEnd);\n\n          // don't draw anything that has already been drawn\n          if (\n            !(\n              zoomLevel in this.drawnRects &&\n              td.uid in this.drawnRects[zoomLevel]\n            )\n          ) {\n            if (!this.drawnRects[zoomLevel]) this.drawnRects[zoomLevel] = {};\n\n            const circleDraw = {\n              xStartScreen: xStartPos,\n              xEndScreen: xEndPos,\n              xStartAbs: txStart,\n              xEndAbs: txEnd,\n              data: td,\n            };\n\n            if (txStart <= focusRegion[1] && txEnd >= focusRegion[0]) {\n              circleFocusDraws.push(circleDraw);\n            } else {\n              circleDraws.push(circleDraw);\n            }\n          }\n        }\n\n        circleDraws.forEach((circleDraw) => {\n          this.publish('annotationDrawn', circleDraw);\n        });\n      }\n    }\n\n    rerender() {\n      // Monkey patch because TiledPixiTrack doesn't always fire correctly\n      this.draw();\n      this.pubSub.publish('TiledPixiTrack.tilesDrawnEnd', { uuid: this.uuid });\n    }\n\n    getMouseOverHtml() {\n      return '';\n    }\n  }\n\n  return new TssTrack(...args);\n}\n\ncreateTssTrack.config = {\n  type: 'tss',\n  datatype: ['bedlike'],\n};\n\nexport default createTssTrack;\n","import register from 'higlass-register';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport createAnnotationOverlayMetaTrack from './annotation-overlay-meta-track';\nimport createRidgePlotTrack from './ridge-plot-track';\nimport createStratifiedBedTrack from './stratified-bed-track';\nimport createScalableArcs1dTrack from './scalable-arcs-track';\nimport createSnpTrack from './snp-track';\nimport createStackedBarTrack from './stacked-bar-track';\nimport createTssTrack from './tss-track';\n\nimport './index.css';\n\nregister({\n  track: createRidgePlotTrack,\n  config: createRidgePlotTrack.config,\n});\n\nregister({\n  track: createScalableArcs1dTrack,\n  config: createScalableArcs1dTrack.config,\n});\n\nregister({\n  track: createStratifiedBedTrack,\n  config: createStratifiedBedTrack.config,\n});\n\nregister({\n  track: createSnpTrack,\n  config: createSnpTrack.config,\n});\n\nregister({\n  track: createStackedBarTrack,\n  config: createStackedBarTrack.config,\n});\n\nregister({\n  track: createTssTrack,\n  config: createTssTrack.config,\n});\n\nregister({\n  track: createAnnotationOverlayMetaTrack,\n  config: createAnnotationOverlayMetaTrack.config,\n  isMetaTrack: true,\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}